
.. _program_listing_file_engine_src_io_data_provider_GDFDataProvider.h:

Program Listing for File GDFDataProvider.h
==========================================

|exhale_lsh| :ref:`Return to documentation for file <file_engine_src_io_data_provider_GDFDataProvider.h>` (``engine/src/io/data_provider/GDFDataProvider.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   /*
    * uridataprovider.h
    *
    *  Created on: Nov 29, 2018
    *      Author: felipe
    */
   
   #ifndef GDFDATAPROVIDER_H_
   #define GDFDATAPROVIDER_H_
   
   #include "DataProvider.h"
   #include <arrow/io/interfaces.h>
   #include <blazingdb/io/FileSystem/Uri.h>
   #include <vector>
   #include <map>
   
   #include <memory>
   
   
   namespace ral {
   namespace io {
   class gdf_data_provider : public data_provider {
   public:
   
       gdf_data_provider(std::vector<ral::frame::BlazingTableView> table_views, std::vector<std::map<std::string,std::string> > column_values);
   
       std::shared_ptr<data_provider> clone() override; 
   
       virtual ~gdf_data_provider();
       bool has_next();
       void reset();
       data_handle get_next(bool open_file = true);
       
       std::vector<std::string> get_errors();
       
       std::vector<data_handle> get_some(std::size_t num_files, bool open_file = true);
   
       void close_file_handles();
   
       size_t get_num_handles();
   
   private:
       
       std::vector<ral::frame::BlazingTableView> table_views;
       size_t current_file;
       std::vector< std::map<std::string,std::string> > column_values;
   };
   
   } /* namespace io */
   } /* namespace ral */
   
   #endif /* GDFDATAPROVIDER_H_ */
