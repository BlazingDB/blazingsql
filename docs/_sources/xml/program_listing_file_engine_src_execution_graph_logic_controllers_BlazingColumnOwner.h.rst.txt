
.. _program_listing_file_engine_src_execution_graph_logic_controllers_BlazingColumnOwner.h:

Program Listing for File BlazingColumnOwner.h
=============================================

|exhale_lsh| :ref:`Return to documentation for file <file_engine_src_execution_graph_logic_controllers_BlazingColumnOwner.h>` (``engine/src/execution_graph/logic_controllers/BlazingColumnOwner.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include "execution_graph/logic_controllers/BlazingColumn.h"
   
   namespace ral {
   namespace frame {
   
   class BlazingColumnOwner : public BlazingColumn {
       public:
           BlazingColumnOwner() =default;
           BlazingColumnOwner(const BlazingColumn&) =delete;
           BlazingColumnOwner& operator=(const BlazingColumnOwner&) =delete;
           BlazingColumnOwner(std::unique_ptr<CudfColumn> column);
           ~BlazingColumnOwner() = default;
           CudfColumnView view() const {
               return column->view();
           }
           std::unique_ptr<CudfColumn> release() { return std::move(column); }
           blazing_column_type type() { return blazing_column_type::OWNER; }
           
       private:
           std::unique_ptr<CudfColumn> column;
   };
   
   
   }  // namespace frame
   }  // namespace ral
