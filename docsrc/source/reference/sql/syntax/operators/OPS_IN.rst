:code:`IN` operators
^^^^^^^^^^^^^^^^^^^^

**Supported datatypes:** :ref:`TINYINT<sql_dtypes>`, :ref:`SMALLINT<sql_dtypes>`, :ref:`INT<sql_dtypes>`, :ref:`BIGINT<sql_dtypes>`, :ref:`DECIMAL<sql_dtypes>`, :ref:`FLOAT<sql_dtypes>`, :ref:`DOUBLE<sql_dtypes>`
:ref:`TIMESTAMP<sql_dtypes>`, :ref:`VARCHAR<sql_dtypes>`, :ref:`BOOLEAN<sql_dtypes>`

The :code:`IN` operator compares the values in a column with a list of allowed 
literals or values returned from a subquery, and returns a :code:`TRUE` if the value is found.

Finding matches
~~~~~~~~~~~~~~~

The syntax flags all the values that are found on the list.

Examples
""""""""
Compare with a list of literals.

.. code-block:: sql

    SELECT <col_1> IN ('literal_1', 'literal_2')
    FROM <table_name>

Compare with a list generated by a subquery.

.. code-block:: sql

    SELECT <col_1> IN (
        SELECT <col_2>
        FROM <table_2>
    )
    FROM <table_1>

Inverting the matches
~~~~~~~~~~~~~~~~~~~~~

The syntax flags all the values that are found on the list.
The comparisons can also be negated thus flagging all the values
that are not found in the list 

.. code-block:: sql

    SELECT <col_1> NOT IN ('literal_1', 'literal_2')
    FROM <table_name>

or query 

.. code-block:: sql

    SELECT <col_1> NOT IN (
        SELECT <col_2>
        FROM <table_2>
    )
    FROM <table_1>