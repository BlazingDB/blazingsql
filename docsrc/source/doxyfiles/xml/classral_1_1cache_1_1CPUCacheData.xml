<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classral_1_1cache_1_1CPUCacheData" kind="class" language="C++" prot="public">
    <compoundname>ral::cache::CPUCacheData</compoundname>
    <basecompoundref refid="classral_1_1cache_1_1CacheData" prot="public" virt="non-virtual">ral::cache::CacheData</basecompoundref>
    <includes refid="CacheData_8h" local="no">CacheData.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classral_1_1cache_1_1CPUCacheData_1ae46ccefa906792a3b31bbd94e7fdcef1" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classral_1_1frame_1_1BlazingHostTable" kindref="compound">ral::frame::BlazingHostTable</ref> &gt;</type>
        <definition>std::unique_ptr&lt;ral::frame::BlazingHostTable&gt; ral::cache::CPUCacheData::host_table</definition>
        <argsstring></argsstring>
        <name>host_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The CPU representation of a DataFrame </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" line="400" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" bodystart="400" bodyend="-1"/>
        <referencedby refid="classral_1_1cache_1_1CPUCacheData_1a0b647a41636c90cd2992a2cc11994af1" compoundref="CacheData_8cpp" startline="110" endline="114">CPUCacheData</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classral_1_1cache_1_1CPUCacheData_1a0b647a41636c90cd2992a2cc11994af1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ral::cache::CPUCacheData::CPUCacheData</definition>
        <argsstring>(std::unique_ptr&lt; ral::frame::BlazingTable &gt; gpu_table, bool use_pinned=false)</argsstring>
        <name>CPUCacheData</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classral_1_1frame_1_1BlazingTable" kindref="compound">ral::frame::BlazingTable</ref> &gt;</type>
          <declname>gpu_table</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>use_pinned</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor Takes a GPU based <ref refid="classral_1_1frame_1_1BlazingTable" kindref="compound">ral::frame::BlazingTable</ref> and converts it CPU version that is stored in a <ref refid="classral_1_1frame_1_1BlazingHostTable" kindref="compound">ral::frame::BlazingHostTable</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>The BlazingTable that is converted to a BlazingHostTable and stored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" line="340" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.cpp" bodystart="110" bodyend="114"/>
        <references refid="classral_1_1cache_1_1CPUCacheData_1ae46ccefa906792a3b31bbd94e7fdcef1" compoundref="CacheData_8h" startline="400">host_table</references>
        <references refid="classral_1_1cache_1_1CacheData_1aaeb232ef3aa8c2a3d86e1169ed2e8152" compoundref="CacheData_8h" startline="251">ral::cache::CacheData::metadata</references>
      </memberdef>
      <memberdef kind="function" id="classral_1_1cache_1_1CPUCacheData_1a3d3d74db3db35f1f60008e7e28c5a5c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ral::cache::CPUCacheData::CPUCacheData</definition>
        <argsstring>(std::unique_ptr&lt; ral::frame::BlazingTable &gt; gpu_table, const MetadataDictionary &amp;metadata, bool use_pinned=false)</argsstring>
        <name>CPUCacheData</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classral_1_1frame_1_1BlazingTable" kindref="compound">ral::frame::BlazingTable</ref> &gt;</type>
          <declname>gpu_table</declname>
        </param>
        <param>
          <type>const <ref refid="classral_1_1cache_1_1MetadataDictionary" kindref="compound">MetadataDictionary</ref> &amp;</type>
          <declname>metadata</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>use_pinned</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" line="342" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.cpp" bodystart="116" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classral_1_1cache_1_1CPUCacheData_1a55d89069b138a46d2ea591546a26c6b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ral::cache::CPUCacheData::CPUCacheData</definition>
        <argsstring>(const std::vector&lt; blazingdb::transport::ColumnTransport &gt; &amp;column_transports, std::vector&lt; ral::memory::blazing_chunked_column_info &gt; &amp;&amp;chunked_column_infos, std::vector&lt; std::unique_ptr&lt; ral::memory::blazing_allocation_chunk &gt;&gt; &amp;&amp;allocations, const MetadataDictionary &amp;metadata)</argsstring>
        <name>CPUCacheData</name>
        <param>
          <type>const std::vector&lt; <ref refid="structblazingdb_1_1transport_1_1ColumnTransport" kindref="compound">blazingdb::transport::ColumnTransport</ref> &gt; &amp;</type>
          <declname>column_transports</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="structral_1_1memory_1_1blazing__chunked__column__info" kindref="compound">ral::memory::blazing_chunked_column_info</ref> &gt; &amp;&amp;</type>
          <declname>chunked_column_infos</declname>
        </param>
        <param>
          <type>std::vector&lt; std::unique_ptr&lt; <ref refid="structral_1_1memory_1_1blazing__allocation__chunk" kindref="compound">ral::memory::blazing_allocation_chunk</ref> &gt;&gt; &amp;&amp;</type>
          <declname>allocations</declname>
        </param>
        <param>
          <type>const <ref refid="classral_1_1cache_1_1MetadataDictionary" kindref="compound">MetadataDictionary</ref> &amp;</type>
          <declname>metadata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" line="344" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.cpp" bodystart="123" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classral_1_1cache_1_1CPUCacheData_1ae74c9b51edabc2aa06f8923c6f3afc5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ral::cache::CPUCacheData::CPUCacheData</definition>
        <argsstring>(std::unique_ptr&lt; ral::frame::BlazingHostTable &gt; host_table)</argsstring>
        <name>CPUCacheData</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classral_1_1frame_1_1BlazingHostTable" kindref="compound">ral::frame::BlazingHostTable</ref> &gt;</type>
          <declname>host_table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor Takes a GPU based <ref refid="classral_1_1frame_1_1BlazingHostTable" kindref="compound">ral::frame::BlazingHostTable</ref> and stores it in this <ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref> instance. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>The BlazingHostTable that is moved into the <ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" line="355" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.cpp" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classral_1_1cache_1_1CPUCacheData_1a03a18d3dfd4fe60dffdd0a9daabfbde2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::unique_ptr&lt; <ref refid="classral_1_1frame_1_1BlazingTable" kindref="compound">ral::frame::BlazingTable</ref> &gt;</type>
        <definition>std::unique_ptr&lt;ral::frame::BlazingTable&gt; ral::cache::CPUCacheData::decache</definition>
        <argsstring>() override</argsstring>
        <name>decache</name>
        <reimplements refid="classral_1_1cache_1_1CacheData_1a2db8fdd2151babd7a07f4c6e246b710c">decache</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Decache from a BlazingHostTable to BlazingTable and return the BlazingTable. <simplesect kind="return"><para>A unique_ptr to a BlazingTable </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" line="361" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" bodystart="361" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="classral_1_1cache_1_1CPUCacheData_1a817e6a8d23b4839f4e77c102a4ac0aad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classral_1_1frame_1_1BlazingHostTable" kindref="compound">ral::frame::BlazingHostTable</ref> &gt;</type>
        <definition>std::unique_ptr&lt;ral::frame::BlazingHostTable&gt; ral::cache::CPUCacheData::releaseHostTable</definition>
        <argsstring>()</argsstring>
        <name>releaseHostTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Release this BlazingHostTable from this <ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref> If you want to allow this <ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref> to be destroyed but want to keep the memory in CPU this allows you to pull it out as a BlazingHostTable. <simplesect kind="return"><para>a unique_ptr to the BlazingHostTable that this was either constructed with or which was generated during construction from a BlazingTable. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" line="373" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" bodystart="373" bodyend="375"/>
        <referencedby refid="classcomm_1_1message__sender_1af686fdcc4f5d1c078f02ff1988725c06" compoundref="messageSender_8cpp" startline="60" endline="188">comm::message_sender::run_polling</referencedby>
      </memberdef>
      <memberdef kind="function" id="classral_1_1cache_1_1CPUCacheData_1a83236d09b1d2341059d1a6738839d35c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>size_t</type>
        <definition>size_t ral::cache::CPUCacheData::sizeInBytes</definition>
        <argsstring>() const override</argsstring>
        <name>sizeInBytes</name>
        <reimplements refid="classral_1_1cache_1_1CacheData_1aaad8a726296574845f01f9380dcee40d">sizeInBytes</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the amount of CPU memory consumed by this <ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref> Having this function allows us to have one api for seeing the consumption of all the <ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref> objects that are currently in Caches. <simplesect kind="return"><para>The number of bytes the BlazingHostTable consumes. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" line="383" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" bodystart="383" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="classral_1_1cache_1_1CPUCacheData_1a3d0444ff9ba0814775499060071a2d1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void ral::cache::CPUCacheData::set_names</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;names) override</argsstring>
        <name>set_names</name>
        <reimplements refid="classral_1_1cache_1_1CacheData_1a3bb1623a4266ba7c961d325023ff13c6">set_names</reimplements>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>names</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the names of the columns of a BlazingHostTable. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>names</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector of the column names. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" line="389" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" bodystart="389" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="classral_1_1cache_1_1CPUCacheData_1acae066424ccf0651bcb17f54aa770bbb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual ral::cache::CPUCacheData::~CPUCacheData</definition>
        <argsstring>()</argsstring>
        <name>~CPUCacheData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" line="397" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" bodystart="397" bodyend="397"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A <ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref> that keeps its dataframe in CPU memory. This is a <ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref> representation that wraps a <ref refid="classral_1_1frame_1_1BlazingHostTable" kindref="compound">ral::frame::BlazingHostTable</ref>. It is the more performant than most file based caching strategies but less efficient than a <ref refid="classral_1_1cache_1_1GPUCacheData" kindref="compound">GPUCacheData</ref>. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="144">
        <label>ral::cache::CacheData</label>
        <link refid="classral_1_1cache_1_1CacheData"/>
      </node>
      <node id="143">
        <label>ral::cache::CPUCacheData</label>
        <link refid="classral_1_1cache_1_1CPUCacheData"/>
        <childnode refid="144" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="146">
        <label>ral::cache::CacheData</label>
        <link refid="classral_1_1cache_1_1CacheData"/>
        <childnode refid="147" relation="usage">
          <edgelabel>metadata</edgelabel>
        </childnode>
      </node>
      <node id="147">
        <label>ral::cache::MetadataDictionary</label>
        <link refid="classral_1_1cache_1_1MetadataDictionary"/>
      </node>
      <node id="145">
        <label>ral::cache::CPUCacheData</label>
        <link refid="classral_1_1cache_1_1CPUCacheData"/>
        <childnode refid="146" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" line="331" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" bodystart="331" bodyend="401"/>
    <listofallmembers>
      <member refid="classral_1_1cache_1_1CacheData_1acf9d130e22baac61d4689c52e36b9c17" prot="protected" virt="non-virtual"><scope>ral::cache::CPUCacheData</scope><name>cache_type</name></member>
      <member refid="classral_1_1cache_1_1CacheData_1a257a4e0a13e894093e8ae37da1612c62" prot="public" virt="non-virtual"><scope>ral::cache::CPUCacheData</scope><name>CacheData</name></member>
      <member refid="classral_1_1cache_1_1CacheData_1a7967efd36e3cbf3b35b7010f138fcbce" prot="public" virt="non-virtual"><scope>ral::cache::CPUCacheData</scope><name>CacheData</name></member>
      <member refid="classral_1_1cache_1_1CacheData_1a7a43a46a362c8fe93a7af81debbeca1b" prot="protected" virt="non-virtual"><scope>ral::cache::CPUCacheData</scope><name>col_names</name></member>
      <member refid="classral_1_1cache_1_1CPUCacheData_1a0b647a41636c90cd2992a2cc11994af1" prot="public" virt="non-virtual"><scope>ral::cache::CPUCacheData</scope><name>CPUCacheData</name></member>
      <member refid="classral_1_1cache_1_1CPUCacheData_1a3d3d74db3db35f1f60008e7e28c5a5c6" prot="public" virt="non-virtual"><scope>ral::cache::CPUCacheData</scope><name>CPUCacheData</name></member>
      <member refid="classral_1_1cache_1_1CPUCacheData_1a55d89069b138a46d2ea591546a26c6b5" prot="public" virt="non-virtual"><scope>ral::cache::CPUCacheData</scope><name>CPUCacheData</name></member>
      <member refid="classral_1_1cache_1_1CPUCacheData_1ae74c9b51edabc2aa06f8923c6f3afc5f" prot="public" virt="non-virtual"><scope>ral::cache::CPUCacheData</scope><name>CPUCacheData</name></member>
      <member refid="classral_1_1cache_1_1CPUCacheData_1a03a18d3dfd4fe60dffdd0a9daabfbde2" prot="public" virt="virtual"><scope>ral::cache::CPUCacheData</scope><name>decache</name></member>
      <member refid="classral_1_1cache_1_1CacheData_1af70878c08fae1935cd0a39999cabf6fb" prot="public" virt="non-virtual"><scope>ral::cache::CPUCacheData</scope><name>downgradeCacheData</name></member>
      <member refid="classral_1_1cache_1_1CacheData_1a747bc7b9113756471ce8a7bce2c46689" prot="public" virt="non-virtual"><scope>ral::cache::CPUCacheData</scope><name>get_schema</name></member>
      <member refid="classral_1_1cache_1_1CacheData_1a6669c7c34305f2099cede2be98433604" prot="public" virt="non-virtual"><scope>ral::cache::CPUCacheData</scope><name>get_type</name></member>
      <member refid="classral_1_1cache_1_1CacheData_1a7e3fea5c3558948f4c461998f7ef434b" prot="public" virt="non-virtual"><scope>ral::cache::CPUCacheData</scope><name>getMetadata</name></member>
      <member refid="classral_1_1cache_1_1CPUCacheData_1ae46ccefa906792a3b31bbd94e7fdcef1" prot="protected" virt="non-virtual"><scope>ral::cache::CPUCacheData</scope><name>host_table</name></member>
      <member refid="classral_1_1cache_1_1CacheData_1aaeb232ef3aa8c2a3d86e1169ed2e8152" prot="protected" virt="non-virtual"><scope>ral::cache::CPUCacheData</scope><name>metadata</name></member>
      <member refid="classral_1_1cache_1_1CacheData_1a4cdddfb8e552e0e3e91877ae80e5fc9e" prot="protected" virt="non-virtual"><scope>ral::cache::CPUCacheData</scope><name>n_rows</name></member>
      <member refid="classral_1_1cache_1_1CacheData_1aa2c8d58823d781cc1f8e6e589d897642" prot="public" virt="non-virtual"><scope>ral::cache::CPUCacheData</scope><name>names</name></member>
      <member refid="classral_1_1cache_1_1CacheData_1acddfe8617004fc875fff972ae5b1f616" prot="public" virt="non-virtual"><scope>ral::cache::CPUCacheData</scope><name>num_columns</name></member>
      <member refid="classral_1_1cache_1_1CacheData_1a14a5b9fadf872c12d633e38bb6f9f07d" prot="public" virt="non-virtual"><scope>ral::cache::CPUCacheData</scope><name>num_rows</name></member>
      <member refid="classral_1_1cache_1_1CPUCacheData_1a817e6a8d23b4839f4e77c102a4ac0aad" prot="public" virt="non-virtual"><scope>ral::cache::CPUCacheData</scope><name>releaseHostTable</name></member>
      <member refid="classral_1_1cache_1_1CacheData_1aec9a1b3c0fb78cfdb3bd5494bcee2d8f" prot="protected" virt="non-virtual"><scope>ral::cache::CPUCacheData</scope><name>schema</name></member>
      <member refid="classral_1_1cache_1_1CPUCacheData_1a3d0444ff9ba0814775499060071a2d1a" prot="public" virt="virtual"><scope>ral::cache::CPUCacheData</scope><name>set_names</name></member>
      <member refid="classral_1_1cache_1_1CPUCacheData_1a83236d09b1d2341059d1a6738839d35c" prot="public" virt="virtual"><scope>ral::cache::CPUCacheData</scope><name>sizeInBytes</name></member>
      <member refid="classral_1_1cache_1_1CacheData_1ac66a4910198d677594609b455c4ecde8" prot="public" virt="virtual"><scope>ral::cache::CPUCacheData</scope><name>~CacheData</name></member>
      <member refid="classral_1_1cache_1_1CPUCacheData_1acae066424ccf0651bcb17f54aa770bbb" prot="public" virt="virtual"><scope>ral::cache::CPUCacheData</scope><name>~CPUCacheData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
