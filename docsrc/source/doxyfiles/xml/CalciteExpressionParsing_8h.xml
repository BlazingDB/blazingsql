<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="CalciteExpressionParsing_8h" kind="file" language="C++">
    <compoundname>CalciteExpressionParsing.h</compoundname>
    <includes local="yes">cudf/types.hpp</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includedby refid="CalciteExpressionParsing_8cpp" local="yes">/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.cpp</includedby>
    <includedby refid="expression__tree_8hpp" local="yes">/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/parser/expression_tree.hpp</includedby>
    <includedby refid="primitives_8cpp" local="yes">/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/distribution/primitives.cpp</includedby>
    <includedby refid="CacheData_8cpp" local="yes">/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.cpp</includedby>
    <includedby refid="CacheMachine_8cpp" local="yes">/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheMachine.cpp</includedby>
    <includedby refid="DataLoader_8cpp" local="yes">/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/DataLoader.cpp</includedby>
    <includedby refid="GroupBy_8cpp" local="yes">/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/operators/GroupBy.cpp</includedby>
    <includedby refid="OrderBy_8cpp" local="yes">/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/operators/OrderBy.cpp</includedby>
    <includedby refid="expression__utils_8cpp" local="yes">/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/parser/expression_utils.cpp</includedby>
    <includedby refid="SkipDataProcessor_8cpp" local="yes">/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/skip_data/SkipDataProcessor.cpp</includedby>
    <includedby refid="CommonOperations_8cpp" local="yes">/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/utilities/CommonOperations.cpp</includedby>
    <incdepgraph>
      <node id="335">
        <label>string</label>
      </node>
      <node id="336">
        <label>vector</label>
      </node>
      <node id="334">
        <label>cudf/types.hpp</label>
      </node>
      <node id="333">
        <label>/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.h</label>
        <link refid="CalciteExpressionParsing_8h"/>
        <childnode refid="334" relation="include">
        </childnode>
        <childnode refid="335" relation="include">
        </childnode>
        <childnode refid="336" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="339">
        <label>/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/skip_data/SkipDataProcessor.h</label>
        <link refid="SkipDataProcessor_8h_source"/>
      </node>
      <node id="337">
        <label>/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.h</label>
        <link refid="CalciteExpressionParsing_8h"/>
        <childnode refid="338" relation="include">
        </childnode>
      </node>
      <node id="340">
        <label>/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/Interpreter/interpreter_cpp.h</label>
        <link refid="interpreter__cpp_8h_source"/>
      </node>
      <node id="338">
        <label>/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/parser/expression_tree.hpp</label>
        <link refid="expression__tree_8hpp_source"/>
        <childnode refid="339" relation="include">
        </childnode>
        <childnode refid="340" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="CalciteExpressionParsing_8h_1ad6a7007ab3c8e8473b26290bf8a45224" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_type_float</definition>
        <argsstring>(cudf::type_id type)</argsstring>
        <name>is_type_float</name>
        <param>
          <type>cudf::type_id</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.h" line="7" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.cpp" bodystart="24" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="CalciteExpressionParsing_8h_1a70d96f69856c00dd66a6cb2e29b04a0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_type_integer</definition>
        <argsstring>(cudf::type_id type)</argsstring>
        <name>is_type_integer</name>
        <param>
          <type>cudf::type_id</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.h" line="8" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.cpp" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="CalciteExpressionParsing_8h_1add91d6583500ed618b683908adbcd9d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_type_bool</definition>
        <argsstring>(cudf::type_id type)</argsstring>
        <name>is_type_bool</name>
        <param>
          <type>cudf::type_id</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.h" line="9" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.cpp" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="CalciteExpressionParsing_8h_1a1f19d4b8aab24ad6bd20c38b89845f1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_type_timestamp</definition>
        <argsstring>(cudf::type_id type)</argsstring>
        <name>is_type_timestamp</name>
        <param>
          <type>cudf::type_id</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.h" line="10" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.cpp" bodystart="33" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="CalciteExpressionParsing_8h_1aa9e7eab73fe2077667b40a97422b9621" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_type_string</definition>
        <argsstring>(cudf::type_id type)</argsstring>
        <name>is_type_string</name>
        <param>
          <type>cudf::type_id</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.h" line="11" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.cpp" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="CalciteExpressionParsing_8h_1ae82256997677ac5d9716140bfc75a965" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cudf::size_type</type>
        <definition>cudf::size_type get_index</definition>
        <argsstring>(const std::string &amp;operand_string)</argsstring>
        <name>get_index</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>operand_string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.h" line="13" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.cpp" bodystart="41" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="CalciteExpressionParsing_8h_1a16ab6f33339b397615c5fd7380bbfc55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string expand_if_logical_op</definition>
        <argsstring>(std::string expression)</argsstring>
        <name>expand_if_logical_op</name>
        <param>
          <type>std::string</type>
          <declname>expression</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.h" line="16" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.cpp" bodystart="222" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="CalciteExpressionParsing_8h_1a774174506cadfc9987816e9d95df05d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string clean_calcite_expression</definition>
        <argsstring>(const std::string &amp;expression)</argsstring>
        <name>clean_calcite_expression</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>expression</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.h" line="18" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.cpp" bodystart="293" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="CalciteExpressionParsing_8h_1a060bd9d2bb4f60aab4c38a1c4bf1e358" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; get_tokens_in_reverse_order</definition>
        <argsstring>(const std::string &amp;expression)</argsstring>
        <name>get_tokens_in_reverse_order</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>expression</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.h" line="20" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.cpp" bodystart="169" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="CalciteExpressionParsing_8h_1adc1a9ca33720d06aaef1f5cfca885677" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string get_aggregation_operation_string</definition>
        <argsstring>(std::string operator_expression)</argsstring>
        <name>get_aggregation_operation_string</name>
        <param>
          <type>std::string</type>
          <declname>operator_expression</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.h" line="22" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.cpp" bodystart="156" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="CalciteExpressionParsing_8h_1a822ceb68fbb4bd6d6b78c33c3df2ebee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string get_string_between_outer_parentheses</definition>
        <argsstring>(std::string operator_string)</argsstring>
        <name>get_string_between_outer_parentheses</name>
        <param>
          <type>std::string</type>
          <declname>operator_string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.h" line="24" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.cpp" bodystart="318" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="CalciteExpressionParsing_8h_1abdba8cb9205076d65b966688e33c8573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; cudf::scalar &gt;</type>
        <definition>std::unique_ptr&lt;cudf::scalar&gt; get_max_integer_scalar</definition>
        <argsstring>(cudf::data_type type)</argsstring>
        <name>get_max_integer_scalar</name>
        <param>
          <type>cudf::data_type</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.h" line="26" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.cpp" bodystart="48" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="CalciteExpressionParsing_8h_1a70c2a2177f4613c6318b374246b084fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; cudf::scalar &gt;</type>
        <definition>std::unique_ptr&lt;cudf::scalar&gt; get_scalar_from_string</definition>
        <argsstring>(const std::string &amp;scalar_string, cudf::data_type type, bool strings_have_quotes=true)</argsstring>
        <name>get_scalar_from_string</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>scalar_string</declname>
        </param>
        <param>
          <type>cudf::data_type</type>
          <declname>type</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>strings_have_quotes</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.h" line="28" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.cpp" bodystart="81" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="CalciteExpressionParsing_8h_1aaffe8adbb74cbdedf9c6313029e5d7ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int count_string_occurrence</definition>
        <argsstring>(std::string haystack, std::string needle)</argsstring>
        <name>count_string_occurrence</name>
        <param>
          <type>std::string</type>
          <declname>haystack</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>needle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.h" line="30" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.cpp" bodystart="330" bodyend="339"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cudf/types.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_type_float(cudf::type_id<sp/>type);</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_type_integer(cudf::type_id<sp/>type);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_type_bool(cudf::type_id<sp/>type)<sp/>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_type_timestamp(cudf::type_id<sp/>type);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_type_string(cudf::type_id<sp/>type);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">cudf::size_type<sp/>get_index(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>operand_string);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>interprets<sp/>the<sp/>expression<sp/>and<sp/>if<sp/>is<sp/>n-ary<sp/>and<sp/>logical,<sp/>then<sp/>returns<sp/>their<sp/>corresponding<sp/>binary<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">std::string<sp/>expand_if_logical_op(std::string<sp/>expression);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">std::string<sp/>clean_calcite_expression(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>expression);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal">std::vector&lt;std::string&gt;<sp/>get_tokens_in_reverse_order(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>expression);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">std::string<sp/>get_aggregation_operation_string(std::string<sp/>operator_expression);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">std::string<sp/>get_string_between_outer_parentheses(std::string<sp/>operator_string);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">std::unique_ptr&lt;cudf::scalar&gt;<sp/>get_max_integer_scalar(cudf::data_type<sp/>type);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">std::unique_ptr&lt;cudf::scalar&gt;<sp/>get_scalar_from_string(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>scalar_string,<sp/>cudf::data_type<sp/>type,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>strings_have_quotes<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count_string_occurrence(std::string<sp/>haystack,<sp/>std::string<sp/>needle);</highlight></codeline>
    </programlisting>
    <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/CalciteExpressionParsing.h"/>
  </compounddef>
</doxygen>
