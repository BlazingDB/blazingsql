<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="BatchOrderByProcessing_8cpp" kind="file" language="C++">
    <compoundname>BatchOrderByProcessing.cpp</compoundname>
    <includes refid="BatchOrderByProcessing_8h" local="yes">BatchOrderByProcessing.h</includes>
    <includes refid="CodeTimer_8h" local="yes">CodeTimer.h</includes>
    <includes refid="CommonOperations_8h" local="no">src/utilities/CommonOperations.h</includes>
    <includes refid="executor_8h" local="yes">taskflow/executor.h</includes>
    <includes refid="expression__utils_8hpp" local="yes">parser/expression_utils.hpp</includes>
    <incdepgraph>
      <node id="2634">
        <label>atomic</label>
      </node>
      <node id="2675">
        <label>config/GPUManager.cuh</label>
      </node>
      <node id="2670">
        <label>rmm/mr/device/managed_memory_resource.hpp</label>
      </node>
      <node id="2711">
        <label>functional</label>
      </node>
      <node id="2714">
        <label>queue</label>
      </node>
      <node id="2633">
        <label>CacheMachine.h</label>
        <link refid="CacheMachine_8h_source"/>
        <childnode refid="2634" relation="include">
        </childnode>
        <childnode refid="2635" relation="include">
        </childnode>
        <childnode refid="2636" relation="include">
        </childnode>
        <childnode refid="2637" relation="include">
        </childnode>
        <childnode refid="2632" relation="include">
        </childnode>
        <childnode refid="2638" relation="include">
        </childnode>
        <childnode refid="2639" relation="include">
        </childnode>
        <childnode refid="2640" relation="include">
        </childnode>
        <childnode refid="2641" relation="include">
        </childnode>
        <childnode refid="2642" relation="include">
        </childnode>
        <childnode refid="2643" relation="include">
        </childnode>
        <childnode refid="2647" relation="include">
        </childnode>
        <childnode refid="2649" relation="include">
        </childnode>
        <childnode refid="2660" relation="include">
        </childnode>
        <childnode refid="2662" relation="include">
        </childnode>
        <childnode refid="2678" relation="include">
        </childnode>
        <childnode refid="2646" relation="include">
        </childnode>
        <childnode refid="2679" relation="include">
        </childnode>
        <childnode refid="2689" relation="include">
        </childnode>
        <childnode refid="2692" relation="include">
        </childnode>
        <childnode refid="2701" relation="include">
        </childnode>
        <childnode refid="2702" relation="include">
        </childnode>
      </node>
      <node id="2649">
        <label>execution_graph/logic_controllers/LogicPrimitives.h</label>
        <link refid="LogicPrimitives_8h_source"/>
        <childnode refid="2650" relation="include">
        </childnode>
        <childnode refid="2651" relation="include">
        </childnode>
        <childnode refid="2636" relation="include">
        </childnode>
        <childnode refid="2638" relation="include">
        </childnode>
        <childnode refid="2639" relation="include">
        </childnode>
        <childnode refid="2652" relation="include">
        </childnode>
        <childnode refid="2654" relation="include">
        </childnode>
      </node>
      <node id="2687">
        <label>cudf/scalar/scalar_device_view.cuh</label>
      </node>
      <node id="2692">
        <label>communication/messages/GPUComponentMessage.h</label>
        <link refid="GPUComponentMessage_8h_source"/>
        <childnode refid="2641" relation="include">
        </childnode>
        <childnode refid="2680" relation="include">
        </childnode>
        <childnode refid="2681" relation="include">
        </childnode>
        <childnode refid="2682" relation="include">
        </childnode>
        <childnode refid="2655" relation="include">
        </childnode>
        <childnode refid="2661" relation="include">
        </childnode>
        <childnode refid="2693" relation="include">
        </childnode>
        <childnode refid="2640" relation="include">
        </childnode>
        <childnode refid="2636" relation="include">
        </childnode>
        <childnode refid="2632" relation="include">
        </childnode>
        <childnode refid="2694" relation="include">
        </childnode>
        <childnode refid="2695" relation="include">
        </childnode>
        <childnode refid="2696" relation="include">
        </childnode>
        <childnode refid="2697" relation="include">
        </childnode>
        <childnode refid="2653" relation="include">
        </childnode>
        <childnode refid="2698" relation="include">
        </childnode>
        <childnode refid="2699" relation="include">
        </childnode>
        <childnode refid="2642" relation="include">
        </childnode>
        <childnode refid="2700" relation="include">
        </childnode>
        <childnode refid="2649" relation="include">
        </childnode>
        <childnode refid="2654" relation="include">
        </childnode>
      </node>
      <node id="2676">
        <label>sys/sysinfo.h</label>
      </node>
      <node id="2685">
        <label>cudf/scalar/scalar_factories.hpp</label>
      </node>
      <node id="2717">
        <label>operators/OrderBy.h</label>
        <link refid="OrderBy_8h_source"/>
        <childnode refid="2641" relation="include">
        </childnode>
        <childnode refid="2680" relation="include">
        </childnode>
        <childnode refid="2681" relation="include">
        </childnode>
        <childnode refid="2682" relation="include">
        </childnode>
        <childnode refid="2660" relation="include">
        </childnode>
        <childnode refid="2638" relation="include">
        </childnode>
        <childnode refid="2639" relation="include">
        </childnode>
        <childnode refid="2695" relation="include">
        </childnode>
        <childnode refid="2649" relation="include">
        </childnode>
      </node>
      <node id="2705">
        <label>kernel_type.h</label>
        <link refid="kernel__type_8h_source"/>
        <childnode refid="2638" relation="include">
        </childnode>
      </node>
      <node id="2656">
        <label>cstdint</label>
      </node>
      <node id="2668">
        <label>rmm/mr/device/owning_wrapper.hpp</label>
      </node>
      <node id="2673">
        <label>rmm/mr/device/logging_resource_adaptor.hpp</label>
      </node>
      <node id="2652">
        <label>execution_graph/logic_controllers/BlazingColumn.h</label>
        <link refid="BlazingColumn_8h_source"/>
        <childnode refid="2653" relation="include">
        </childnode>
        <childnode refid="2650" relation="include">
        </childnode>
        <childnode refid="2651" relation="include">
        </childnode>
        <childnode refid="2636" relation="include">
        </childnode>
        <childnode refid="2638" relation="include">
        </childnode>
        <childnode refid="2639" relation="include">
        </childnode>
      </node>
      <node id="2661">
        <label>transport/Node.h</label>
        <link refid="Node_8h_source"/>
        <childnode refid="2636" relation="include">
        </childnode>
        <childnode refid="2638" relation="include">
        </childnode>
      </node>
      <node id="2629">
        <label>/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/BatchOrderByProcessing.cpp</label>
        <link refid="BatchOrderByProcessing_8cpp"/>
        <childnode refid="2630" relation="include">
        </childnode>
        <childnode refid="2647" relation="include">
        </childnode>
        <childnode refid="2721" relation="include">
        </childnode>
        <childnode refid="2722" relation="include">
        </childnode>
        <childnode refid="2723" relation="include">
        </childnode>
      </node>
      <node id="2696">
        <label>cudf/copying.hpp</label>
      </node>
      <node id="2643">
        <label>error.hpp</label>
        <link refid="error_8hpp_source"/>
        <childnode refid="2644" relation="include">
        </childnode>
        <childnode refid="2639" relation="include">
        </childnode>
        <childnode refid="2645" relation="include">
        </childnode>
        <childnode refid="2646" relation="include">
        </childnode>
      </node>
      <node id="2663">
        <label>cassert</label>
      </node>
      <node id="2669">
        <label>rmm/mr/device/cuda_memory_resource.hpp</label>
      </node>
      <node id="2672">
        <label>rmm/mr/device/arena_memory_resource.hpp</label>
      </node>
      <node id="2694">
        <label>numeric</label>
      </node>
      <node id="2666">
        <label>rmm/cuda_stream_view.hpp</label>
      </node>
      <node id="2638">
        <label>string</label>
      </node>
      <node id="2631">
        <label>BatchProcessing.h</label>
        <link refid="BatchProcessing_8h_source"/>
        <childnode refid="2632" relation="include">
        </childnode>
        <childnode refid="2633" relation="include">
        </childnode>
        <childnode refid="2703" relation="include">
        </childnode>
        <childnode refid="2690" relation="include">
        </childnode>
        <childnode refid="2715" relation="include">
        </childnode>
        <childnode refid="2704" relation="include">
        </childnode>
        <childnode refid="2649" relation="include">
        </childnode>
      </node>
      <node id="2724">
        <label>cudf/aggregation.hpp</label>
      </node>
      <node id="2640">
        <label>map</label>
      </node>
      <node id="2698">
        <label>cudf/null_mask.hpp</label>
      </node>
      <node id="2630">
        <label>BatchOrderByProcessing.h</label>
        <link refid="BatchOrderByProcessing_8h_source"/>
        <childnode refid="2631" relation="include">
        </childnode>
        <childnode refid="2678" relation="include">
        </childnode>
        <childnode refid="2717" relation="include">
        </childnode>
        <childnode refid="2718" relation="include">
        </childnode>
      </node>
      <node id="2707">
        <label>kpair.h</label>
        <link refid="kpair_8h_source"/>
        <childnode refid="2706" relation="include">
        </childnode>
        <childnode refid="2704" relation="include">
        </childnode>
      </node>
      <node id="2719">
        <label>distribution/primitives.h</label>
        <link refid="primitives_8h_source"/>
        <childnode refid="2660" relation="include">
        </childnode>
        <childnode refid="2720" relation="include">
        </childnode>
        <childnode refid="2639" relation="include">
        </childnode>
        <childnode refid="2649" relation="include">
        </childnode>
      </node>
      <node id="2681">
        <label>spdlog/sinks/basic_file_sink.h</label>
      </node>
      <node id="2654">
        <label>BlazingHostTable.h</label>
        <link refid="BlazingHostTable_8h_source"/>
        <childnode refid="2639" relation="include">
        </childnode>
        <childnode refid="2638" relation="include">
        </childnode>
        <childnode refid="2636" relation="include">
        </childnode>
        <childnode refid="2642" relation="include">
        </childnode>
        <childnode refid="2655" relation="include">
        </childnode>
        <childnode refid="2657" relation="include">
        </childnode>
        <childnode refid="2649" relation="include">
        </childnode>
      </node>
      <node id="2646">
        <label>exception</label>
      </node>
      <node id="2702">
        <label>WaitingQueue.h</label>
        <link refid="WaitingQueue_8h_source"/>
        <childnode refid="2634" relation="include">
        </childnode>
        <childnode refid="2635" relation="include">
        </childnode>
        <childnode refid="2636" relation="include">
        </childnode>
        <childnode refid="2637" relation="include">
        </childnode>
        <childnode refid="2632" relation="include">
        </childnode>
        <childnode refid="2638" relation="include">
        </childnode>
        <childnode refid="2639" relation="include">
        </childnode>
        <childnode refid="2640" relation="include">
        </childnode>
        <childnode refid="2641" relation="include">
        </childnode>
        <childnode refid="2646" relation="include">
        </childnode>
      </node>
      <node id="2660">
        <label>execution_graph/Context.h</label>
        <link refid="Context_8h_source"/>
        <childnode refid="2639" relation="include">
        </childnode>
        <childnode refid="2640" relation="include">
        </childnode>
        <childnode refid="2632" relation="include">
        </childnode>
        <childnode refid="2661" relation="include">
        </childnode>
      </node>
      <node id="2701">
        <label>CacheData.h</label>
        <link refid="CacheData_8h_source"/>
        <childnode refid="2634" relation="include">
        </childnode>
        <childnode refid="2635" relation="include">
        </childnode>
        <childnode refid="2636" relation="include">
        </childnode>
        <childnode refid="2637" relation="include">
        </childnode>
        <childnode refid="2632" relation="include">
        </childnode>
        <childnode refid="2638" relation="include">
        </childnode>
        <childnode refid="2639" relation="include">
        </childnode>
        <childnode refid="2640" relation="include">
        </childnode>
        <childnode refid="2641" relation="include">
        </childnode>
        <childnode refid="2642" relation="include">
        </childnode>
        <childnode refid="2643" relation="include">
        </childnode>
        <childnode refid="2647" relation="include">
        </childnode>
        <childnode refid="2649" relation="include">
        </childnode>
        <childnode refid="2660" relation="include">
        </childnode>
        <childnode refid="2662" relation="include">
        </childnode>
        <childnode refid="2678" relation="include">
        </childnode>
        <childnode refid="2646" relation="include">
        </childnode>
        <childnode refid="2679" relation="include">
        </childnode>
        <childnode refid="2689" relation="include">
        </childnode>
        <childnode refid="2692" relation="include">
        </childnode>
      </node>
      <node id="2679">
        <label>io/data_provider/DataProvider.h</label>
        <link refid="DataProvider_8h_source"/>
        <childnode refid="2641" relation="include">
        </childnode>
        <childnode refid="2680" relation="include">
        </childnode>
        <childnode refid="2681" relation="include">
        </childnode>
        <childnode refid="2682" relation="include">
        </childnode>
        <childnode refid="2683" relation="include">
        </childnode>
        <childnode refid="2684" relation="include">
        </childnode>
        <childnode refid="2685" relation="include">
        </childnode>
        <childnode refid="2642" relation="include">
        </childnode>
        <childnode refid="2686" relation="include">
        </childnode>
        <childnode refid="2687" relation="include">
        </childnode>
        <childnode refid="2640" relation="include">
        </childnode>
        <childnode refid="2636" relation="include">
        </childnode>
        <childnode refid="2639" relation="include">
        </childnode>
        <childnode refid="2688" relation="include">
        </childnode>
        <childnode refid="2649" relation="include">
        </childnode>
      </node>
      <node id="2721">
        <label>src/utilities/CommonOperations.h</label>
        <link refid="CommonOperations_8h_source"/>
        <childnode refid="2638" relation="include">
        </childnode>
        <childnode refid="2639" relation="include">
        </childnode>
        <childnode refid="2649" relation="include">
        </childnode>
        <childnode refid="2699" relation="include">
        </childnode>
      </node>
      <node id="2700">
        <label>cudf/strings/strings_column_view.hpp</label>
      </node>
      <node id="2641">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="2723">
        <label>parser/expression_utils.hpp</label>
        <link refid="expression__utils_8hpp_source"/>
        <childnode refid="2640" relation="include">
        </childnode>
        <childnode refid="2638" relation="include">
        </childnode>
        <childnode refid="2639" relation="include">
        </childnode>
        <childnode refid="2642" relation="include">
        </childnode>
        <childnode refid="2724" relation="include">
        </childnode>
      </node>
      <node id="2651">
        <label>cudf/table/table_view.hpp</label>
      </node>
      <node id="2710">
        <label>utilities/ctpl_stl.h</label>
        <link refid="ctpl__stl_8h_source"/>
        <childnode refid="2711" relation="include">
        </childnode>
        <childnode refid="2712" relation="include">
        </childnode>
        <childnode refid="2634" relation="include">
        </childnode>
        <childnode refid="2639" relation="include">
        </childnode>
        <childnode refid="2636" relation="include">
        </childnode>
        <childnode refid="2646" relation="include">
        </childnode>
        <childnode refid="2713" relation="include">
        </childnode>
        <childnode refid="2632" relation="include">
        </childnode>
        <childnode refid="2714" relation="include">
        </childnode>
      </node>
      <node id="2690">
        <label>../Schema.h</label>
        <link refid="Schema_8h_source"/>
        <childnode refid="2638" relation="include">
        </childnode>
        <childnode refid="2639" relation="include">
        </childnode>
        <childnode refid="2642" relation="include">
        </childnode>
        <childnode refid="2649" relation="include">
        </childnode>
      </node>
      <node id="2683">
        <label>arrow/io/interfaces.h</label>
      </node>
      <node id="2637">
        <label>condition_variable</label>
      </node>
      <node id="2709">
        <label>ExceptionHandling/BlazingThread.h</label>
      </node>
      <node id="2693">
        <label>communication/messages/MessageUtil.cuh</label>
      </node>
      <node id="2677">
        <label>sys/statvfs.h</label>
      </node>
      <node id="2686">
        <label>cudf/utilities/type_dispatcher.hpp</label>
      </node>
      <node id="2695">
        <label>tuple</label>
      </node>
      <node id="2713">
        <label>future</label>
      </node>
      <node id="2680">
        <label>spdlog/async.h</label>
      </node>
      <node id="2704">
        <label>kernel.h</label>
        <link refid="kernel_8h_source"/>
        <childnode refid="2705" relation="include">
        </childnode>
        <childnode refid="2706" relation="include">
        </childnode>
        <childnode refid="2703" relation="include">
        </childnode>
      </node>
      <node id="2658">
        <label>stack</label>
      </node>
      <node id="2639">
        <label>vector</label>
      </node>
      <node id="2655">
        <label>transport/ColumnTransport.h</label>
        <link refid="ColumnTransport_8h_source"/>
        <childnode refid="2656" relation="include">
        </childnode>
      </node>
      <node id="2699">
        <label>cudf/column/column_factories.hpp</label>
      </node>
      <node id="2697">
        <label>cudf/column/column.hpp</label>
      </node>
      <node id="2659">
        <label>ucp/api/ucp.h</label>
      </node>
      <node id="2682">
        <label>spdlog/sinks/stdout_color_sinks.h</label>
      </node>
      <node id="2657">
        <label>bmr/BufferProvider.h</label>
        <link refid="BufferProvider_8h_source"/>
        <childnode refid="2639" relation="include">
        </childnode>
        <childnode refid="2638" relation="include">
        </childnode>
        <childnode refid="2658" relation="include">
        </childnode>
        <childnode refid="2632" relation="include">
        </childnode>
        <childnode refid="2636" relation="include">
        </childnode>
        <childnode refid="2659" relation="include">
        </childnode>
      </node>
      <node id="2689">
        <label>io/data_parser/DataParser.h</label>
        <link refid="DataParser_8h_source"/>
        <childnode refid="2690" relation="include">
        </childnode>
        <childnode refid="2691" relation="include">
        </childnode>
        <childnode refid="2679" relation="include">
        </childnode>
        <childnode refid="2649" relation="include">
        </childnode>
        <childnode refid="2683" relation="include">
        </childnode>
        <childnode refid="2636" relation="include">
        </childnode>
        <childnode refid="2639" relation="include">
        </childnode>
      </node>
      <node id="2642">
        <label>cudf/types.hpp</label>
      </node>
      <node id="2708">
        <label>bmr/MemoryMonitor.h</label>
        <link refid="MemoryMonitor_8h_source"/>
        <childnode refid="2637" relation="include">
        </childnode>
        <childnode refid="2632" relation="include">
        </childnode>
        <childnode refid="2648" relation="include">
        </childnode>
        <childnode refid="2709" relation="include">
        </childnode>
        <childnode refid="2640" relation="include">
        </childnode>
      </node>
      <node id="2674">
        <label>rmm/mr/device/per_device_resource.hpp</label>
      </node>
      <node id="2691">
        <label>../DataType.h</label>
        <link refid="DataType_8h_source"/>
      </node>
      <node id="2678">
        <label>communication/CommunicationData.h</label>
        <link refid="CommunicationData_8h_source"/>
        <childnode refid="2659" relation="include">
        </childnode>
        <childnode refid="2661" relation="include">
        </childnode>
        <childnode refid="2636" relation="include">
        </childnode>
        <childnode refid="2638" relation="include">
        </childnode>
        <childnode refid="2640" relation="include">
        </childnode>
      </node>
      <node id="2703">
        <label>taskflow/graph.h</label>
        <link refid="graph_8h_source"/>
        <childnode refid="2704" relation="include">
        </childnode>
        <childnode refid="2707" relation="include">
        </childnode>
        <childnode refid="2633" relation="include">
        </childnode>
        <childnode refid="2708" relation="include">
        </childnode>
        <childnode refid="2710" relation="include">
        </childnode>
      </node>
      <node id="2706">
        <label>port.h</label>
        <link refid="port_8h_source"/>
        <childnode refid="2639" relation="include">
        </childnode>
        <childnode refid="2636" relation="include">
        </childnode>
        <childnode refid="2638" relation="include">
        </childnode>
        <childnode refid="2633" relation="include">
        </childnode>
      </node>
      <node id="2644">
        <label>iostream</label>
      </node>
      <node id="2653">
        <label>cudf/column/column_view.hpp</label>
      </node>
      <node id="2635">
        <label>deque</label>
      </node>
      <node id="2632">
        <label>mutex</label>
      </node>
      <node id="2665">
        <label>cuda_runtime_api.h</label>
      </node>
      <node id="2648">
        <label>chrono</label>
      </node>
      <node id="2688">
        <label>blazingdb/io/FileSystem/Uri.h</label>
      </node>
      <node id="2647">
        <label>CodeTimer.h</label>
        <link refid="CodeTimer_8h_source"/>
        <childnode refid="2648" relation="include">
        </childnode>
      </node>
      <node id="2667">
        <label>rmm/mr/device/device_memory_resource.hpp</label>
      </node>
      <node id="2722">
        <label>taskflow/executor.h</label>
        <link refid="executor_8h_source"/>
        <childnode refid="2704" relation="include">
        </childnode>
        <childnode refid="2633" relation="include">
        </childnode>
        <childnode refid="2709" relation="include">
        </childnode>
        <childnode refid="2710" relation="include">
        </childnode>
      </node>
      <node id="2712">
        <label>thread</label>
      </node>
      <node id="2662">
        <label>bmr/BlazingMemoryResource.h</label>
        <link refid="BlazingMemoryResource_8h_source"/>
        <childnode refid="2663" relation="include">
        </childnode>
        <childnode refid="2634" relation="include">
        </childnode>
        <childnode refid="2664" relation="include">
        </childnode>
        <childnode refid="2665" relation="include">
        </childnode>
        <childnode refid="2666" relation="include">
        </childnode>
        <childnode refid="2667" relation="include">
        </childnode>
        <childnode refid="2668" relation="include">
        </childnode>
        <childnode refid="2669" relation="include">
        </childnode>
        <childnode refid="2670" relation="include">
        </childnode>
        <childnode refid="2671" relation="include">
        </childnode>
        <childnode refid="2672" relation="include">
        </childnode>
        <childnode refid="2673" relation="include">
        </childnode>
        <childnode refid="2674" relation="include">
        </childnode>
        <childnode refid="2675" relation="include">
        </childnode>
        <childnode refid="2676" relation="include">
        </childnode>
        <childnode refid="2677" relation="include">
        </childnode>
      </node>
      <node id="2718">
        <label>taskflow/distributing_kernel.h</label>
        <link refid="distributing__kernel_8h_source"/>
        <childnode refid="2634" relation="include">
        </childnode>
        <childnode refid="2640" relation="include">
        </childnode>
        <childnode refid="2639" relation="include">
        </childnode>
        <childnode refid="2719" relation="include">
        </childnode>
        <childnode refid="2633" relation="include">
        </childnode>
        <childnode refid="2660" relation="include">
        </childnode>
        <childnode refid="2704" relation="include">
        </childnode>
      </node>
      <node id="2671">
        <label>rmm/mr/device/pool_memory_resource.hpp</label>
      </node>
      <node id="2664">
        <label>set</label>
      </node>
      <node id="2650">
        <label>cudf/table/table.hpp</label>
      </node>
      <node id="2720">
        <label>communication/factory/MessageFactory.h</label>
        <link refid="MessageFactory_8h_source"/>
      </node>
      <node id="2715">
        <label>io/DataLoader.h</label>
        <link refid="DataLoader_8h_source"/>
        <childnode refid="2716" relation="include">
        </childnode>
        <childnode refid="2689" relation="include">
        </childnode>
        <childnode refid="2679" relation="include">
        </childnode>
        <childnode refid="2683" relation="include">
        </childnode>
        <childnode refid="2660" relation="include">
        </childnode>
        <childnode refid="2639" relation="include">
        </childnode>
        <childnode refid="2636" relation="include">
        </childnode>
      </node>
      <node id="2645">
        <label>cudf/utilities/error.hpp</label>
      </node>
      <node id="2684">
        <label>cudf/scalar/scalar.hpp</label>
      </node>
      <node id="2636">
        <label>memory</label>
      </node>
      <node id="2716">
        <label>FileSystem/Uri.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceral">ral</innernamespace>
    <innernamespace refid="namespaceral_1_1batch">ral::batch</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;BatchOrderByProcessing.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CodeTimer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;src/utilities/CommonOperations.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;taskflow/executor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;parser/expression_utils.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceral" kindref="compound">ral</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">batch<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BEGIN<sp/>PartitionSingleNodeKernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal">PartitionSingleNodeKernel::PartitionSingleNodeKernel(std::size_t<sp/>kernel_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>queryString,<sp/>std::shared_ptr&lt;Context&gt;<sp/>context,<sp/>std::shared_ptr&lt;ral::cache::graph&gt;<sp/>query_graph)</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>kernel{<ref refid="classral_1_1cache_1_1kernel_1a2fd708656cb056a41ec635b8bdc4acfe" kindref="member">kernel_id</ref>,<sp/>queryString,<sp/><ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>,<sp/>kernel_type::PartitionSingleNodeKernel}<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a5fbb02292aff165a28ef25e75f0d89bd" kindref="member">query_graph</ref><sp/>=<sp/><ref refid="classral_1_1cache_1_1kernel_1a5fbb02292aff165a28ef25e75f0d89bd" kindref="member">query_graph</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a014bae9051f8ae95341be2f967b135c5" kindref="member">input_</ref>.add_port(</highlight><highlight class="stringliteral">&quot;input_a&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;input_b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><ref refid="structral_1_1execution_1_1task__result" kindref="compound">ral::execution::task_result</ref><sp/>PartitionSingleNodeKernel::do_process(std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>inputs,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ral::cache::CacheMachine&gt;<sp/></highlight><highlight class="comment">/*output*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>cudaStream_t<sp/></highlight><highlight class="comment">/*stream*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::string&gt;&amp;<sp/></highlight><highlight class="comment">/*args*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>input<sp/>=<sp/>inputs[0];</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>partitions<sp/>=<sp/>ral::operators::partition_table(partitionPlan-&gt;toBlazingTableView(),<sp/>input-&gt;toBlazingTableView(),<sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a0619a9c1e4952dc353dcfa079910a84a" kindref="member">expression</ref>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>partitions.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>cache_id<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;output_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(i);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1af6b7b538f6a692393f314a4f1037d4a6" kindref="member">add_to_output_cache</ref>(</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_unique&lt;ral::frame::BlazingTable&gt;(std::make_unique&lt;cudf::table&gt;(partitions[i]),<sp/>input-&gt;names()),</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_id</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rmm::bad_alloc&amp;<sp/>e){</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::RETRY,<sp/>std::string(e.what()),<sp/>std::move(inputs)};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e){</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::FAIL,<sp/>std::string(e.what()),<sp/>std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>()};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::SUCCESS,<sp/>std::string(),<sp/>std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>()};</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classral_1_1batch_1_1PartitionSingleNodeKernel_1a5af293b33505bec1e9fb66f9bb9d29af" refkind="member"><highlight class="normal">kstatus<sp/><ref refid="classral_1_1batch_1_1PartitionSingleNodeKernel_1a5af293b33505bec1e9fb66f9bb9d29af" kindref="member">PartitionSingleNodeKernel::run</ref>()<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCodeTimer" kindref="compound">CodeTimer</ref><sp/>timer;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classral_1_1batch_1_1BatchSequence" kindref="compound">BatchSequence</ref><sp/>input_partitionPlan(this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a014bae9051f8ae95341be2f967b135c5" kindref="member">input_</ref>.get_cache(</highlight><highlight class="stringliteral">&quot;input_b&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>partitionPlan<sp/>=<sp/>std::move(input_partitionPlan.next());</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a014bae9051f8ae95341be2f967b135c5" kindref="member">input_</ref>.get_cache(</highlight><highlight class="stringliteral">&quot;input_a&quot;</highlight><highlight class="normal">)-&gt;wait_for_next()){</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr<sp/>&lt;ral::cache::CacheData&gt;<sp/>cache_data<sp/>=<sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a014bae9051f8ae95341be2f967b135c5" kindref="member">input_</ref>.get_cache(</highlight><highlight class="stringliteral">&quot;input_a&quot;</highlight><highlight class="normal">)-&gt;pullCacheData();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cache_data<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::unique_ptr<sp/>&lt;ral::cache::CacheData&gt;<sp/>&gt;<sp/>inputs;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs.push_back(std::move(cache_data));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ral::execution::executor::get_instance()-&gt;add_task(</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move(inputs),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logger)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;debug(</highlight><highlight class="stringliteral">&quot;{query_id}|{step}|{substep}|{info}|{duration}|kernel_id|{kernel_id}||&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;query_id&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getContextToken(),</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;step&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getQueryStep(),</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;substep&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getQuerySubstep(),</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;PartitionSingleNode<sp/>Kernel<sp/>tasks<sp/>created&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;duration&quot;</highlight><highlight class="normal">_a=timer.elapsed_time(),</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kernel_id&quot;</highlight><highlight class="normal">_a=this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a33ce6e9907abce1acedb01e236c6812e" kindref="member">get_id</ref>());</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(kernel_mutex);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel_cv.wait(lock,[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;tasks.empty()<sp/>||<sp/>ral::execution::executor::get_instance()-&gt;has_exception();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ep<sp/>=<sp/>ral::execution::executor::get_instance()-&gt;last_exception()){</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::rethrow_exception(ep);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logger){</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;debug(</highlight><highlight class="stringliteral">&quot;{query_id}|{step}|{substep}|{info}|{duration}|kernel_id|{kernel_id}||&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;query_id&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getContextToken(),</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;step&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getQueryStep(),</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;substep&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getQuerySubstep(),</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;PartitionSingleNode<sp/>Kernel<sp/>Completed&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;duration&quot;</highlight><highlight class="normal">_a=timer.elapsed_time(),</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kernel_id&quot;</highlight><highlight class="normal">_a=this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a33ce6e9907abce1acedb01e236c6812e" kindref="member">get_id</ref>());</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kstatus::proceed;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/>END<sp/>PartitionSingleNodeKernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BEGIN<sp/>SortAndSampleKernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">SortAndSampleKernel::SortAndSampleKernel(std::size_t<sp/><ref refid="classral_1_1cache_1_1kernel_1a2fd708656cb056a41ec635b8bdc4acfe" kindref="member">kernel_id</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>queryString,<sp/>std::shared_ptr&lt;Context&gt;<sp/><ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>,<sp/>std::shared_ptr&lt;ral::cache::graph&gt;<sp/><ref refid="classral_1_1cache_1_1kernel_1a5fbb02292aff165a28ef25e75f0d89bd" kindref="member">query_graph</ref>)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classral_1_1cache_1_1distributing__kernel" kindref="compound">distributing_kernel</ref>{<ref refid="classral_1_1cache_1_1kernel_1a2fd708656cb056a41ec635b8bdc4acfe" kindref="member">kernel_id</ref>,queryString,<sp/><ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>,<sp/>kernel_type::SortAndSampleKernel}</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;query_graph<sp/>=<sp/><ref refid="classral_1_1cache_1_1kernel_1a5fbb02292aff165a28ef25e75f0d89bd" kindref="member">query_graph</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classral_1_1cache_1_1distributing__kernel_1a6466f289452c10450861276054b751da" kindref="member">set_number_of_message_trackers</ref>(2);<sp/></highlight><highlight class="comment">//default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a6eac1b9f1e6efb3bb9942ba7bbf66a94" kindref="member">output_</ref>.add_port(</highlight><highlight class="stringliteral">&quot;output_a&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;output_b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>get_samples<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>already_computed_partition_plan<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SortAndSampleKernel::make_partition_plan_task(){</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>already_computed_partition_plan<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::unique_ptr<sp/>&lt;ral::cache::CacheData&gt;<sp/>&gt;<sp/>sampleCacheDatas;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>lets<sp/>take<sp/>the<sp/>local<sp/>samples<sp/>and<sp/>convert<sp/>them<sp/>to<sp/>CacheData<sp/>to<sp/>make<sp/>a<sp/>task</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>samplesTables.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr<sp/>&lt;ral::cache::CacheData&gt;<sp/>cache_data<sp/>=<sp/>std::make_unique&lt;ral::cache::GPUCacheData&gt;(std::move(samplesTables[i]));</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sampleCacheDatas.push_back(std::move(cache_data));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;context-&gt;getAllNodes().size()<sp/>&gt;<sp/>1<sp/>&amp;&amp;<sp/>context-&gt;isMasterNode(ral::communication::CommunicationData::getInstance().getSelfNode())){</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nodes<sp/>=<sp/>context-&gt;getAllNodes();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>next<sp/>lets<sp/>take<sp/>the<sp/>samples<sp/>from<sp/>other<sp/>nodes<sp/>and<sp/>add<sp/>them<sp/>to<sp/>the<sp/>set<sp/>of<sp/>samples<sp/>for<sp/>the<sp/>task</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nodes.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(nodes[i]<sp/>==<sp/>ral::communication::CommunicationData::getInstance().getSelfNode()))<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>message_id<sp/>=<sp/>std::to_string(this-&gt;context-&gt;getContextToken())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a33ce6e9907abce1acedb01e236c6812e" kindref="member">get_id</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>nodes[i].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>samples_cache_data<sp/>=<sp/>this-&gt;query_graph-&gt;get_input_message_cache()-&gt;pullCacheData(message_id);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classral_1_1cache_1_1CPUCacheData" kindref="compound">ral::cache::CPUCacheData</ref><sp/>*<sp/>cache_ptr<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classral_1_1cache_1_1CPUCacheData" kindref="compound">ral::cache::CPUCacheData</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(samples_cache_data.get());</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_num_rows_for_sampling<sp/>+=<sp/>std::stoll(cache_ptr-&gt;<ref refid="classral_1_1cache_1_1CacheData_1a7e3fea5c3558948f4c461998f7ef434b" kindref="member">getMetadata</ref>().<ref refid="classral_1_1cache_1_1MetadataDictionary_1abdc2863d96dc839565f2078471f4c9f7" kindref="member">get_values</ref>()[ral::cache::TOTAL_TABLE_ROWS_METADATA_LABEL]);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_bytes_for_sampling<sp/>+=<sp/>std::stoll(cache_ptr-&gt;<ref refid="classral_1_1cache_1_1CacheData_1a7e3fea5c3558948f4c461998f7ef434b" kindref="member">getMetadata</ref>().<ref refid="classral_1_1cache_1_1MetadataDictionary_1abdc2863d96dc839565f2078471f4c9f7" kindref="member">get_values</ref>()[ral::cache::TOTAL_TABLE_ROWS_METADATA_LABEL])<sp/>*<sp/>std::stoll(cache_ptr-&gt;<ref refid="classral_1_1cache_1_1CacheData_1a7e3fea5c3558948f4c461998f7ef434b" kindref="member">getMetadata</ref>().<ref refid="classral_1_1cache_1_1MetadataDictionary_1abdc2863d96dc839565f2078471f4c9f7" kindref="member">get_values</ref>()[ral::cache::AVG_BYTES_PER_ROW_METADATA_LABEL]);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sampleCacheDatas.push_back(std::move(samples_cache_data));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>ral::execution::executor::get_instance()-&gt;add_task(</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move(sampleCacheDatas),</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a94c3bd66b93a0e67165d0a54741c19dc" kindref="member">output_cache</ref>(</highlight><highlight class="stringliteral">&quot;output_b&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{{</highlight><highlight class="stringliteral">&quot;operation_type&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;compute_partition_plan&quot;</highlight><highlight class="normal">}});<sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SortAndSampleKernel::compute_partition_plan(</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::unique_ptr&lt;ral::frame::BlazingTable&gt;&gt;<sp/>inputSamples)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>in<sp/>case<sp/>there<sp/>is<sp/>no<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>final_avg_bytes_per_row<sp/>=<sp/>total_num_rows_for_sampling<sp/>&lt;=<sp/>0<sp/>?<sp/>1<sp/>:<sp/>total_bytes_for_sampling<sp/>/<sp/>total_num_rows_for_sampling;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;context-&gt;getAllNodes().size()<sp/>==<sp/>1)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>single<sp/>node<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>partitionPlan<sp/>=<sp/>ral::operators::generate_partition_plan(inputSamples,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_num_rows_for_sampling,<sp/>final_avg_bytes_per_row,<sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a0619a9c1e4952dc353dcfa079910a84a" kindref="member">expression</ref>,<sp/>this-&gt;context.get());</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1af6b7b538f6a692393f314a4f1037d4a6" kindref="member">add_to_output_cache</ref>(std::move(partitionPlan),<sp/></highlight><highlight class="stringliteral">&quot;output_b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>distributed<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ral::utilities::checkIfConcatenatingStringsWillOverflow(inputSamples))<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logger){</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;warn(</highlight><highlight class="stringliteral">&quot;{query_id}|{step}|{substep}|{info}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;query_id&quot;</highlight><highlight class="normal">_a=(context<sp/>?<sp/>std::to_string(context-&gt;getContextToken())<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;step&quot;</highlight><highlight class="normal">_a=(context<sp/>?<sp/>std::to_string(context-&gt;getQueryStep())<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;substep&quot;</highlight><highlight class="normal">_a=(context<sp/>?<sp/>std::to_string(context-&gt;getQuerySubstep())<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;In<sp/>SortAndSampleKernel::compute_partition_plan<sp/>Concatenating<sp/>Strings<sp/>will<sp/>overflow<sp/>strings<sp/>length&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(context-&gt;isMasterNode(ral::communication::CommunicationData::getInstance().getSelfNode()))<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;incrementQuerySubstep();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>partitionPlan<sp/>=<sp/>ral::operators::generate_partition_plan(inputSamples,<sp/>total_num_rows_for_sampling,<sp/>final_avg_bytes_per_row,<sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a0619a9c1e4952dc353dcfa079910a84a" kindref="member">expression</ref>,<sp/>this-&gt;context.get());</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classral_1_1cache_1_1distributing__kernel_1a943284f948c1f1486b04e6b02cdc3e19" kindref="member">broadcast</ref>(std::move(partitionPlan),</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a6eac1b9f1e6efb3bb9942ba7bbf66a94" kindref="member">output_</ref>.get_cache(</highlight><highlight class="stringliteral">&quot;output_b&quot;</highlight><highlight class="normal">).get(),</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//<sp/>message_id_prefix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;output_b&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//<sp/>cache_id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PARTITION_PLAN_MESSAGE_TRACKER_IDX,<sp/></highlight><highlight class="comment">//message_tracker_idx<sp/>(message<sp/>tracker<sp/>for<sp/>the<sp/>partitionPlan)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>always_add</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;incrementQuerySubstep();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>to<sp/>concat<sp/>all<sp/>the<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;ral::frame::BlazingTableView&gt;<sp/>sampledTableViews;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>inputSamples.size();<sp/>i++){</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sampledTableViews.push_back(inputSamples[i]-&gt;toBlazingTableView());</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>concatSamples<sp/>=<sp/>ral::utilities::concatTables(sampledTableViews);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>concatSamples-&gt;ensureOwnership();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classral_1_1cache_1_1MetadataDictionary" kindref="compound">ral::cache::MetadataDictionary</ref><sp/>extra_metadata;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extra_metadata.<ref refid="classral_1_1cache_1_1MetadataDictionary_1a99828bf2a71b8e06d568420e5c2b460d" kindref="member">add_value</ref>(ral::cache::TOTAL_TABLE_ROWS_METADATA_LABEL,<sp/>total_num_rows_for_sampling);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extra_metadata.<ref refid="classral_1_1cache_1_1MetadataDictionary_1a99828bf2a71b8e06d568420e5c2b460d" kindref="member">add_value</ref>(ral::cache::AVG_BYTES_PER_ROW_METADATA_LABEL,<sp/>final_avg_bytes_per_row);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classral_1_1cache_1_1distributing__kernel_1aa2c88f7cefd4bb5eee4058c7059c277e" kindref="member">send_message</ref>(std::move(concatSamples),</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//specific_cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//cache_id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{this-&gt;context-&gt;getMasterNode().id()},<sp/></highlight><highlight class="comment">//target_id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//message_id_prefix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//always_add</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//wait_for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SAMPLES_MESSAGE_TRACKER_IDX,<sp/></highlight><highlight class="comment">//message_tracker_idx<sp/>(message<sp/>tracker<sp/>for<sp/>samples)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extra_metadata);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;incrementQuerySubstep();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SortAndSampleKernel::all_node_samples_are_available(){</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>messged_ids_expected;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nodes<sp/>=<sp/>context-&gt;getAllNodes();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nodes.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(nodes[i]<sp/>==<sp/>ral::communication::CommunicationData::getInstance().getSelfNode()))<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>messged_ids_expected.push_back(std::to_string(this-&gt;context-&gt;getContextToken())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a33ce6e9907abce1acedb01e236c6812e" kindref="member">get_id</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>nodes[i].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">());</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;query_graph-&gt;get_input_message_cache()-&gt;has_messages_now(messged_ids_expected);</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><ref refid="structral_1_1execution_1_1task__result" kindref="compound">ral::execution::task_result</ref><sp/>SortAndSampleKernel::do_process(std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>inputs,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ral::cache::CacheMachine&gt;<sp/>output,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>cudaStream_t<sp/></highlight><highlight class="comment">/*stream*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::string&gt;&amp;<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>operation_type<sp/>=<sp/>args.at(</highlight><highlight class="stringliteral">&quot;operation_type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>input<sp/>=<sp/>inputs[0];</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(operation_type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;ordering_and_get_samples&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sortedTable<sp/>=<sp/>ral::operators::sort(input-&gt;toBlazingTableView(),<sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a0619a9c1e4952dc353dcfa079910a84a" kindref="member">expression</ref>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(get_samples.load())<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sampledTable<sp/>=<sp/>ral::operators::sample(input-&gt;toBlazingTableView(),<sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a0619a9c1e4952dc353dcfa079910a84a" kindref="member">expression</ref>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>samples_lock(samples_mutex);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(get_samples.load())<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>population_sampled<sp/>+=<sp/>sampledTable-&gt;num_rows();<sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_num_rows_for_sampling<sp/>+=<sp/>input-&gt;view().num_rows();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_bytes_for_sampling<sp/>+=<sp/>input-&gt;sizeInBytes();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samplesTables.push_back(std::move(sampledTable));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(population_sampled<sp/>&gt;<sp/>max_order_by_samples)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_samples<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>got<sp/>enough<sp/>samples,<sp/>at<sp/>least<sp/>as<sp/>max_order_by_samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!get_samples.load()<sp/>&amp;&amp;<sp/>!already_computed_partition_plan.load()){</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context-&gt;getTotalNodes()<sp/>&gt;<sp/>1<sp/>&amp;&amp;<sp/>context-&gt;isMasterNode(ral::communication::CommunicationData::getInstance().getSelfNode())){</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(all_node_samples_are_available()){</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>make_partition_plan_task();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>make_partition_plan_task();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sortedTable){</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>num_rows<sp/>=<sp/>sortedTable-&gt;num_rows();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>num_bytes<sp/>=<sp/>sortedTable-&gt;sizeInBytes();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;addToCache(std::move(sortedTable),<sp/></highlight><highlight class="stringliteral">&quot;output_a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(operation_type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;compute_partition_plan&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compute_partition_plan(std::move(inputs));</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rmm::bad_alloc&amp;<sp/>e){</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::RETRY,<sp/>std::string(e.what()),<sp/>std::move(inputs)};</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e){</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::FAIL,<sp/>std::string(e.what()),<sp/>std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>()};</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::SUCCESS,<sp/>std::string(),<sp/>std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>()};</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="classral_1_1batch_1_1SortAndSampleKernel_1a6e97bc1286a0e8d8273556d56372fa56" refkind="member"><highlight class="normal">kstatus<sp/><ref refid="classral_1_1batch_1_1SortAndSampleKernel_1a6e97bc1286a0e8d8273556d56372fa56" kindref="member">SortAndSampleKernel::run</ref>()<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCodeTimer" kindref="compound">CodeTimer</ref><sp/>timer;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>config_options<sp/>=<sp/>context-&gt;getConfigOptions();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>config_options.find(</highlight><highlight class="stringliteral">&quot;MAX_ORDER_BY_SAMPLES_PER_NODE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>config_options.end()){</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_order_by_samples<sp/>=<sp/>std::stoi(config_options[</highlight><highlight class="stringliteral">&quot;MAX_ORDER_BY_SAMPLES_PER_NODE&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr<sp/>&lt;ral::cache::CacheData&gt;<sp/>cache_data<sp/>=<sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1aac90d80ed296715da2a7736691847270" kindref="member">input_cache</ref>()-&gt;pullCacheData();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cache_data<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::unique_ptr<sp/>&lt;ral::cache::CacheData&gt;<sp/>&gt;<sp/>inputs;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs.push_back(std::move(cache_data));</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ral::execution::executor::get_instance()-&gt;add_task(</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move(inputs),</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a94c3bd66b93a0e67165d0a54741c19dc" kindref="member">output_cache</ref>(</highlight><highlight class="stringliteral">&quot;output_a&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{{</highlight><highlight class="stringliteral">&quot;operation_type&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ordering_and_get_samples&quot;</highlight><highlight class="normal">}});</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_data<sp/>=<sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1aac90d80ed296715da2a7736691847270" kindref="member">input_cache</ref>()-&gt;pullCacheData();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(kernel_mutex);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel_cv.wait(lock,[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;tasks.empty()<sp/>||<sp/>ral::execution::executor::get_instance()-&gt;has_exception();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ep<sp/>=<sp/>ral::execution::executor::get_instance()-&gt;last_exception()){</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::rethrow_exception(ep);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>lock.unlock();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>during<sp/>the<sp/>other<sp/>ordering_and_get_samples<sp/>tasks<sp/>the<sp/>computing<sp/>the<sp/>partition<sp/>plan<sp/>was<sp/>not<sp/>made<sp/>(max_order_by_samples<sp/>was<sp/>not<sp/>reached),<sp/>then<sp/>lets<sp/>do<sp/>it<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!already_computed_partition_plan.load())<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>make_partition_plan_task();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(kernel_mutex);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kernel_cv.wait(lock,[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;tasks.empty()<sp/>||<sp/>ral::execution::executor::get_instance()-&gt;has_exception();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ep<sp/>=<sp/>ral::execution::executor::get_instance()-&gt;last_exception()){</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::rethrow_exception(ep);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a94c3bd66b93a0e67165d0a54741c19dc" kindref="member">output_cache</ref>(</highlight><highlight class="stringliteral">&quot;output_b&quot;</highlight><highlight class="normal">)-&gt;wait_for_count(1);<sp/></highlight><highlight class="comment">//<sp/>waiting<sp/>for<sp/>the<sp/>partition_plan<sp/>to<sp/>arrive<sp/>before<sp/>continuing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logger){</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;debug(</highlight><highlight class="stringliteral">&quot;{query_id}|{step}|{substep}|{info}|{duration}|kernel_id|{kernel_id}||&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;query_id&quot;</highlight><highlight class="normal">_a=context-&gt;getContextToken(),</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;step&quot;</highlight><highlight class="normal">_a=context-&gt;getQueryStep(),</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;substep&quot;</highlight><highlight class="normal">_a=context-&gt;getQuerySubstep(),</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;SortAndSample<sp/>Kernel<sp/>Completed&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;duration&quot;</highlight><highlight class="normal">_a=timer.elapsed_time(),</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kernel_id&quot;</highlight><highlight class="normal">_a=this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a33ce6e9907abce1acedb01e236c6812e" kindref="member">get_id</ref>());</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kstatus::proceed;</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="comment">//<sp/>END<sp/>SortAndSampleKernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BEGIN<sp/>PartitionKernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal">PartitionKernel::PartitionKernel(std::size_t<sp/>kernel_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>queryString,<sp/>std::shared_ptr&lt;Context&gt;<sp/>context,<sp/>std::shared_ptr&lt;ral::cache::graph&gt;<sp/>query_graph)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classral_1_1cache_1_1distributing__kernel" kindref="compound">distributing_kernel</ref>{<ref refid="classral_1_1cache_1_1kernel_1a2fd708656cb056a41ec635b8bdc4acfe" kindref="member">kernel_id</ref>,<sp/>queryString,<sp/><ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>,<sp/>kernel_type::PartitionKernel}<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;query_graph<sp/>=<sp/><ref refid="classral_1_1cache_1_1kernel_1a5fbb02292aff165a28ef25e75f0d89bd" kindref="member">query_graph</ref>;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a014bae9051f8ae95341be2f967b135c5" kindref="member">input_</ref>.add_port(</highlight><highlight class="stringliteral">&quot;input_a&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;input_b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>config_options<sp/>=<sp/>context-&gt;getConfigOptions();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_num_order_by_partitions_per_node<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>config_options.find(</highlight><highlight class="stringliteral">&quot;MAX_NUM_ORDER_BY_PARTITIONS_PER_NODE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>config_options.end()){</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_num_order_by_partitions_per_node<sp/>=<sp/>std::stoi(config_options[</highlight><highlight class="stringliteral">&quot;MAX_NUM_ORDER_BY_PARTITIONS_PER_NODE&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classral_1_1cache_1_1distributing__kernel_1a6466f289452c10450861276054b751da" kindref="member">set_number_of_message_trackers</ref>(max_num_order_by_partitions_per_node);</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><ref refid="structral_1_1execution_1_1task__result" kindref="compound">ral::execution::task_result</ref><sp/>PartitionKernel::do_process(std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>inputs,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ral::cache::CacheMachine&gt;<sp/></highlight><highlight class="comment">/*output*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>cudaStream_t<sp/></highlight><highlight class="comment">/*stream*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::string&gt;&amp;<sp/></highlight><highlight class="comment">/*args*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>input<sp/>=<sp/>inputs[0];</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;ral::distribution::NodeColumnView&gt;<sp/>partitions<sp/>=<sp/>ral::distribution::partitionData(this-&gt;context.get(),<sp/>input-&gt;toBlazingTableView(),<sp/>partitionPlan-&gt;toBlazingTableView(),<sp/>sortColIndices,<sp/>sortOrderTypes);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int32_t&gt;<sp/>part_ids(partitions.size());</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::generate(part_ids.begin(),<sp/>part_ids.end(),<sp/>[count=0,<sp/>num_partitions_per_node<sp/>=<sp/>num_partitions_per_node]<sp/>()<sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(count++)<sp/>%<sp/>(num_partitions_per_node);<sp/>});</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classral_1_1cache_1_1distributing__kernel_1ac84717592ca882bcae7efd6a20ea2863" kindref="member">scatterParts</ref>(partitions,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//message_id_prefix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_ids</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rmm::bad_alloc&amp;<sp/>e){</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::RETRY,<sp/>std::string(e.what()),<sp/>std::move(inputs)};</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e){</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::FAIL,<sp/>std::string(e.what()),<sp/>std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>()};</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::SUCCESS,<sp/>std::string(),<sp/>std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>()};</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373" refid="classral_1_1batch_1_1PartitionKernel_1a5313617a63ab0fb23a0e4211399f439f" refkind="member"><highlight class="normal">kstatus<sp/><ref refid="classral_1_1batch_1_1PartitionKernel_1a5313617a63ab0fb23a0e4211399f439f" kindref="member">PartitionKernel::run</ref>()<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCodeTimer" kindref="compound">CodeTimer</ref><sp/>timer;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classral_1_1batch_1_1BatchSequence" kindref="compound">BatchSequence</ref><sp/>input_partitionPlan(this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a014bae9051f8ae95341be2f967b135c5" kindref="member">input_</ref>.get_cache(</highlight><highlight class="stringliteral">&quot;input_b&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>partitionPlan<sp/>=<sp/>input_partitionPlan.<ref refid="classral_1_1batch_1_1BatchSequence_1a5fe181e6183df338739e61eb512c23a4" kindref="member">next</ref>();</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(partitionPlan<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>context-&gt;incrementQuerySubstep();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::map&lt;int32_t,<sp/>int&gt;<sp/>&gt;<sp/>node_count;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_window_function(this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a0619a9c1e4952dc353dcfa079910a84a" kindref="member">expression</ref>))<sp/>std::tie(sortColIndices,<sp/>sortOrderTypes)<sp/>=<sp/>ral::operators::get_vars_to_partition(this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a0619a9c1e4952dc353dcfa079910a84a" kindref="member">expression</ref>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>std::tie(sortColIndices,<sp/>sortOrderTypes,<sp/>std::ignore)<sp/>=<sp/>ral::operators::get_sort_vars(this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a0619a9c1e4952dc353dcfa079910a84a" kindref="member">expression</ref>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nodes<sp/>=<sp/>context-&gt;getAllNodes();</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>no<sp/>partitionPlan,<sp/>its<sp/>because<sp/>we<sp/>have<sp/>no<sp/>data,<sp/>therefore<sp/>its<sp/>one<sp/>partition<sp/>per<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>num_partitions_per_node<sp/>=<sp/>partitionPlan-&gt;num_rows()<sp/>==<sp/>0<sp/>?<sp/>1<sp/>:<sp/>(partitionPlan-&gt;num_rows()<sp/>+<sp/>1)<sp/>/<sp/>this-&gt;context-&gt;getTotalNodes();</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;int32_t,<sp/>int&gt;<sp/>temp_partitions_map;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_partitions_per_node;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_partitions_map[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;&amp;<ref refid="structral_1_1batch_1_1node" kindref="compound">node</ref><sp/>:<sp/>nodes)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node_count.emplace(<ref refid="structral_1_1batch_1_1node" kindref="compound">node</ref>.id(),<sp/>temp_partitions_map);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr<sp/>&lt;ral::cache::CacheData&gt;<sp/>cache_data<sp/>=<sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a014bae9051f8ae95341be2f967b135c5" kindref="member">input_</ref>.get_cache(</highlight><highlight class="stringliteral">&quot;input_a&quot;</highlight><highlight class="normal">)-&gt;pullCacheData();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(cache_data<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::unique_ptr<sp/>&lt;ral::cache::CacheData&gt;<sp/>&gt;<sp/>inputs;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs.push_back(std::move(cache_data));</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ral::execution::executor::get_instance()-&gt;add_task(</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move(inputs),</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_data<sp/>=<sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a014bae9051f8ae95341be2f967b135c5" kindref="member">input_</ref>.get_cache(</highlight><highlight class="stringliteral">&quot;input_a&quot;</highlight><highlight class="normal">)-&gt;pullCacheData();</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logger)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;debug(</highlight><highlight class="stringliteral">&quot;{query_id}|{step}|{substep}|{info}|{duration}|kernel_id|{kernel_id}||&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;query_id&quot;</highlight><highlight class="normal">_a=context-&gt;getContextToken(),</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;step&quot;</highlight><highlight class="normal">_a=context-&gt;getQueryStep(),</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;substep&quot;</highlight><highlight class="normal">_a=context-&gt;getQuerySubstep(),</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;Partition<sp/>Kernel<sp/>tasks<sp/>created&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;duration&quot;</highlight><highlight class="normal">_a=timer.elapsed_time(),</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kernel_id&quot;</highlight><highlight class="normal">_a=this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a33ce6e9907abce1acedb01e236c6812e" kindref="member">get_id</ref>());</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(kernel_mutex);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel_cv.wait(lock,[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;tasks.empty()<sp/>||<sp/>ral::execution::executor::get_instance()-&gt;has_exception();</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ep<sp/>=<sp/>ral::execution::executor::get_instance()-&gt;last_exception()){</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::rethrow_exception(ep);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_partitions_per_node;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>cache_id<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;output_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(i);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classral_1_1cache_1_1distributing__kernel_1a532f4eb42963c4e76199f9250c483a09" kindref="member">send_total_partition_counts</ref>(</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//message_prefix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_id,<sp/></highlight><highlight class="comment">//cache_id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/></highlight><highlight class="comment">//message_tracker_idx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_partitions_per_node;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_count<sp/>=<sp/><ref refid="classral_1_1cache_1_1distributing__kernel_1ae5f1a597fc3716c344b54b6d0d6af311" kindref="member">get_total_partition_counts</ref>(i);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>cache_id<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;output_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(i);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a94c3bd66b93a0e67165d0a54741c19dc" kindref="member">output_cache</ref>(cache_id)-&gt;wait_for_count(total_count);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logger){</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;debug(</highlight><highlight class="stringliteral">&quot;{query_id}|{step}|{substep}|{info}|{duration}|kernel_id|{kernel_id}||&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;query_id&quot;</highlight><highlight class="normal">_a=context-&gt;getContextToken(),</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;step&quot;</highlight><highlight class="normal">_a=context-&gt;getQueryStep(),</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;substep&quot;</highlight><highlight class="normal">_a=context-&gt;getQuerySubstep(),</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;Partition<sp/>Kernel<sp/>Completed&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;duration&quot;</highlight><highlight class="normal">_a=timer.elapsed_time(),</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kernel_id&quot;</highlight><highlight class="normal">_a=this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a33ce6e9907abce1acedb01e236c6812e" kindref="member">get_id</ref>());</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kstatus::proceed;</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="comment">//<sp/>END<sp/>PartitionKernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BEGIN<sp/>MergeStreamKernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal">MergeStreamKernel::MergeStreamKernel(std::size_t<sp/>kernel_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>queryString,</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Context&gt;<sp/>context,</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ral::cache::graph&gt;<sp/>query_graph)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classral_1_1cache_1_1kernel" kindref="compound">kernel</ref>{<ref refid="classral_1_1cache_1_1kernel_1a2fd708656cb056a41ec635b8bdc4acfe" kindref="member">kernel_id</ref>,<sp/>queryString,<sp/><ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>,<sp/>kernel_type::MergeStreamKernel}<sp/><sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;query_graph<sp/>=<sp/><ref refid="classral_1_1cache_1_1kernel_1a5fbb02292aff165a28ef25e75f0d89bd" kindref="member">query_graph</ref>;</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><ref refid="structral_1_1execution_1_1task__result" kindref="compound">ral::execution::task_result</ref><sp/>MergeStreamKernel::do_process(std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>inputs,</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ral::cache::CacheMachine&gt;<sp/>output,</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>cudaStream_t<sp/></highlight><highlight class="comment">/*stream*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::string&gt;&amp;<sp/></highlight><highlight class="comment">/*args*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputs.empty())<sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>op</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(inputs.size()<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;addToCache(std::move(inputs[0]));</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>ral::frame::BlazingTableView<sp/>&gt;<sp/>tableViewsToConcat;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>inputs.size();<sp/>i++){</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableViewsToConcat.emplace_back(inputs[i]-&gt;toBlazingTableView());</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>output_merge<sp/>=<sp/>ral::operators::merge(tableViewsToConcat,<sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a0619a9c1e4952dc353dcfa079910a84a" kindref="member">expression</ref>);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;addToCache(std::move(output_merge));</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rmm::bad_alloc&amp;<sp/>e){</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::RETRY,<sp/>std::string(e.what()),<sp/>std::move(inputs)};</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e){</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::FAIL,<sp/>std::string(e.what()),<sp/>std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>()};</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::SUCCESS,<sp/>std::string(),<sp/>std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>()};</highlight></codeline>
<codeline lineno="493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495" refid="classral_1_1batch_1_1MergeStreamKernel_1a7d89339b2f4f3adecda2fe64b47948cd" refkind="member"><highlight class="normal">kstatus<sp/><ref refid="classral_1_1batch_1_1MergeStreamKernel_1a7d89339b2f4f3adecda2fe64b47948cd" kindref="member">MergeStreamKernel::run</ref>()<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCodeTimer" kindref="compound">CodeTimer</ref><sp/>timer;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>batch_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>idx<sp/>=<sp/>0;<sp/>idx<sp/>&lt;<sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a014bae9051f8ae95341be2f967b135c5" kindref="member">input_</ref>.count();<sp/>idx++)</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cache_id<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;input_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(idx);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>Kernel<sp/>needs<sp/>all<sp/>of<sp/>the<sp/>input<sp/>before<sp/>it<sp/>can<sp/>do<sp/>any<sp/>output.<sp/>So<sp/>lets<sp/>wait<sp/>until<sp/>all<sp/>the<sp/>input<sp/>is<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a014bae9051f8ae95341be2f967b135c5" kindref="member">input_</ref>.get_cache(cache_id)-&gt;wait_until_finished();</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::unique_ptr<sp/>&lt;ral::cache::CacheData&gt;<sp/>&gt;<sp/>inputs;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a014bae9051f8ae95341be2f967b135c5" kindref="member">input_</ref>.get_cache(cache_id)-&gt;wait_for_next()){</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr<sp/>&lt;ral::cache::CacheData&gt;<sp/>cache_data<sp/>=<sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a014bae9051f8ae95341be2f967b135c5" kindref="member">input_</ref>.get_cache(cache_id)-&gt;pullCacheData();</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cache_data<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs.push_back(std::move(cache_data));</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ral::execution::executor::get_instance()-&gt;add_task(</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move(inputs),</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a94c3bd66b93a0e67165d0a54741c19dc" kindref="member">output_cache</ref>(),</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>batch_count++;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>add<sp/>retry<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logger){</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;error(</highlight><highlight class="stringliteral">&quot;{query_id}|{step}|{substep}|{info}|{duration}||||&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;query_id&quot;</highlight><highlight class="normal">_a=context-&gt;getContextToken(),</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;step&quot;</highlight><highlight class="normal">_a=context-&gt;getQueryStep(),</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;substep&quot;</highlight><highlight class="normal">_a=context-&gt;getQuerySubstep(),</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;In<sp/>MergeStream<sp/>kernel<sp/>batch<sp/>{}<sp/>for<sp/>{}.<sp/>What:<sp/>{}<sp/>.<sp/>max_memory_used:<sp/>{}&quot;</highlight><highlight class="normal">_format(batch_count,<sp/><ref refid="classral_1_1cache_1_1kernel_1a0619a9c1e4952dc353dcfa079910a84a" kindref="member">expression</ref>,<sp/>e.what(),<sp/><ref refid="classblazing__device__memory__resource_1a31735d61d23aef05666c7c3f981c86fe" kindref="member">blazing_device_memory_resource::getInstance</ref>().get_full_memory_summary()),</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;duration&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logger)<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;debug(</highlight><highlight class="stringliteral">&quot;{query_id}|{step}|{substep}|{info}|{duration}|kernel_id|{kernel_id}||&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;query_id&quot;</highlight><highlight class="normal">_a=context-&gt;getContextToken(),</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;step&quot;</highlight><highlight class="normal">_a=context-&gt;getQueryStep(),</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;substep&quot;</highlight><highlight class="normal">_a=context-&gt;getQuerySubstep(),</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;MergeStream<sp/>Kernel<sp/>tasks<sp/>created&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;duration&quot;</highlight><highlight class="normal">_a=timer.elapsed_time(),</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kernel_id&quot;</highlight><highlight class="normal">_a=this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a33ce6e9907abce1acedb01e236c6812e" kindref="member">get_id</ref>());</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(kernel_mutex);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel_cv.wait(lock,[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;tasks.empty()<sp/>||<sp/>ral::execution::executor::get_instance()-&gt;has_exception();</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ep<sp/>=<sp/>ral::execution::executor::get_instance()-&gt;last_exception()){</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::rethrow_exception(ep);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logger)<sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;debug(</highlight><highlight class="stringliteral">&quot;{query_id}|{step}|{substep}|{info}|{duration}|kernel_id|{kernel_id}||&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;query_id&quot;</highlight><highlight class="normal">_a=context-&gt;getContextToken(),</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;step&quot;</highlight><highlight class="normal">_a=context-&gt;getQueryStep(),</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;substep&quot;</highlight><highlight class="normal">_a=context-&gt;getQuerySubstep(),</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;MergeStream<sp/>Kernel<sp/>Completed&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;duration&quot;</highlight><highlight class="normal">_a=timer.elapsed_time(),</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kernel_id&quot;</highlight><highlight class="normal">_a=this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a33ce6e9907abce1acedb01e236c6812e" kindref="member">get_id</ref>());</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kstatus::proceed;</highlight></codeline>
<codeline lineno="564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="comment">//<sp/>END<sp/>MergeStreamKernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BEGIN<sp/>LimitKernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal">LimitKernel::LimitKernel(std::size_t<sp/>kernel_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>queryString,</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Context&gt;<sp/>context,</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ral::cache::graph&gt;<sp/>query_graph)</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classral_1_1cache_1_1distributing__kernel" kindref="compound">distributing_kernel</ref>{<ref refid="classral_1_1cache_1_1kernel_1a2fd708656cb056a41ec635b8bdc4acfe" kindref="member">kernel_id</ref>,queryString,<sp/><ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>,<sp/>kernel_type::LimitKernel}<sp/><sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;query_graph<sp/>=<sp/><ref refid="classral_1_1cache_1_1kernel_1a5fbb02292aff165a28ef25e75f0d89bd" kindref="member">query_graph</ref>;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classral_1_1cache_1_1distributing__kernel_1a6466f289452c10450861276054b751da" kindref="member">set_number_of_message_trackers</ref>(1);<sp/></highlight><highlight class="comment">//default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><ref refid="structral_1_1execution_1_1task__result" kindref="compound">ral::execution::task_result</ref><sp/>LimitKernel::do_process(std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>inputs,</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ral::cache::CacheMachine&gt;<sp/>output,</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>cudaStream_t<sp/></highlight><highlight class="comment">/*stream*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::string&gt;&amp;<sp/></highlight><highlight class="comment">/*args*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCodeTimer" kindref="compound">CodeTimer</ref><sp/>eventTimer(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>input<sp/>=<sp/>inputs[0];</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rows_limit&lt;0)<sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;addToCache(std::move(input));</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>log_input_num_rows<sp/>=<sp/>input-&gt;num_rows();</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>log_input_num_bytes<sp/>=<sp/>input-&gt;sizeInBytes();</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>limited_input;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output_is_just_input;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventTimer.start();</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::tie(limited_input,<sp/>output_is_just_input,<sp/>rows_limit)<sp/>=<sp/>ral::operators::limit_table(input-&gt;toBlazingTableView(),<sp/>rows_limit);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventTimer.stop();</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>log_output_num_rows<sp/>=<sp/>output_is_just_input<sp/>?<sp/>input-&gt;num_rows()<sp/>:<sp/>limited_input-&gt;num_rows();</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>log_output_num_bytes<sp/>=<sp/>output_is_just_input<sp/>?<sp/>input-&gt;sizeInBytes()<sp/>:<sp/>limited_input-&gt;sizeInBytes();</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(output_is_just_input)</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;addToCache(std::move(input));</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;addToCache(std::move(limited_input));</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rmm::bad_alloc&amp;<sp/>e){</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::RETRY,<sp/>std::string(e.what()),<sp/>std::move(inputs)};</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e){</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::FAIL,<sp/>std::string(e.what()),<sp/>std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>()};</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::SUCCESS,<sp/>std::string(),<sp/>std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>()};</highlight></codeline>
<codeline lineno="611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613" refid="classral_1_1batch_1_1LimitKernel_1a154ab2ef98ef7be11d3ba6c8dc6db06d" refkind="member"><highlight class="normal">kstatus<sp/><ref refid="classral_1_1batch_1_1LimitKernel_1a154ab2ef98ef7be11d3ba6c8dc6db06d" kindref="member">LimitKernel::run</ref>()<sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCodeTimer" kindref="compound">CodeTimer</ref><sp/>timer;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCodeTimer" kindref="compound">CodeTimer</ref><sp/>eventTimer(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>total_batch_rows<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::unique_ptr&lt;ral::cache::CacheData&gt;&gt;<sp/>cache_vector;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classral_1_1batch_1_1BatchSequenceBypass" kindref="compound">BatchSequenceBypass</ref><sp/>input_seq(this-&gt;<ref refid="classral_1_1cache_1_1kernel_1aac90d80ed296715da2a7736691847270" kindref="member">input_cache</ref>(),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(input_seq.<ref refid="classral_1_1batch_1_1BatchSequenceBypass_1a623422aa9164a34bce024e92f4f26679" kindref="member">wait_for_next</ref>())<sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>batch<sp/>=<sp/>input_seq.<ref refid="classral_1_1batch_1_1BatchSequenceBypass_1a5d55f785961b21c82578223ab5a0a217" kindref="member">next</ref>();</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_batch_rows<sp/>+=<sp/>batch-&gt;num_rows();</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_vector.push_back(std::move(batch));</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>cudf::size_type<sp/>limitRows;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>std::tie(std::ignore,<sp/>std::ignore,<sp/>limitRows)<sp/>=<sp/>ral::operators::get_sort_vars(this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a0619a9c1e4952dc353dcfa079910a84a" kindref="member">expression</ref>);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>rows_limit<sp/>=<sp/>limitRows;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;context-&gt;getTotalNodes()<sp/>&gt;<sp/>1<sp/>&amp;&amp;<sp/>rows_limit<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;context-&gt;incrementQuerySubstep();</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>self_node_idx<sp/>=<sp/>context-&gt;getNodeIndex(ral::communication::CommunicationData::getInstance().getSelfNode());</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nodes_to_send<sp/>=<sp/>context-&gt;getAllOtherNodes(self_node_idx);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>limit_messages_to_wait_for;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>target_ids;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>node_to_send<sp/>:<sp/>nodes_to_send)<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_ids.push_back(node_to_send.id());</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>limit_messages_to_wait_for.push_back(</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::to_string(this-&gt;context-&gt;getContextToken())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a33ce6e9907abce1acedb01e236c6812e" kindref="member">get_id</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>node_to_send.id());</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classral_1_1cache_1_1MetadataDictionary" kindref="compound">ral::cache::MetadataDictionary</ref><sp/>extra_metadata;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extra_metadata.<ref refid="classral_1_1cache_1_1MetadataDictionary_1a99828bf2a71b8e06d568420e5c2b460d" kindref="member">add_value</ref>(ral::cache::TOTAL_TABLE_ROWS_METADATA_LABEL,<sp/>total_batch_rows);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classral_1_1cache_1_1distributing__kernel_1aa2c88f7cefd4bb5eee4058c7059c277e" kindref="member">send_message</ref>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//empty<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//specific_cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//cache_id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_ids,<sp/></highlight><highlight class="comment">//target_ids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//message_id_prefix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//always_add</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//wait_for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//message_tracker_idx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extra_metadata);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>prev_total_rows<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>limit_messages_to_wait_for.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>meta_message<sp/>=<sp/>this-&gt;query_graph-&gt;get_input_message_cache()-&gt;pullCacheData(limit_messages_to_wait_for[i]);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(static_cast&lt;int&gt;(i)<sp/>&lt;<sp/>context-&gt;getNodeIndex(ral::communication::CommunicationData::getInstance().getSelfNode())){</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_total_rows<sp/>+=<sp/>std::stoi(static_cast&lt;ral::cache::CPUCacheData*&gt;(meta_message.get())-&gt;getMetadata().get_values()[ral::cache::TOTAL_TABLE_ROWS_METADATA_LABEL]);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rows_limit<sp/>=<sp/>std::min(std::max(rows_limit<sp/>-<sp/>prev_total_rows,<sp/>int64_t{0}),<sp/>total_batch_rows);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>batch_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;&amp;cache_data<sp/>:<sp/>cache_vector)<sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::unique_ptr<sp/>&lt;ral::cache::CacheData&gt;<sp/>&gt;<sp/>inputs;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs.push_back(std::move(cache_data));</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ral::execution::executor::get_instance()-&gt;add_task(</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move(inputs),</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a94c3bd66b93a0e67165d0a54741c19dc" kindref="member">output_cache</ref>(),</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rows_limit<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>batch_count++;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>add<sp/>retry<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logger){</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;error(</highlight><highlight class="stringliteral">&quot;{query_id}|{step}|{substep}|{info}|{duration}||||&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;query_id&quot;</highlight><highlight class="normal">_a=context-&gt;getContextToken(),</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;step&quot;</highlight><highlight class="normal">_a=context-&gt;getQueryStep(),</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;substep&quot;</highlight><highlight class="normal">_a=context-&gt;getQuerySubstep(),</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;In<sp/>Limit<sp/>kernel<sp/>batch<sp/>{}<sp/>for<sp/>{}.<sp/>What:<sp/>{}&quot;</highlight><highlight class="normal">_format(batch_count,<sp/><ref refid="classral_1_1cache_1_1kernel_1a0619a9c1e4952dc353dcfa079910a84a" kindref="member">expression</ref>,<sp/>e.what()),</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;duration&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logger)<sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;debug(</highlight><highlight class="stringliteral">&quot;{query_id}|{step}|{substep}|{info}|{duration}|kernel_id|{kernel_id}||&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;query_id&quot;</highlight><highlight class="normal">_a=context-&gt;getContextToken(),</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;step&quot;</highlight><highlight class="normal">_a=context-&gt;getQueryStep(),</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;substep&quot;</highlight><highlight class="normal">_a=context-&gt;getQuerySubstep(),</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;Limit<sp/>Kernel<sp/>tasks<sp/>created&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;duration&quot;</highlight><highlight class="normal">_a=timer.elapsed_time(),</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kernel_id&quot;</highlight><highlight class="normal">_a=this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a33ce6e9907abce1acedb01e236c6812e" kindref="member">get_id</ref>());</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(kernel_mutex);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel_cv.wait(lock,[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;tasks.empty()<sp/>||<sp/>ral::execution::executor::get_instance()-&gt;has_exception();</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ep<sp/>=<sp/>ral::execution::executor::get_instance()-&gt;last_exception()){</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::rethrow_exception(ep);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logger)<sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;debug(</highlight><highlight class="stringliteral">&quot;{query_id}|{step}|{substep}|{info}|{duration}|kernel_id|{kernel_id}||&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;query_id&quot;</highlight><highlight class="normal">_a=context-&gt;getContextToken(),</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;step&quot;</highlight><highlight class="normal">_a=context-&gt;getQueryStep(),</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;substep&quot;</highlight><highlight class="normal">_a=context-&gt;getQuerySubstep(),</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;Limit<sp/>Kernel<sp/>Completed&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;duration&quot;</highlight><highlight class="normal">_a=timer.elapsed_time(),</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kernel_id&quot;</highlight><highlight class="normal">_a=this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a33ce6e9907abce1acedb01e236c6812e" kindref="member">get_id</ref>());</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kstatus::proceed;</highlight></codeline>
<codeline lineno="724"><highlight class="normal">}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="comment">//<sp/>END<sp/>LimitKernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>batch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ral</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/BatchOrderByProcessing.cpp"/>
  </compounddef>
</doxygen>
