<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="CommunicationData_8cpp" kind="file" language="C++">
    <compoundname>CommunicationData.cpp</compoundname>
    <includes refid="CommunicationData_8h" local="yes">CommunicationData.h</includes>
    <incdepgraph>
      <node id="564">
        <label>transport/Node.h</label>
        <link refid="Node_8h_source"/>
        <childnode refid="565" relation="include">
        </childnode>
        <childnode refid="566" relation="include">
        </childnode>
      </node>
      <node id="566">
        <label>string</label>
      </node>
      <node id="567">
        <label>map</label>
      </node>
      <node id="561">
        <label>/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/communication/CommunicationData.cpp</label>
        <link refid="CommunicationData_8cpp"/>
        <childnode refid="562" relation="include">
        </childnode>
      </node>
      <node id="563">
        <label>ucp/api/ucp.h</label>
      </node>
      <node id="562">
        <label>CommunicationData.h</label>
        <link refid="CommunicationData_8h_source"/>
        <childnode refid="563" relation="include">
        </childnode>
        <childnode refid="564" relation="include">
        </childnode>
        <childnode refid="565" relation="include">
        </childnode>
        <childnode refid="566" relation="include">
        </childnode>
        <childnode refid="567" relation="include">
        </childnode>
      </node>
      <node id="565">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceral">ral</innernamespace>
    <innernamespace refid="namespaceral_1_1communication">ral::communication</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;CommunicationData.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceral" kindref="compound">ral</ref><sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">communication<sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal">CommunicationData::CommunicationData()<sp/>{}</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal">CommunicationData<sp/>&amp;<sp/>CommunicationData::getInstance()<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CommunicationData<sp/>communicationData;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>communicationData;</highlight></codeline>
<codeline lineno="11"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CommunicationData::initialize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>worker_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>cache_directory)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>_selfNode<sp/>=<sp/><ref refid="classblazingdb_1_1transport_1_1Node" kindref="compound">blazingdb::transport::Node</ref>(<sp/>worker_id);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>_cache_directory<sp/>=<sp/>cache_directory;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classblazingdb_1_1transport_1_1Node" kindref="compound">blazingdb::transport::Node</ref><sp/>&amp;<sp/>CommunicationData::getSelfNode()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_selfNode;<sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal">std::string<sp/>CommunicationData::get_cache_directory()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_cache_directory;<sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>communication</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ral</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/communication/CommunicationData.cpp"/>
  </compounddef>
</doxygen>
