<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="CacheData_8cpp" kind="file" language="C++">
    <compoundname>CacheData.cpp</compoundname>
    <includes refid="CacheMachine_8h" local="yes">CacheMachine.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">random</includes>
    <includes refid="CommonOperations_8h" local="no">utilities/CommonOperations.h</includes>
    <includes local="no">cudf/io/orc.hpp</includes>
    <includes refid="CalciteExpressionParsing_8h" local="yes">CalciteExpressionParsing.h</includes>
    <includes refid="CommunicationData_8h" local="yes">communication/CommunicationData.h</includes>
    <includes local="no">Util/StringUtil.h</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="DebuggingUtils_8h" local="no">src/utilities/DebuggingUtils.h</includes>
    <incdepgraph>
      <node id="3667">
        <label>sys/stat.h</label>
      </node>
      <node id="3595">
        <label>/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.cpp</label>
        <link refid="CacheData_8cpp"/>
        <childnode refid="3596" relation="include">
        </childnode>
        <childnode refid="3667" relation="include">
        </childnode>
        <childnode refid="3668" relation="include">
        </childnode>
        <childnode refid="3669" relation="include">
        </childnode>
        <childnode refid="3670" relation="include">
        </childnode>
        <childnode refid="3671" relation="include">
        </childnode>
        <childnode refid="3642" relation="include">
        </childnode>
        <childnode refid="3672" relation="include">
        </childnode>
        <childnode refid="3673" relation="include">
        </childnode>
        <childnode refid="3674" relation="include">
        </childnode>
      </node>
      <node id="3597">
        <label>atomic</label>
      </node>
      <node id="3639">
        <label>config/GPUManager.cuh</label>
      </node>
      <node id="3634">
        <label>rmm/mr/device/managed_memory_resource.hpp</label>
      </node>
      <node id="3596">
        <label>CacheMachine.h</label>
        <link refid="CacheMachine_8h_source"/>
        <childnode refid="3597" relation="include">
        </childnode>
        <childnode refid="3598" relation="include">
        </childnode>
        <childnode refid="3599" relation="include">
        </childnode>
        <childnode refid="3600" relation="include">
        </childnode>
        <childnode refid="3601" relation="include">
        </childnode>
        <childnode refid="3602" relation="include">
        </childnode>
        <childnode refid="3603" relation="include">
        </childnode>
        <childnode refid="3604" relation="include">
        </childnode>
        <childnode refid="3605" relation="include">
        </childnode>
        <childnode refid="3606" relation="include">
        </childnode>
        <childnode refid="3607" relation="include">
        </childnode>
        <childnode refid="3611" relation="include">
        </childnode>
        <childnode refid="3613" relation="include">
        </childnode>
        <childnode refid="3624" relation="include">
        </childnode>
        <childnode refid="3626" relation="include">
        </childnode>
        <childnode refid="3642" relation="include">
        </childnode>
        <childnode refid="3610" relation="include">
        </childnode>
        <childnode refid="3643" relation="include">
        </childnode>
        <childnode refid="3653" relation="include">
        </childnode>
        <childnode refid="3656" relation="include">
        </childnode>
        <childnode refid="3665" relation="include">
        </childnode>
        <childnode refid="3666" relation="include">
        </childnode>
      </node>
      <node id="3613">
        <label>execution_graph/logic_controllers/LogicPrimitives.h</label>
        <link refid="LogicPrimitives_8h_source"/>
        <childnode refid="3614" relation="include">
        </childnode>
        <childnode refid="3615" relation="include">
        </childnode>
        <childnode refid="3599" relation="include">
        </childnode>
        <childnode refid="3602" relation="include">
        </childnode>
        <childnode refid="3603" relation="include">
        </childnode>
        <childnode refid="3616" relation="include">
        </childnode>
        <childnode refid="3618" relation="include">
        </childnode>
      </node>
      <node id="3651">
        <label>cudf/scalar/scalar_device_view.cuh</label>
      </node>
      <node id="3656">
        <label>communication/messages/GPUComponentMessage.h</label>
        <link refid="GPUComponentMessage_8h_source"/>
        <childnode refid="3605" relation="include">
        </childnode>
        <childnode refid="3644" relation="include">
        </childnode>
        <childnode refid="3645" relation="include">
        </childnode>
        <childnode refid="3646" relation="include">
        </childnode>
        <childnode refid="3619" relation="include">
        </childnode>
        <childnode refid="3625" relation="include">
        </childnode>
        <childnode refid="3657" relation="include">
        </childnode>
        <childnode refid="3604" relation="include">
        </childnode>
        <childnode refid="3599" relation="include">
        </childnode>
        <childnode refid="3601" relation="include">
        </childnode>
        <childnode refid="3658" relation="include">
        </childnode>
        <childnode refid="3659" relation="include">
        </childnode>
        <childnode refid="3660" relation="include">
        </childnode>
        <childnode refid="3661" relation="include">
        </childnode>
        <childnode refid="3617" relation="include">
        </childnode>
        <childnode refid="3662" relation="include">
        </childnode>
        <childnode refid="3663" relation="include">
        </childnode>
        <childnode refid="3606" relation="include">
        </childnode>
        <childnode refid="3664" relation="include">
        </childnode>
        <childnode refid="3613" relation="include">
        </childnode>
        <childnode refid="3618" relation="include">
        </childnode>
      </node>
      <node id="3640">
        <label>sys/sysinfo.h</label>
      </node>
      <node id="3649">
        <label>cudf/scalar/scalar_factories.hpp</label>
      </node>
      <node id="3620">
        <label>cstdint</label>
      </node>
      <node id="3632">
        <label>rmm/mr/device/owning_wrapper.hpp</label>
      </node>
      <node id="3637">
        <label>rmm/mr/device/logging_resource_adaptor.hpp</label>
      </node>
      <node id="3616">
        <label>execution_graph/logic_controllers/BlazingColumn.h</label>
        <link refid="BlazingColumn_8h_source"/>
        <childnode refid="3617" relation="include">
        </childnode>
        <childnode refid="3614" relation="include">
        </childnode>
        <childnode refid="3615" relation="include">
        </childnode>
        <childnode refid="3599" relation="include">
        </childnode>
        <childnode refid="3602" relation="include">
        </childnode>
        <childnode refid="3603" relation="include">
        </childnode>
      </node>
      <node id="3625">
        <label>transport/Node.h</label>
        <link refid="Node_8h_source"/>
        <childnode refid="3599" relation="include">
        </childnode>
        <childnode refid="3602" relation="include">
        </childnode>
      </node>
      <node id="3660">
        <label>cudf/copying.hpp</label>
      </node>
      <node id="3607">
        <label>error.hpp</label>
        <link refid="error_8hpp_source"/>
        <childnode refid="3608" relation="include">
        </childnode>
        <childnode refid="3603" relation="include">
        </childnode>
        <childnode refid="3609" relation="include">
        </childnode>
        <childnode refid="3610" relation="include">
        </childnode>
      </node>
      <node id="3627">
        <label>cassert</label>
      </node>
      <node id="3633">
        <label>rmm/mr/device/cuda_memory_resource.hpp</label>
      </node>
      <node id="3636">
        <label>rmm/mr/device/arena_memory_resource.hpp</label>
      </node>
      <node id="3658">
        <label>numeric</label>
      </node>
      <node id="3630">
        <label>rmm/cuda_stream_view.hpp</label>
      </node>
      <node id="3602">
        <label>string</label>
      </node>
      <node id="3604">
        <label>map</label>
      </node>
      <node id="3662">
        <label>cudf/null_mask.hpp</label>
      </node>
      <node id="3645">
        <label>spdlog/sinks/basic_file_sink.h</label>
      </node>
      <node id="3618">
        <label>BlazingHostTable.h</label>
        <link refid="BlazingHostTable_8h_source"/>
        <childnode refid="3603" relation="include">
        </childnode>
        <childnode refid="3602" relation="include">
        </childnode>
        <childnode refid="3599" relation="include">
        </childnode>
        <childnode refid="3606" relation="include">
        </childnode>
        <childnode refid="3619" relation="include">
        </childnode>
        <childnode refid="3621" relation="include">
        </childnode>
        <childnode refid="3613" relation="include">
        </childnode>
      </node>
      <node id="3610">
        <label>exception</label>
      </node>
      <node id="3666">
        <label>WaitingQueue.h</label>
        <link refid="WaitingQueue_8h_source"/>
        <childnode refid="3597" relation="include">
        </childnode>
        <childnode refid="3598" relation="include">
        </childnode>
        <childnode refid="3599" relation="include">
        </childnode>
        <childnode refid="3600" relation="include">
        </childnode>
        <childnode refid="3601" relation="include">
        </childnode>
        <childnode refid="3602" relation="include">
        </childnode>
        <childnode refid="3603" relation="include">
        </childnode>
        <childnode refid="3604" relation="include">
        </childnode>
        <childnode refid="3605" relation="include">
        </childnode>
        <childnode refid="3610" relation="include">
        </childnode>
      </node>
      <node id="3624">
        <label>execution_graph/Context.h</label>
        <link refid="Context_8h_source"/>
        <childnode refid="3603" relation="include">
        </childnode>
        <childnode refid="3604" relation="include">
        </childnode>
        <childnode refid="3601" relation="include">
        </childnode>
        <childnode refid="3625" relation="include">
        </childnode>
      </node>
      <node id="3665">
        <label>CacheData.h</label>
        <link refid="CacheData_8h_source"/>
        <childnode refid="3597" relation="include">
        </childnode>
        <childnode refid="3598" relation="include">
        </childnode>
        <childnode refid="3599" relation="include">
        </childnode>
        <childnode refid="3600" relation="include">
        </childnode>
        <childnode refid="3601" relation="include">
        </childnode>
        <childnode refid="3602" relation="include">
        </childnode>
        <childnode refid="3603" relation="include">
        </childnode>
        <childnode refid="3604" relation="include">
        </childnode>
        <childnode refid="3605" relation="include">
        </childnode>
        <childnode refid="3606" relation="include">
        </childnode>
        <childnode refid="3607" relation="include">
        </childnode>
        <childnode refid="3611" relation="include">
        </childnode>
        <childnode refid="3613" relation="include">
        </childnode>
        <childnode refid="3624" relation="include">
        </childnode>
        <childnode refid="3626" relation="include">
        </childnode>
        <childnode refid="3642" relation="include">
        </childnode>
        <childnode refid="3610" relation="include">
        </childnode>
        <childnode refid="3643" relation="include">
        </childnode>
        <childnode refid="3653" relation="include">
        </childnode>
        <childnode refid="3656" relation="include">
        </childnode>
      </node>
      <node id="3643">
        <label>io/data_provider/DataProvider.h</label>
        <link refid="DataProvider_8h_source"/>
        <childnode refid="3605" relation="include">
        </childnode>
        <childnode refid="3644" relation="include">
        </childnode>
        <childnode refid="3645" relation="include">
        </childnode>
        <childnode refid="3646" relation="include">
        </childnode>
        <childnode refid="3647" relation="include">
        </childnode>
        <childnode refid="3648" relation="include">
        </childnode>
        <childnode refid="3649" relation="include">
        </childnode>
        <childnode refid="3606" relation="include">
        </childnode>
        <childnode refid="3650" relation="include">
        </childnode>
        <childnode refid="3651" relation="include">
        </childnode>
        <childnode refid="3604" relation="include">
        </childnode>
        <childnode refid="3599" relation="include">
        </childnode>
        <childnode refid="3603" relation="include">
        </childnode>
        <childnode refid="3652" relation="include">
        </childnode>
        <childnode refid="3613" relation="include">
        </childnode>
      </node>
      <node id="3669">
        <label>utilities/CommonOperations.h</label>
        <link refid="CommonOperations_8h_source"/>
        <childnode refid="3602" relation="include">
        </childnode>
        <childnode refid="3603" relation="include">
        </childnode>
        <childnode refid="3613" relation="include">
        </childnode>
        <childnode refid="3663" relation="include">
        </childnode>
      </node>
      <node id="3664">
        <label>cudf/strings/strings_column_view.hpp</label>
      </node>
      <node id="3605">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="3615">
        <label>cudf/table/table_view.hpp</label>
      </node>
      <node id="3654">
        <label>../Schema.h</label>
        <link refid="Schema_8h_source"/>
        <childnode refid="3602" relation="include">
        </childnode>
        <childnode refid="3603" relation="include">
        </childnode>
        <childnode refid="3606" relation="include">
        </childnode>
        <childnode refid="3613" relation="include">
        </childnode>
      </node>
      <node id="3668">
        <label>random</label>
      </node>
      <node id="3647">
        <label>arrow/io/interfaces.h</label>
      </node>
      <node id="3600">
        <label>condition_variable</label>
      </node>
      <node id="3657">
        <label>communication/messages/MessageUtil.cuh</label>
      </node>
      <node id="3641">
        <label>sys/statvfs.h</label>
      </node>
      <node id="3650">
        <label>cudf/utilities/type_dispatcher.hpp</label>
      </node>
      <node id="3659">
        <label>tuple</label>
      </node>
      <node id="3644">
        <label>spdlog/async.h</label>
      </node>
      <node id="3622">
        <label>stack</label>
      </node>
      <node id="3603">
        <label>vector</label>
      </node>
      <node id="3619">
        <label>transport/ColumnTransport.h</label>
        <link refid="ColumnTransport_8h_source"/>
        <childnode refid="3620" relation="include">
        </childnode>
      </node>
      <node id="3663">
        <label>cudf/column/column_factories.hpp</label>
      </node>
      <node id="3661">
        <label>cudf/column/column.hpp</label>
      </node>
      <node id="3623">
        <label>ucp/api/ucp.h</label>
      </node>
      <node id="3646">
        <label>spdlog/sinks/stdout_color_sinks.h</label>
      </node>
      <node id="3621">
        <label>bmr/BufferProvider.h</label>
        <link refid="BufferProvider_8h_source"/>
        <childnode refid="3603" relation="include">
        </childnode>
        <childnode refid="3602" relation="include">
        </childnode>
        <childnode refid="3622" relation="include">
        </childnode>
        <childnode refid="3601" relation="include">
        </childnode>
        <childnode refid="3599" relation="include">
        </childnode>
        <childnode refid="3623" relation="include">
        </childnode>
      </node>
      <node id="3672">
        <label>Util/StringUtil.h</label>
      </node>
      <node id="3653">
        <label>io/data_parser/DataParser.h</label>
        <link refid="DataParser_8h_source"/>
        <childnode refid="3654" relation="include">
        </childnode>
        <childnode refid="3655" relation="include">
        </childnode>
        <childnode refid="3643" relation="include">
        </childnode>
        <childnode refid="3613" relation="include">
        </childnode>
        <childnode refid="3647" relation="include">
        </childnode>
        <childnode refid="3599" relation="include">
        </childnode>
        <childnode refid="3603" relation="include">
        </childnode>
      </node>
      <node id="3606">
        <label>cudf/types.hpp</label>
      </node>
      <node id="3638">
        <label>rmm/mr/device/per_device_resource.hpp</label>
      </node>
      <node id="3670">
        <label>cudf/io/orc.hpp</label>
      </node>
      <node id="3655">
        <label>../DataType.h</label>
        <link refid="DataType_8h_source"/>
      </node>
      <node id="3642">
        <label>communication/CommunicationData.h</label>
        <link refid="CommunicationData_8h_source"/>
        <childnode refid="3623" relation="include">
        </childnode>
        <childnode refid="3625" relation="include">
        </childnode>
        <childnode refid="3599" relation="include">
        </childnode>
        <childnode refid="3602" relation="include">
        </childnode>
        <childnode refid="3604" relation="include">
        </childnode>
      </node>
      <node id="3608">
        <label>iostream</label>
      </node>
      <node id="3617">
        <label>cudf/column/column_view.hpp</label>
      </node>
      <node id="3598">
        <label>deque</label>
      </node>
      <node id="3601">
        <label>mutex</label>
      </node>
      <node id="3629">
        <label>cuda_runtime_api.h</label>
      </node>
      <node id="3612">
        <label>chrono</label>
      </node>
      <node id="3674">
        <label>src/utilities/DebuggingUtils.h</label>
        <link refid="DebuggingUtils_8h_source"/>
        <childnode refid="3613" relation="include">
        </childnode>
      </node>
      <node id="3671">
        <label>CalciteExpressionParsing.h</label>
        <link refid="CalciteExpressionParsing_8h_source"/>
        <childnode refid="3606" relation="include">
        </childnode>
        <childnode refid="3602" relation="include">
        </childnode>
        <childnode refid="3603" relation="include">
        </childnode>
      </node>
      <node id="3652">
        <label>blazingdb/io/FileSystem/Uri.h</label>
      </node>
      <node id="3611">
        <label>CodeTimer.h</label>
        <link refid="CodeTimer_8h_source"/>
        <childnode refid="3612" relation="include">
        </childnode>
      </node>
      <node id="3631">
        <label>rmm/mr/device/device_memory_resource.hpp</label>
      </node>
      <node id="3626">
        <label>bmr/BlazingMemoryResource.h</label>
        <link refid="BlazingMemoryResource_8h_source"/>
        <childnode refid="3627" relation="include">
        </childnode>
        <childnode refid="3597" relation="include">
        </childnode>
        <childnode refid="3628" relation="include">
        </childnode>
        <childnode refid="3629" relation="include">
        </childnode>
        <childnode refid="3630" relation="include">
        </childnode>
        <childnode refid="3631" relation="include">
        </childnode>
        <childnode refid="3632" relation="include">
        </childnode>
        <childnode refid="3633" relation="include">
        </childnode>
        <childnode refid="3634" relation="include">
        </childnode>
        <childnode refid="3635" relation="include">
        </childnode>
        <childnode refid="3636" relation="include">
        </childnode>
        <childnode refid="3637" relation="include">
        </childnode>
        <childnode refid="3638" relation="include">
        </childnode>
        <childnode refid="3639" relation="include">
        </childnode>
        <childnode refid="3640" relation="include">
        </childnode>
        <childnode refid="3641" relation="include">
        </childnode>
      </node>
      <node id="3635">
        <label>rmm/mr/device/pool_memory_resource.hpp</label>
      </node>
      <node id="3628">
        <label>set</label>
      </node>
      <node id="3614">
        <label>cudf/table/table.hpp</label>
      </node>
      <node id="3609">
        <label>cudf/utilities/error.hpp</label>
      </node>
      <node id="3673">
        <label>stdio.h</label>
      </node>
      <node id="3648">
        <label>cudf/scalar/scalar.hpp</label>
      </node>
      <node id="3599">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceral">ral</innernamespace>
    <innernamespace refid="namespaceral_1_1cache">ral::cache</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;CacheMachine.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;random&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utilities/CommonOperations.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cudf/io/orc.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CalciteExpressionParsing.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;communication/CommunicationData.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Util/StringUtil.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Util/StringUtil.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;src/utilities/DebuggingUtils.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd_1_1chrono__literals" kindref="compound">std::chrono_literals</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceral" kindref="compound">ral</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">cache<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal">std::string<sp/>randomString(std::size_t<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>characters<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>std::random_device<sp/>random_device;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>std::mt19937<sp/>generator(random_device());</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>std::uniform_int_distribution&lt;&gt;<sp/>distribution(0,<sp/>characters.size()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>random_string;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>random_string<sp/>+=<sp/>characters[distribution(generator)];</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>random_string;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">std::string<sp/>MetadataDictionary::get_value(std::string<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;has_value(key))<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;values.at(key);</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MetadataDictionary::set_value(std::string<sp/>key,<sp/>std::string<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;values[key]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classral_1_1cache_1_1CacheData_1af70878c08fae1935cd0a39999cabf6fb" refkind="member"><highlight class="normal">std::unique_ptr&lt;CacheData&gt;<sp/>CacheData::downgradeCacheData(std::unique_ptr&lt;CacheData&gt;<sp/>cacheData,<sp/>std::string<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>std::shared_ptr&lt;Context&gt;<sp/>ctx)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>its<sp/>not<sp/>a<sp/>GPU<sp/>cacheData,<sp/>then<sp/>we<sp/>can&apos;t<sp/>downgrade<sp/>it,<sp/>so<sp/>we<sp/>can<sp/>just<sp/>return<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cacheData-&gt;get_type()<sp/>!=<sp/>ral::cache::CacheDataType::GPU){</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cacheData;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCodeTimer" kindref="compound">CodeTimer</ref><sp/>cacheEventTimer(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cacheEventTimer.start();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>table<sp/>=<sp/>cacheData-&gt;decache();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;spdlog::logger&gt;<sp/>cache_events_logger<sp/>=<sp/>spdlog::get(</highlight><highlight class="stringliteral">&quot;cache_events_logger&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lets<sp/>first<sp/>try<sp/>to<sp/>put<sp/>it<sp/>into<sp/>CPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classblazing__host__memory__resource_1a1fa50b80350c0718dc4ee026e8425e7a" kindref="member">blazing_host_memory_resource::getInstance</ref>().get_memory_used()<sp/>+<sp/>table-&gt;sizeInBytes()<sp/>&lt;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classblazing__host__memory__resource_1a1fa50b80350c0718dc4ee026e8425e7a" kindref="member">blazing_host_memory_resource::getInstance</ref>().get_memory_limit()){</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>CPUCache<sp/>=<sp/>std::make_unique&lt;CPUCacheData&gt;(std::move(table));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cacheEventTimer.stop();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cache_events_logger)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_events_logger-&gt;info(</highlight><highlight class="stringliteral">&quot;{ral_id}|{query_id}|{message_id}|{cache_id}|{num_rows}|{num_bytes}|{event_type}|{timestamp_begin}|{timestamp_end}|{description}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ral_id&quot;</highlight><highlight class="normal">_a=(ctx<sp/>?<sp/>ctx-&gt;getNodeIndex(ral::communication::CommunicationData::getInstance().getSelfNode())<sp/>:<sp/>-1),</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;query_id&quot;</highlight><highlight class="normal">_a=(ctx<sp/>?<sp/>ctx-&gt;getContextToken()<sp/>:<sp/>-1),</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;message_id&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;cache_id&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;num_rows&quot;</highlight><highlight class="normal">_a=(CPUCache<sp/>?<sp/>CPUCache-&gt;num_rows()<sp/>:<sp/>-1),</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;num_bytes&quot;</highlight><highlight class="normal">_a=(CPUCache<sp/>?<sp/>CPUCache-&gt;sizeInBytes()<sp/>:<sp/>-1),</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;event_type&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;DowngradeCacheData&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;timestamp_begin&quot;</highlight><highlight class="normal">_a=cacheEventTimer.start_time(),</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;timestamp_end&quot;</highlight><highlight class="normal">_a=cacheEventTimer.end_time(),</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;description&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;Downgraded<sp/>CacheData<sp/>to<sp/>CPU<sp/>cache&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CPUCache;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>want<sp/>to<sp/>get<sp/>only<sp/>cache<sp/>directory<sp/>where<sp/>orc<sp/>files<sp/>should<sp/>be<sp/>saved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>orc_files_path<sp/>=<sp/>ral::communication::CommunicationData::getInstance().get_cache_directory();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>localCache<sp/>=<sp/>std::make_unique&lt;CacheDataLocalFile&gt;(std::move(table),<sp/>orc_files_path,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ctx<sp/>?<sp/>std::to_string(ctx-&gt;getContextToken())</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cacheEventTimer.stop();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cache_events_logger)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_events_logger-&gt;info(</highlight><highlight class="stringliteral">&quot;{ral_id}|{query_id}|{message_id}|{cache_id}|{num_rows}|{num_bytes}|{event_type}|{timestamp_begin}|{timestamp_end}|{description}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ral_id&quot;</highlight><highlight class="normal">_a=(ctx<sp/>?<sp/>ctx-&gt;getNodeIndex(ral::communication::CommunicationData::getInstance().getSelfNode())<sp/>:<sp/>-1),</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;query_id&quot;</highlight><highlight class="normal">_a=(ctx<sp/>?<sp/>ctx-&gt;getContextToken()<sp/>:<sp/>-1),</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;message_id&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;cache_id&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;num_rows&quot;</highlight><highlight class="normal">_a=(localCache<sp/>?<sp/>localCache-&gt;num_rows()<sp/>:<sp/>-1),</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;num_bytes&quot;</highlight><highlight class="normal">_a=(localCache<sp/>?<sp/>localCache-&gt;sizeInBytes()<sp/>:<sp/>-1),</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;event_type&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;DowngradeCacheData&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;timestamp_begin&quot;</highlight><highlight class="normal">_a=cacheEventTimer.start_time(),</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;timestamp_end&quot;</highlight><highlight class="normal">_a=cacheEventTimer.end_time(),</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;description&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;Downgraded<sp/>CacheData<sp/>to<sp/>Disk<sp/>cache<sp/>to<sp/>path:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>orc_files_path);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>localCache;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BEGIN<sp/>CPUCacheData</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="classral_1_1cache_1_1CPUCacheData_1a0b647a41636c90cd2992a2cc11994af1" refkind="member"><highlight class="normal">CPUCacheData::CPUCacheData(std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>gpu_table,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_pinned)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref>(CacheDataType::CPU,<sp/>gpu_table-&gt;names(),<sp/>gpu_table-&gt;get_schema(),<sp/>gpu_table-&gt;num_rows())</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classral_1_1cache_1_1CPUCacheData_1ae46ccefa906792a3b31bbd94e7fdcef1" kindref="member">host_table</ref><sp/>=<sp/>ral::communication::messages::serialize_gpu_message_to_host_table(gpu_table-&gt;toBlazingTableView(),<sp/>use_pinned);</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><ref refid="classral_1_1cache_1_1CPUCacheData_1a0b647a41636c90cd2992a2cc11994af1" kindref="member">CPUCacheData::CPUCacheData</ref>(std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>gpu_table,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classral_1_1cache_1_1MetadataDictionary" kindref="compound">MetadataDictionary</ref><sp/>&amp;<sp/><ref refid="classral_1_1cache_1_1CacheData_1aaeb232ef3aa8c2a3d86e1169ed2e8152" kindref="member">metadata</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_pinned)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref>(CacheDataType::CPU,<sp/>gpu_table-&gt;names(),<sp/>gpu_table-&gt;get_schema(),<sp/>gpu_table-&gt;num_rows())</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classral_1_1cache_1_1CPUCacheData_1ae46ccefa906792a3b31bbd94e7fdcef1" kindref="member">host_table</ref><sp/>=<sp/>ral::communication::messages::serialize_gpu_message_to_host_table(gpu_table-&gt;toBlazingTableView(),<sp/>use_pinned);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;metadata<sp/>=<sp/><ref refid="classral_1_1cache_1_1CacheData_1aaeb232ef3aa8c2a3d86e1169ed2e8152" kindref="member">metadata</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><ref refid="classral_1_1cache_1_1CPUCacheData_1a0b647a41636c90cd2992a2cc11994af1" kindref="member">CPUCacheData::CPUCacheData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;blazingdb::transport::ColumnTransport&gt;<sp/>&amp;<sp/>column_transports,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;ral::memory::blazing_chunked_column_info&gt;<sp/>&amp;&amp;<sp/>chunked_column_infos,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::unique_ptr&lt;ral::memory::blazing_allocation_chunk&gt;&gt;<sp/>&amp;&amp;<sp/>allocations,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classral_1_1cache_1_1MetadataDictionary" kindref="compound">MetadataDictionary</ref><sp/>&amp;<sp/>metadata)<sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classral_1_1cache_1_1CacheData_1acf9d130e22baac61d4689c52e36b9c17" kindref="member">cache_type</ref><sp/>=<sp/>CacheDataType::CPU;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>column_transports.size();<sp/>i++){</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classral_1_1cache_1_1CacheData_1a7a43a46a362c8fe93a7af81debbeca1b" kindref="member">col_names</ref>.push_back(std::string(column_transports[i].metadata.col_name));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classral_1_1cache_1_1CacheData_1aec9a1b3c0fb78cfdb3bd5494bcee2d8f" kindref="member">schema</ref>.push_back(cudf::data_type{cudf::type_id(column_transports[i].metadata.dtype)});<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(column_transports.size()<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classral_1_1cache_1_1CacheData_1a4cdddfb8e552e0e3e91877ae80e5fc9e" kindref="member">n_rows</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classral_1_1cache_1_1CacheData_1a4cdddfb8e552e0e3e91877ae80e5fc9e" kindref="member">n_rows</ref><sp/>=<sp/>column_transports[0].metadata.size;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classral_1_1cache_1_1CPUCacheData_1ae46ccefa906792a3b31bbd94e7fdcef1" kindref="member">host_table</ref><sp/>=<sp/>std::make_unique&lt;ral::frame::BlazingHostTable&gt;(column_transports,std::move(chunked_column_infos),<sp/>std::move(allocations));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;metadata<sp/>=<sp/><ref refid="classral_1_1cache_1_1CacheData_1aaeb232ef3aa8c2a3d86e1169ed2e8152" kindref="member">metadata</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="classral_1_1cache_1_1CPUCacheData_1ae74c9b51edabc2aa06f8923c6f3afc5f" refkind="member"><highlight class="normal"><ref refid="classral_1_1cache_1_1CPUCacheData_1a0b647a41636c90cd2992a2cc11994af1" kindref="member">CPUCacheData::CPUCacheData</ref>(std::unique_ptr&lt;ral::frame::BlazingHostTable&gt;<sp/><ref refid="classral_1_1cache_1_1CPUCacheData_1ae46ccefa906792a3b31bbd94e7fdcef1" kindref="member">host_table</ref>)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref>(CacheDataType::CPU,<sp/>host_table-&gt;<ref refid="classral_1_1cache_1_1CacheData_1aa2c8d58823d781cc1f8e6e589d897642" kindref="member">names</ref>(),<sp/>host_table-&gt;<ref refid="classral_1_1cache_1_1CacheData_1a747bc7b9113756471ce8a7bce2c46689" kindref="member">get_schema</ref>(),<sp/>host_table-&gt;<ref refid="classral_1_1cache_1_1CacheData_1a14a5b9fadf872c12d633e38bb6f9f07d" kindref="member">num_rows</ref>()),<sp/>host_table{std::move(host_table)}</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//<sp/>END<sp/>CPUCacheData</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BEGIN<sp/>CacheDataLocalFile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="classral_1_1cache_1_1CacheDataLocalFile_1aa8f42a81e963c076ebdf7bc6bc53a323" refkind="member"><highlight class="normal"><ref refid="classral_1_1cache_1_1CacheDataLocalFile_1aa8f42a81e963c076ebdf7bc6bc53a323" kindref="member">CacheDataLocalFile::CacheDataLocalFile</ref>(std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>table,<sp/>std::string<sp/>orc_files_path,<sp/>std::string<sp/>ctx_token)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref>(CacheDataType::LOCAL_FILE,<sp/>table-&gt;<ref refid="classral_1_1cache_1_1CacheData_1aa2c8d58823d781cc1f8e6e589d897642" kindref="member">names</ref>(),<sp/>table-&gt;<ref refid="classral_1_1cache_1_1CacheData_1a747bc7b9113756471ce8a7bce2c46689" kindref="member">get_schema</ref>(),<sp/>table-&gt;<ref refid="classral_1_1cache_1_1CacheData_1a14a5b9fadf872c12d633e38bb6f9f07d" kindref="member">num_rows</ref>())</highlight></codeline>
<codeline lineno="154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;size_in_bytes<sp/>=<sp/>table-&gt;sizeInBytes();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;filePath_<sp/>=<sp/>orc_files_path<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/.blazing-temp-&quot;</highlight><highlight class="normal"><sp/>+<sp/>ctx_token<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal"><sp/>+<sp/>randomString(64)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.orc&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filling<sp/>this-&gt;col_names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>name<sp/>:<sp/>table-&gt;names())<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;col_names.push_back(name);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>attempts<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>attempts_limit<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(attempts<sp/>&lt;=<sp/>attempts_limit){</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudf::io::table_metadata<sp/><ref refid="classral_1_1cache_1_1CacheData_1aaeb232ef3aa8c2a3d86e1169ed2e8152" kindref="member">metadata</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>name<sp/>:<sp/>table-&gt;names())<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata.column_names.emplace_back(name);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudf::io::orc_writer_options<sp/>out_opts<sp/>=<sp/>cudf::io::orc_writer_options::builder(cudf::io::sink_info{this-&gt;filePath_},<sp/>table-&gt;view())</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="classral_1_1cache_1_1CacheData_1aaeb232ef3aa8c2a3d86e1169ed2e8152" kindref="member">metadata</ref>(&amp;metadata);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudf::io::write_orc(out_opts);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(cudf::logic_error<sp/>&amp;<sp/>err){</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;spdlog::logger&gt;<sp/>logger<sp/>=<sp/>spdlog::get(</highlight><highlight class="stringliteral">&quot;batch_logger&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logger)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;error(</highlight><highlight class="stringliteral">&quot;|||{info}||||rows|{rows}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>CacheDataLocalFile<sp/>in<sp/>path:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>this-&gt;filePath_<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>attempt<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(attempts),</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;rows&quot;</highlight><highlight class="normal">_a=table-&gt;num_rows());</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attempts++;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attempts<sp/>==<sp/>attempts_limit){</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::this_thread::sleep_for<sp/>(std::chrono::milliseconds(5<sp/>*<sp/>attempts));</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="classral_1_1cache_1_1CacheDataLocalFile_1abc8a4d9edc7ffa21f15010c60a71189b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classral_1_1cache_1_1CacheDataLocalFile_1abc8a4d9edc7ffa21f15010c60a71189b" kindref="member">CacheDataLocalFile::fileSizeInBytes</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>st;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(stat(this-&gt;filePath_.c_str(),<sp/>&amp;st)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(st.st_size);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="classral_1_1cache_1_1CacheDataLocalFile_1ab0853eca16df1149f4ac0efbf3faa556" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classral_1_1cache_1_1CacheDataLocalFile_1ab0853eca16df1149f4ac0efbf3faa556" kindref="member">CacheDataLocalFile::sizeInBytes</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size_in_bytes;</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="classral_1_1cache_1_1CacheDataLocalFile_1a1d34227fbbf671e47119846ee2f2a0af" refkind="member"><highlight class="normal">std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/><ref refid="classral_1_1cache_1_1CacheDataLocalFile_1a1d34227fbbf671e47119846ee2f2a0af" kindref="member">CacheDataLocalFile::decache</ref>()<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>cudf::io::orc_reader_options<sp/>read_opts<sp/>=<sp/>cudf::io::orc_reader_options::builder(cudf::io::source_info{this-&gt;filePath_});</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>cudf::io::read_orc(read_opts);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>temp<sp/>orc<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*orc_path_file<sp/>=<sp/>this-&gt;filePath_.c_str();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal">(orc_path_file);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;ral::frame::BlazingTable&gt;(std::move(result.tbl),<sp/>this-&gt;col_names<sp/>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">//<sp/>END<sp/>CacheDataLocalFile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BEGIN<sp/>CacheDataIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="classral_1_1cache_1_1CacheDataIO_1a1f6787bfd6d9555836423b6d3335ed73" refkind="member"><highlight class="normal"><ref refid="classral_1_1cache_1_1CacheDataIO_1a1f6787bfd6d9555836423b6d3335ed73" kindref="member">CacheDataIO::CacheDataIO</ref>(<ref refid="structral_1_1io_1_1data__handle" kindref="compound">ral::io::data_handle</ref><sp/>handle,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ral::io::data_parser&gt;<sp/>parser,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classral_1_1io_1_1Schema" kindref="compound">ral::io::Schema</ref><sp/><ref refid="classral_1_1cache_1_1CacheData_1aec9a1b3c0fb78cfdb3bd5494bcee2d8f" kindref="member">schema</ref>,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classral_1_1io_1_1Schema" kindref="compound">ral::io::Schema</ref><sp/>file_schema,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>row_group_ids,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>projections)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref>(CacheDataType::IO_FILE,<sp/>schema.get_names(),<sp/>schema.get_data_types(),<sp/>1),</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>handle(handle),<sp/>parser(parser),<sp/>schema(schema),</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>file_schema(file_schema),<sp/>row_group_ids(row_group_ids),</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>projections(projections)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="classral_1_1cache_1_1CacheDataIO_1a3364dc1069ceba37e2ffc97e5a4508aa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classral_1_1cache_1_1CacheDataIO_1a3364dc1069ceba37e2ffc97e5a4508aa" kindref="member">CacheDataIO::sizeInBytes</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="classral_1_1cache_1_1CacheDataIO_1a7fb2dceef20a385e31508ac70edfbf58" refkind="member"><highlight class="normal">std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/><ref refid="classral_1_1cache_1_1CacheDataIO_1a7fb2dceef20a385e31508ac70edfbf58" kindref="member">CacheDataIO::decache</ref>(){</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(schema.all_in_file()){</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>loaded_table<sp/>=<sp/>parser-&gt;parse_batch(handle,<sp/>file_schema,<sp/>projections,<sp/>row_group_ids);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>loaded_table;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>column_indices_in_file;<sp/><sp/></highlight><highlight class="comment">//<sp/>column<sp/>indices<sp/>that<sp/>are<sp/>from<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>projection_idx<sp/>:<sp/>projections){</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(schema.get_in_file()[projection_idx])<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>column_indices_in_file.push_back(projection_idx);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::unique_ptr&lt;cudf::column&gt;&gt;<sp/>all_columns(projections.size());</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::unique_ptr&lt;cudf::column&gt;&gt;<sp/>file_columns;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classral_1_1cache_1_1CacheData_1aa2c8d58823d781cc1f8e6e589d897642" kindref="member">names</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudf::size_type<sp/><ref refid="classral_1_1cache_1_1CacheData_1a14a5b9fadf872c12d633e38bb6f9f07d" kindref="member">num_rows</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(column_indices_in_file.size()<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>current_blazing_table<sp/>=<sp/>parser-&gt;parse_batch(handle,<sp/>file_schema,<sp/>column_indices_in_file,<sp/>row_group_ids);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>names<sp/>=<sp/>current_blazing_table-&gt;names();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;CudfTable&gt;<sp/>current_table<sp/>=<sp/>current_blazing_table-&gt;releaseCudfTable();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_rows<sp/>=<sp/>current_table-&gt;num_rows();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_columns<sp/>=<sp/>current_table-&gt;release();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>all<sp/>tables<sp/>we<sp/>are<sp/>&quot;loading&quot;<sp/>are<sp/>from<sp/>hive<sp/>partitions,<sp/>so<sp/>we<sp/>dont<sp/>know<sp/>how<sp/>many<sp/>rows<sp/>we<sp/>need<sp/>unless<sp/>we<sp/>load<sp/>something<sp/>to<sp/>get<sp/>the<sp/>number<sp/>of<sp/>rows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>temp_column_indices<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>loaded_table<sp/>=<sp/>parser-&gt;parse_batch(handle,<sp/>file_schema,<sp/>temp_column_indices,<sp/>row_group_ids);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_rows<sp/>=<sp/>loaded_table-&gt;num_rows();</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>in_file_column_counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>projections.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_ind<sp/>=<sp/>projections[i];</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!schema.get_in_file()[col_ind])<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>schema.get_name(col_ind);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>names.push_back(name);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudf::type_id<sp/>type<sp/>=<sp/>schema.get_dtype(col_ind);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>literal_str<sp/>=<sp/>handle.column_values[name];</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;cudf::scalar&gt;<sp/>scalar<sp/>=<sp/>get_scalar_from_string(literal_str,<sp/>cudf::data_type{type},</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_columns[i]<sp/>=<sp/>cudf::make_column_from_scalar(*scalar,<sp/>num_rows);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_columns[i]<sp/>=<sp/>std::move(file_columns[in_file_column_counter]);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_file_column_counter++;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>unique_table<sp/>=<sp/>std::make_unique&lt;cudf::table&gt;(std::move(all_columns));</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;ral::frame::BlazingTable&gt;(std::move(unique_table),<sp/><ref refid="classral_1_1cache_1_1CacheData_1aa2c8d58823d781cc1f8e6e589d897642" kindref="member">names</ref>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">//<sp/>END<sp/>CacheDataIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BEGIN<sp/>ConcatCacheData</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="classral_1_1cache_1_1ConcatCacheData_1a9b88f49d90532642cb20be1de7f414c5" refkind="member"><highlight class="normal"><ref refid="classral_1_1cache_1_1ConcatCacheData_1a9b88f49d90532642cb20be1de7f414c5" kindref="member">ConcatCacheData::ConcatCacheData</ref>(std::vector&lt;std::unique_ptr&lt;CacheData&gt;&gt;<sp/>cache_datas,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/><ref refid="classral_1_1cache_1_1CacheData_1a7a43a46a362c8fe93a7af81debbeca1b" kindref="member">col_names</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;cudf::data_type&gt;&amp;<sp/>schema)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref>(CacheDataType::CONCATENATING,<sp/>col_names,<sp/>schema,<sp/>0),<sp/>_cache_datas{std::move(cache_datas)}<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classral_1_1cache_1_1CacheData_1a4cdddfb8e552e0e3e91877ae80e5fc9e" kindref="member">n_rows</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>cache_data<sp/>:<sp/>_cache_datas)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cache_schema<sp/>=<sp/>cache_data-&gt;get_schema();</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RAL_EXPECTS(std::equal(<ref refid="classral_1_1cache_1_1CacheData_1aec9a1b3c0fb78cfdb3bd5494bcee2d8f" kindref="member">schema</ref>.begin(),<sp/><ref refid="classral_1_1cache_1_1CacheData_1aec9a1b3c0fb78cfdb3bd5494bcee2d8f" kindref="member">schema</ref>.end(),<sp/>cache_schema.begin()),<sp/></highlight><highlight class="stringliteral">&quot;Cache<sp/>data<sp/>has<sp/>a<sp/>different<sp/>schema&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classral_1_1cache_1_1CacheData_1a4cdddfb8e552e0e3e91877ae80e5fc9e" kindref="member">n_rows</ref><sp/>+=<sp/>cache_data-&gt;num_rows();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="classral_1_1cache_1_1ConcatCacheData_1af726fc27fcf1621fff1f399f8b2d3cec" refkind="member"><highlight class="normal">std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/><ref refid="classral_1_1cache_1_1ConcatCacheData_1af726fc27fcf1621fff1f399f8b2d3cec" kindref="member">ConcatCacheData::decache</ref>()<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_cache_datas.empty())<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ral::utilities::create_empty_table(<ref refid="classral_1_1cache_1_1CacheData_1a7a43a46a362c8fe93a7af81debbeca1b" kindref="member">col_names</ref>,<sp/><ref refid="classral_1_1cache_1_1CacheData_1aec9a1b3c0fb78cfdb3bd5494bcee2d8f" kindref="member">schema</ref>);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_cache_datas.size()<sp/>==<sp/>1)<sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_cache_datas[0]-&gt;decache();</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::unique_ptr&lt;ral::frame::BlazingTable&gt;&gt;<sp/>tables_holder;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;ral::frame::BlazingTableView&gt;<sp/>table_views;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>cache_data<sp/>:<sp/>_cache_datas){</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tables_holder.push_back(cache_data-&gt;decache());</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table_views.push_back(tables_holder.back()-&gt;toBlazingTableView());</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RAL_EXPECTS(!ral::utilities::checkIfConcatenatingStringsWillOverflow(table_views),<sp/></highlight><highlight class="stringliteral">&quot;Concatenating<sp/>tables<sp/>will<sp/>overflow&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ral::utilities::concatTables(table_views);</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="classral_1_1cache_1_1ConcatCacheData_1a25914d06c36e4a1748dc9479adc5ccd8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classral_1_1cache_1_1ConcatCacheData_1a25914d06c36e4a1748dc9479adc5ccd8" kindref="member">ConcatCacheData::sizeInBytes</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>total_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>cache_data<sp/>:<sp/>_cache_datas)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_size<sp/>+=<sp/>cache_data-&gt;sizeInBytes();</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>total_size;</highlight></codeline>
<codeline lineno="328"><highlight class="normal">};</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="classral_1_1cache_1_1ConcatCacheData_1a02f400f33f88ba3e216f5899fa4f12b8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classral_1_1cache_1_1ConcatCacheData_1a02f400f33f88ba3e216f5899fa4f12b8" kindref="member">ConcatCacheData::set_names</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>&amp;<sp/><ref refid="classral_1_1cache_1_1CacheData_1aa2c8d58823d781cc1f8e6e589d897642" kindref="member">names</ref>)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>_cache_datas.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_cache_datas[i]-&gt;set_names(names);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal">std::vector&lt;std::unique_ptr&lt;CacheData&gt;&gt;<sp/>ConcatCacheData::releaseCacheDatas(){</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(_cache_datas);</highlight></codeline>
<codeline lineno="338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="comment">//<sp/>END<sp/>ConcatCacheData</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ral</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.cpp"/>
  </compounddef>
</doxygen>
