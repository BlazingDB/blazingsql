<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespaceral_1_1processor_1_1strings" kind="namespace" language="C++">
    <compoundname>ral::processor::strings</compoundname>
    <innerclass refid="structral_1_1processor_1_1strings_1_1cast__to__str__functor" prot="public">ral::processor::strings::cast_to_str_functor</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="LogicalProject_8cpp_1a186318ac9040cd20e11b5d2bfcbf26c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string ral::processor::strings::like_expression_to_regex_str</definition>
        <argsstring>(const std::string &amp;like_exp)</argsstring>
        <name>like_expression_to_regex_str</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>like_exp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/LogicalProject.cpp" line="30" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/LogicalProject.cpp" bodystart="30" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="LogicalProject_8cpp_1a42081035b5d999d7867175c61370794b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cudf::strings::strip_type</type>
        <definition>cudf::strings::strip_type ral::processor::strings::map_trim_flag_to_strip_type</definition>
        <argsstring>(const std::string &amp;trim_flag)</argsstring>
        <name>map_trim_flag_to_strip_type</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>trim_flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/LogicalProject.cpp" line="48" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/LogicalProject.cpp" bodystart="48" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="LogicalProject_8cpp_1a5339ddb750de84327f93af50c7babbbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; cudf::column &gt;</type>
        <definition>std::unique_ptr&lt;cudf::column&gt; ral::processor::strings::evaluate_string_functions</definition>
        <argsstring>(const cudf::table_view &amp;table, operator_type op, const std::vector&lt; std::string &gt; &amp;arg_tokens)</argsstring>
        <name>evaluate_string_functions</name>
        <param>
          <type>const cudf::table_view &amp;</type>
          <declname>table</declname>
        </param>
        <param>
          <type>operator_type</type>
          <declname>op</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>arg_tokens</declname>
        </param>
        <briefdescription>
<para>Evaluates a SQL string function. </para>        </briefdescription>
        <detaileddescription>
<para>The string function is evaluated using cudf functions</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>The input table </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>The string function to evaluate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_tokens</parametername>
</parameternamelist>
<parameterdescription>
<para>The parsed function arguments </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/LogicalProject.cpp" line="102" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/LogicalProject.cpp" bodystart="102" bodyend="580"/>
      </memberdef>
      <memberdef kind="function" id="LogicalProject_8cpp_1a7fb707a934a4fa57400675a0727b0d5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; cudf::column &gt;</type>
        <definition>std::unique_ptr&lt;cudf::column&gt; ral::processor::strings::evaluate_string_case_when_else</definition>
        <argsstring>(const cudf::table_view &amp;table, const std::string &amp;condition_expr, const std::string &amp;expr1, const std::string &amp;expr2)</argsstring>
        <name>evaluate_string_case_when_else</name>
        <param>
          <type>const cudf::table_view &amp;</type>
          <declname>table</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>condition_expr</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>expr1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>expr2</declname>
        </param>
        <briefdescription>
<para>Evaluates a &quot;CASE WHEN ELSE&quot; when any of the result expressions is a string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>The input table </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>The string function to evaluate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg_tokens</parametername>
</parameternamelist>
<parameterdescription>
<para>The parsed function arguments </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/LogicalProject.cpp" line="589" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/LogicalProject.cpp" bodystart="589" bodyend="636"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/LogicalProject.cpp" line="28" column="1"/>
  </compounddef>
</doxygen>
