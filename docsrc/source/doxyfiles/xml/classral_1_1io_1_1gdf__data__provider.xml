<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classral_1_1io_1_1gdf__data__provider" kind="class" language="C++" prot="public">
    <compoundname>ral::io::gdf_data_provider</compoundname>
    <basecompoundref refid="classral_1_1io_1_1data__provider" prot="public" virt="non-virtual">ral::io::data_provider</basecompoundref>
    <includes refid="GDFDataProvider_8h" local="no">GDFDataProvider.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classral_1_1io_1_1gdf__data__provider_1ae8abf44c67cee0a0b75d5e4466cc9cb7" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classral_1_1frame_1_1BlazingTableView" kindref="compound">ral::frame::BlazingTableView</ref> &gt;</type>
        <definition>std::vector&lt;ral::frame::BlazingTableView&gt; ral::io::gdf_data_provider::table_views</definition>
        <argsstring></argsstring>
        <name>table_views</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/GDFDataProvider.h" line="69" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/GDFDataProvider.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classral_1_1io_1_1gdf__data__provider_1a28208697c4b65e7633df3514fc77f69f" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t ral::io::gdf_data_provider::current_file</definition>
        <argsstring></argsstring>
        <name>current_file</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>stores an index to the current file being used </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/GDFDataProvider.h" line="73" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/GDFDataProvider.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classral_1_1io_1_1gdf__data__provider_1ac5b54f4a5dac6991870b6f0f96b45b82" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::map&lt; std::string, std::string &gt; &gt;</type>
        <definition>std::vector&lt; std::map&lt;std::string,std::string&gt; &gt; ral::io::gdf_data_provider::column_values</definition>
        <argsstring></argsstring>
        <name>column_values</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/GDFDataProvider.h" line="74" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/GDFDataProvider.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classral_1_1io_1_1gdf__data__provider_1a885555c9892f728d166a8b428be1faa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ral::io::gdf_data_provider::gdf_data_provider</definition>
        <argsstring>(std::vector&lt; ral::frame::BlazingTableView &gt; table_views, std::vector&lt; std::map&lt; std::string, std::string &gt; &gt; column_values)</argsstring>
        <name>gdf_data_provider</name>
        <param>
          <type>std::vector&lt; <ref refid="classral_1_1frame_1_1BlazingTableView" kindref="compound">ral::frame::BlazingTableView</ref> &gt;</type>
          <declname>table_views</declname>
        </param>
        <param>
          <type>std::vector&lt; std::map&lt; std::string, std::string &gt; &gt;</type>
          <declname>column_values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/GDFDataProvider.h" line="29" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/GDFDataProvider.cpp" bodystart="21" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classral_1_1io_1_1gdf__data__provider_1a00dc20eb09d4ef4578d31fd2ed5cc051" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="classral_1_1io_1_1data__provider" kindref="compound">data_provider</ref> &gt;</type>
        <definition>std::shared_ptr&lt; data_provider &gt; ral::io::gdf_data_provider::clone</definition>
        <argsstring>() override</argsstring>
        <name>clone</name>
        <reimplements refid="classral_1_1io_1_1data__provider_1afff64b38ec3107e2e63edf6773ab7414">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/GDFDataProvider.h" line="31" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/GDFDataProvider.cpp" bodystart="32" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classral_1_1io_1_1gdf__data__provider_1a20656ff5c3e1e4bc838a02215d3c0f5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>ral::io::gdf_data_provider::~gdf_data_provider</definition>
        <argsstring>()</argsstring>
        <name>~gdf_data_provider</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/GDFDataProvider.h" line="33" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/GDFDataProvider.cpp" bodystart="36" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classral_1_1io_1_1gdf__data__provider_1af7ad84e9da11d439efe9328db3531855" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ral::io::gdf_data_provider::has_next</definition>
        <argsstring>()</argsstring>
        <name>has_next</name>
        <reimplements refid="classral_1_1io_1_1data__provider_1a92176228bbef65093853e2e2165a6d71">has_next</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>tells us if there are more files in the list of uris to be provided </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/GDFDataProvider.h" line="37" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/GDFDataProvider.cpp" bodystart="40" bodyend="40"/>
        <referencedby refid="classral_1_1io_1_1uri__data__provider_1a53be24f2a445940e82c15b324c7b7c5f" compoundref="UriDataProvider_8cpp" startline="59" endline="69">ral::io::uri_data_provider::get_some</referencedby>
      </memberdef>
      <memberdef kind="function" id="classral_1_1io_1_1gdf__data__provider_1a6bd49396fc1bdeacd68566915e29a15f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ral::io::gdf_data_provider::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <reimplements refid="classral_1_1io_1_1data__provider_1ab762cbdb9fd702a61b48785c84e91536">reset</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resets current_file to 0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/GDFDataProvider.h" line="41" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/GDFDataProvider.cpp" bodystart="42" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classral_1_1io_1_1gdf__data__provider_1a6770bc3c6f51365ecd3c7cc16babb7ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structral_1_1io_1_1data__handle" kindref="compound">data_handle</ref></type>
        <definition>data_handle ral::io::gdf_data_provider::get_next</definition>
        <argsstring>(bool open_file=true)</argsstring>
        <name>get_next</name>
        <reimplements refid="classral_1_1io_1_1data__provider_1aa49cde8c92f3bc4e9fcbe2e8f34e7ba3">get_next</reimplements>
        <param>
          <type>bool</type>
          <declname>open_file</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets a randomaccessfile to the uri at file_uris[current_file] and advances current_file by 1 open_file = true will actually open the file and return a std::shared_ptr&lt;arrow::io::RandomAccessFile&gt;. If its false it will return a nullptr </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/GDFDataProvider.h" line="46" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/GDFDataProvider.cpp" bodystart="65" bodyend="75"/>
        <referencedby refid="classral_1_1io_1_1uri__data__provider_1a53be24f2a445940e82c15b324c7b7c5f" compoundref="UriDataProvider_8cpp" startline="59" endline="69">ral::io::uri_data_provider::get_some</referencedby>
        <referencedby refid="classral_1_1io_1_1uri__data__provider_1a189c193c14fdabc3dd84dca1385688d0" compoundref="UriDataProvider_8cpp" startline="71" endline="241">ral::io::uri_data_provider::get_next</referencedby>
      </memberdef>
      <memberdef kind="function" id="classral_1_1io_1_1gdf__data__provider_1a31af9987a3a5e548954ea5597622b61f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; ral::io::gdf_data_provider::get_errors</definition>
        <argsstring>()</argsstring>
        <name>get_errors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns an empty vector. Used for compatiblity with apis that open files. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/GDFDataProvider.h" line="51" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/GDFDataProvider.cpp" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classral_1_1io_1_1gdf__data__provider_1a26fdba323411bb0b8270f735e6e5ee77" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; <ref refid="structral_1_1io_1_1data__handle" kindref="compound">data_handle</ref> &gt;</type>
        <definition>std::vector&lt; data_handle &gt; ral::io::gdf_data_provider::get_some</definition>
        <argsstring>(std::size_t num_files, bool open_file=true)</argsstring>
        <name>get_some</name>
        <reimplements refid="classral_1_1io_1_1data__provider_1ae65c935f9812ac3321b0c814fa4a5548">get_some</reimplements>
        <param>
          <type>std::size_t</type>
          <declname>num_files</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>open_file</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tries to get up to num_files data_handles. We use this instead of a get_all() because if there are too many files, trying to get too many file handles will cause a crash. Using <ref refid="classral_1_1io_1_1gdf__data__provider_1a26fdba323411bb0b8270f735e6e5ee77" kindref="member">get_some()</ref> forces breaking up the process of getting file_handles. open_file = true will actually open the file and return a std::shared_ptr&lt;arrow::io::RandomAccessFile&gt;. If its false it will return a nullptr </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/GDFDataProvider.h" line="58" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/GDFDataProvider.cpp" bodystart="51" bodyend="62"/>
        <references refid="classral_1_1io_1_1dummy__data__provider_1a18a1c55f0a6042dfa5edc6bc0235b518" compoundref="DummyProvider_8h" startline="31" endline="31">ral::io::dummy_data_provider::has_next</references>
        <references refid="classral_1_1io_1_1dummy__data__provider_1a0e0f9cf9d1c6b4878236746e6c83c108" compoundref="DummyProvider_8h" startline="37" endline="41">ral::io::dummy_data_provider::get_next</references>
      </memberdef>
      <memberdef kind="function" id="classral_1_1io_1_1gdf__data__provider_1a4a78cce759b9bee4d09ceee3014644d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ral::io::gdf_data_provider::close_file_handles</definition>
        <argsstring>()</argsstring>
        <name>close_file_handles</name>
        <reimplements refid="classral_1_1io_1_1data__provider_1afa6216bccde854b011ed098e114ba8b3">close_file_handles</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Does nothing. Used for compatiblity with apis that open files.</para><para>Closes currently open set of file handles maintained by the provider </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/GDFDataProvider.h" line="63" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/GDFDataProvider.cpp" bodystart="80" bodyend="82"/>
        <referencedby refid="classral_1_1io_1_1uri__data__provider_1a89a2e8bd07ce00025d62e877ae56a871" compoundref="UriDataProvider_8cpp" startline="37" endline="39">ral::io::uri_data_provider::get_num_handles</referencedby>
      </memberdef>
      <memberdef kind="function" id="classral_1_1io_1_1gdf__data__provider_1a681eb5bce251e2dc1895a2941d41931f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t ral::io::gdf_data_provider::get_num_handles</definition>
        <argsstring>()</argsstring>
        <name>get_num_handles</name>
        <reimplements refid="classral_1_1io_1_1data__provider_1a00ff9cc629a869d7b7e6a67c90056749">get_num_handles</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of data_handles that will be provided. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/GDFDataProvider.h" line="65" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/GDFDataProvider.cpp" bodystart="27" bodyend="29"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>can generate a series of data_handles from gdfs that are provided when it goes out of scope it will close release any gdfs </para>    </detaileddescription>
    <inheritancegraph>
      <node id="218">
        <label>ral::io::gdf_data_provider</label>
        <link refid="classral_1_1io_1_1gdf__data__provider"/>
        <childnode refid="219" relation="public-inheritance">
        </childnode>
      </node>
      <node id="219">
        <label>ral::io::data_provider</label>
        <link refid="classral_1_1io_1_1data__provider"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="220">
        <label>ral::io::gdf_data_provider</label>
        <link refid="classral_1_1io_1_1gdf__data__provider"/>
        <childnode refid="221" relation="public-inheritance">
        </childnode>
      </node>
      <node id="221">
        <label>ral::io::data_provider</label>
        <link refid="classral_1_1io_1_1data__provider"/>
      </node>
    </collaborationgraph>
    <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/GDFDataProvider.h" line="26" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/GDFDataProvider.h" bodystart="26" bodyend="75"/>
    <listofallmembers>
      <member refid="classral_1_1io_1_1gdf__data__provider_1a00dc20eb09d4ef4578d31fd2ed5cc051" prot="public" virt="virtual"><scope>ral::io::gdf_data_provider</scope><name>clone</name></member>
      <member refid="classral_1_1io_1_1gdf__data__provider_1a4a78cce759b9bee4d09ceee3014644d2" prot="public" virt="virtual"><scope>ral::io::gdf_data_provider</scope><name>close_file_handles</name></member>
      <member refid="classral_1_1io_1_1gdf__data__provider_1ac5b54f4a5dac6991870b6f0f96b45b82" prot="private" virt="non-virtual"><scope>ral::io::gdf_data_provider</scope><name>column_values</name></member>
      <member refid="classral_1_1io_1_1gdf__data__provider_1a28208697c4b65e7633df3514fc77f69f" prot="private" virt="non-virtual"><scope>ral::io::gdf_data_provider</scope><name>current_file</name></member>
      <member refid="classral_1_1io_1_1gdf__data__provider_1a885555c9892f728d166a8b428be1faa8" prot="public" virt="non-virtual"><scope>ral::io::gdf_data_provider</scope><name>gdf_data_provider</name></member>
      <member refid="classral_1_1io_1_1gdf__data__provider_1a31af9987a3a5e548954ea5597622b61f" prot="public" virt="non-virtual"><scope>ral::io::gdf_data_provider</scope><name>get_errors</name></member>
      <member refid="classral_1_1io_1_1gdf__data__provider_1a6770bc3c6f51365ecd3c7cc16babb7ff" prot="public" virt="virtual"><scope>ral::io::gdf_data_provider</scope><name>get_next</name></member>
      <member refid="classral_1_1io_1_1gdf__data__provider_1a681eb5bce251e2dc1895a2941d41931f" prot="public" virt="virtual"><scope>ral::io::gdf_data_provider</scope><name>get_num_handles</name></member>
      <member refid="classral_1_1io_1_1gdf__data__provider_1a26fdba323411bb0b8270f735e6e5ee77" prot="public" virt="virtual"><scope>ral::io::gdf_data_provider</scope><name>get_some</name></member>
      <member refid="classral_1_1io_1_1gdf__data__provider_1af7ad84e9da11d439efe9328db3531855" prot="public" virt="virtual"><scope>ral::io::gdf_data_provider</scope><name>has_next</name></member>
      <member refid="classral_1_1io_1_1gdf__data__provider_1a6bd49396fc1bdeacd68566915e29a15f" prot="public" virt="virtual"><scope>ral::io::gdf_data_provider</scope><name>reset</name></member>
      <member refid="classral_1_1io_1_1gdf__data__provider_1ae8abf44c67cee0a0b75d5e4466cc9cb7" prot="private" virt="non-virtual"><scope>ral::io::gdf_data_provider</scope><name>table_views</name></member>
      <member refid="classral_1_1io_1_1gdf__data__provider_1a20656ff5c3e1e4bc838a02215d3c0f5e" prot="public" virt="virtual"><scope>ral::io::gdf_data_provider</scope><name>~gdf_data_provider</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
