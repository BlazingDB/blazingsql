<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="engine_8cpp" kind="file" language="C++">
    <compoundname>engine.cpp</compoundname>
    <includes local="yes">engine/engine.h</includes>
    <includes refid="CalciteInterpreter_8h" local="yes">../CalciteInterpreter.h</includes>
    <includes refid="ArgsUtil_8h" local="yes">../io/data_parser/ArgsUtil.h</includes>
    <includes refid="CSVParser_8h" local="yes">../io/data_parser/CSVParser.h</includes>
    <includes refid="GDFParser_8h" local="yes">../io/data_parser/GDFParser.h</includes>
    <includes refid="JSONParser_8h" local="yes">../io/data_parser/JSONParser.h</includes>
    <includes refid="OrcParser_8h" local="yes">../io/data_parser/OrcParser.h</includes>
    <includes refid="ArrowParser_8h" local="yes">../io/data_parser/ArrowParser.h</includes>
    <includes refid="ParquetParser_8h" local="yes">../io/data_parser/ParquetParser.h</includes>
    <includes refid="GDFDataProvider_8h" local="yes">../io/data_provider/GDFDataProvider.h</includes>
    <includes refid="UriDataProvider_8h" local="yes">../io/data_provider/UriDataProvider.h</includes>
    <includes refid="SkipDataProcessor_8h" local="yes">../skip_data/SkipDataProcessor.h</includes>
    <includes refid="LogicalFilter_8h" local="yes">../execution_graph/logic_controllers/LogicalFilter.h</includes>
    <includes local="no">numeric</includes>
    <includes local="no">map</includes>
    <includes refid="CommunicationData_8h" local="yes">communication/CommunicationData.h</includes>
    <includes local="no">spdlog/spdlog.h</includes>
    <includes refid="CodeTimer_8h" local="yes">CodeTimer.h</includes>
    <includes refid="protocols_8hpp" local="yes">communication/CommunicationInterface/protocols.hpp</includes>
    <includes refid="error_8hpp" local="yes">error.hpp</includes>
    <incdepgraph>
      <node id="1806">
        <label>atomic</label>
      </node>
      <node id="1864">
        <label>../io/data_provider/GDFDataProvider.h</label>
        <link refid="GDFDataProvider_8h_source"/>
        <childnode refid="1787" relation="include">
        </childnode>
        <childnode refid="1792" relation="include">
        </childnode>
        <childnode refid="1798" relation="include">
        </childnode>
        <childnode refid="1771" relation="include">
        </childnode>
        <childnode refid="1797" relation="include">
        </childnode>
        <childnode refid="1776" relation="include">
        </childnode>
      </node>
      <node id="1862">
        <label>arrow/table.h</label>
      </node>
      <node id="1828">
        <label>config/GPUManager.cuh</label>
      </node>
      <node id="1823">
        <label>rmm/mr/device/managed_memory_resource.hpp</label>
      </node>
      <node id="1865">
        <label>../io/data_provider/UriDataProvider.h</label>
        <link refid="UriDataProvider_8h_source"/>
        <childnode refid="1787" relation="include">
        </childnode>
        <childnode refid="1792" relation="include">
        </childnode>
        <childnode refid="1798" relation="include">
        </childnode>
        <childnode refid="1771" relation="include">
        </childnode>
        <childnode refid="1776" relation="include">
        </childnode>
      </node>
      <node id="1882">
        <label>arpa/inet.h</label>
      </node>
      <node id="1847">
        <label>functional</label>
      </node>
      <node id="1850">
        <label>queue</label>
      </node>
      <node id="1805">
        <label>execution_graph/logic_controllers/CacheMachine.h</label>
        <link refid="CacheMachine_8h_source"/>
        <childnode refid="1806" relation="include">
        </childnode>
        <childnode refid="1807" relation="include">
        </childnode>
        <childnode refid="1776" relation="include">
        </childnode>
        <childnode refid="1808" relation="include">
        </childnode>
        <childnode refid="1784" relation="include">
        </childnode>
        <childnode refid="1770" relation="include">
        </childnode>
        <childnode refid="1771" relation="include">
        </childnode>
        <childnode refid="1797" relation="include">
        </childnode>
        <childnode refid="1788" relation="include">
        </childnode>
        <childnode refid="1772" relation="include">
        </childnode>
        <childnode refid="1809" relation="include">
        </childnode>
        <childnode refid="1813" relation="include">
        </childnode>
        <childnode refid="1773" relation="include">
        </childnode>
        <childnode refid="1799" relation="include">
        </childnode>
        <childnode refid="1815" relation="include">
        </childnode>
        <childnode refid="1831" relation="include">
        </childnode>
        <childnode refid="1812" relation="include">
        </childnode>
        <childnode refid="1787" relation="include">
        </childnode>
        <childnode refid="1768" relation="include">
        </childnode>
        <childnode refid="1832" relation="include">
        </childnode>
        <childnode refid="1841" relation="include">
        </childnode>
        <childnode refid="1842" relation="include">
        </childnode>
      </node>
      <node id="1773">
        <label>execution_graph/logic_controllers/LogicPrimitives.h</label>
        <link refid="LogicPrimitives_8h_source"/>
        <childnode refid="1774" relation="include">
        </childnode>
        <childnode refid="1775" relation="include">
        </childnode>
        <childnode refid="1776" relation="include">
        </childnode>
        <childnode refid="1770" relation="include">
        </childnode>
        <childnode refid="1771" relation="include">
        </childnode>
        <childnode refid="1777" relation="include">
        </childnode>
        <childnode refid="1779" relation="include">
        </childnode>
      </node>
      <node id="1796">
        <label>cudf/scalar/scalar_device_view.cuh</label>
      </node>
      <node id="1866">
        <label>../skip_data/SkipDataProcessor.h</label>
        <link refid="SkipDataProcessor_8h_source"/>
        <childnode refid="1810" relation="include">
        </childnode>
        <childnode refid="1770" relation="include">
        </childnode>
        <childnode refid="1867" relation="include">
        </childnode>
        <childnode refid="1773" relation="include">
        </childnode>
      </node>
      <node id="1832">
        <label>communication/messages/GPUComponentMessage.h</label>
        <link refid="GPUComponentMessage_8h_source"/>
        <childnode refid="1788" relation="include">
        </childnode>
        <childnode refid="1789" relation="include">
        </childnode>
        <childnode refid="1790" relation="include">
        </childnode>
        <childnode refid="1791" relation="include">
        </childnode>
        <childnode refid="1780" relation="include">
        </childnode>
        <childnode refid="1800" relation="include">
        </childnode>
        <childnode refid="1833" relation="include">
        </childnode>
        <childnode refid="1797" relation="include">
        </childnode>
        <childnode refid="1776" relation="include">
        </childnode>
        <childnode refid="1784" relation="include">
        </childnode>
        <childnode refid="1834" relation="include">
        </childnode>
        <childnode refid="1835" relation="include">
        </childnode>
        <childnode refid="1836" relation="include">
        </childnode>
        <childnode refid="1837" relation="include">
        </childnode>
        <childnode refid="1778" relation="include">
        </childnode>
        <childnode refid="1838" relation="include">
        </childnode>
        <childnode refid="1839" relation="include">
        </childnode>
        <childnode refid="1772" relation="include">
        </childnode>
        <childnode refid="1840" relation="include">
        </childnode>
        <childnode refid="1773" relation="include">
        </childnode>
        <childnode refid="1779" relation="include">
        </childnode>
      </node>
      <node id="1829">
        <label>sys/sysinfo.h</label>
      </node>
      <node id="1794">
        <label>cudf/scalar/scalar_factories.hpp</label>
      </node>
      <node id="1881">
        <label>rmm/device_buffer.hpp</label>
      </node>
      <node id="1803">
        <label>kernel_type.h</label>
        <link refid="kernel__type_8h_source"/>
        <childnode refid="1770" relation="include">
        </childnode>
      </node>
      <node id="1878">
        <label>bufferTransport.hpp</label>
        <link refid="bufferTransport_8hpp_source"/>
        <childnode refid="1797" relation="include">
        </childnode>
        <childnode refid="1771" relation="include">
        </childnode>
        <childnode refid="1812" relation="include">
        </childnode>
        <childnode refid="1869" relation="include">
        </childnode>
        <childnode refid="1780" relation="include">
        </childnode>
        <childnode refid="1879" relation="include">
        </childnode>
        <childnode refid="1805" relation="include">
        </childnode>
      </node>
      <node id="1781">
        <label>cstdint</label>
      </node>
      <node id="1821">
        <label>rmm/mr/device/owning_wrapper.hpp</label>
      </node>
      <node id="1879">
        <label>node.hpp</label>
        <link refid="node_8hpp_source"/>
        <childnode refid="1770" relation="include">
        </childnode>
        <childnode refid="1785" relation="include">
        </childnode>
      </node>
      <node id="1826">
        <label>rmm/mr/device/logging_resource_adaptor.hpp</label>
      </node>
      <node id="1873">
        <label>skip_data/utils.hpp</label>
        <link refid="utils_8hpp_source"/>
        <childnode refid="1770" relation="include">
        </childnode>
        <childnode refid="1771" relation="include">
        </childnode>
      </node>
      <node id="1777">
        <label>execution_graph/logic_controllers/BlazingColumn.h</label>
        <link refid="BlazingColumn_8h_source"/>
        <childnode refid="1778" relation="include">
        </childnode>
        <childnode refid="1774" relation="include">
        </childnode>
        <childnode refid="1775" relation="include">
        </childnode>
        <childnode refid="1776" relation="include">
        </childnode>
        <childnode refid="1770" relation="include">
        </childnode>
        <childnode refid="1771" relation="include">
        </childnode>
      </node>
      <node id="1800">
        <label>transport/Node.h</label>
        <link refid="Node_8h_source"/>
        <childnode refid="1776" relation="include">
        </childnode>
        <childnode refid="1770" relation="include">
        </childnode>
      </node>
      <node id="1880">
        <label>messageReceiver.hpp</label>
        <link refid="messageReceiver_8hpp_source"/>
        <childnode refid="1877" relation="include">
        </childnode>
        <childnode refid="1771" relation="include">
        </childnode>
        <childnode refid="1797" relation="include">
        </childnode>
        <childnode refid="1835" relation="include">
        </childnode>
        <childnode refid="1776" relation="include">
        </childnode>
        <childnode refid="1881" relation="include">
        </childnode>
        <childnode refid="1780" relation="include">
        </childnode>
        <childnode refid="1782" relation="include">
        </childnode>
        <childnode refid="1805" relation="include">
        </childnode>
      </node>
      <node id="1836">
        <label>cudf/copying.hpp</label>
      </node>
      <node id="1809">
        <label>error.hpp</label>
        <link refid="error_8hpp_source"/>
        <childnode refid="1810" relation="include">
        </childnode>
        <childnode refid="1771" relation="include">
        </childnode>
        <childnode refid="1811" relation="include">
        </childnode>
        <childnode refid="1812" relation="include">
        </childnode>
      </node>
      <node id="1856">
        <label>cudf/io/datasource.hpp</label>
      </node>
      <node id="1816">
        <label>cassert</label>
      </node>
      <node id="1822">
        <label>rmm/mr/device/cuda_memory_resource.hpp</label>
      </node>
      <node id="1825">
        <label>rmm/mr/device/arena_memory_resource.hpp</label>
      </node>
      <node id="1834">
        <label>numeric</label>
      </node>
      <node id="1819">
        <label>rmm/cuda_stream_view.hpp</label>
      </node>
      <node id="1770">
        <label>string</label>
      </node>
      <node id="1875">
        <label>cudf/aggregation.hpp</label>
      </node>
      <node id="1860">
        <label>../io/data_parser/OrcParser.h</label>
        <link refid="OrcParser_8h_source"/>
        <childnode refid="1768" relation="include">
        </childnode>
        <childnode refid="1792" relation="include">
        </childnode>
        <childnode refid="1776" relation="include">
        </childnode>
        <childnode refid="1771" relation="include">
        </childnode>
        <childnode refid="1856" relation="include">
        </childnode>
        <childnode refid="1854" relation="include">
        </childnode>
      </node>
      <node id="1797">
        <label>map</label>
      </node>
      <node id="1870">
        <label>regex</label>
      </node>
      <node id="1838">
        <label>cudf/null_mask.hpp</label>
      </node>
      <node id="1843">
        <label>kpair.h</label>
        <link refid="kpair_8h_source"/>
        <childnode refid="1804" relation="include">
        </childnode>
        <childnode refid="1802" relation="include">
        </childnode>
      </node>
      <node id="1790">
        <label>spdlog/sinks/basic_file_sink.h</label>
      </node>
      <node id="1779">
        <label>BlazingHostTable.h</label>
        <link refid="BlazingHostTable_8h_source"/>
        <childnode refid="1771" relation="include">
        </childnode>
        <childnode refid="1770" relation="include">
        </childnode>
        <childnode refid="1776" relation="include">
        </childnode>
        <childnode refid="1772" relation="include">
        </childnode>
        <childnode refid="1780" relation="include">
        </childnode>
        <childnode refid="1782" relation="include">
        </childnode>
        <childnode refid="1773" relation="include">
        </childnode>
      </node>
      <node id="1812">
        <label>exception</label>
      </node>
      <node id="1858">
        <label>../io/data_parser/GDFParser.h</label>
        <link refid="GDFParser_8h_source"/>
        <childnode refid="1768" relation="include">
        </childnode>
        <childnode refid="1792" relation="include">
        </childnode>
        <childnode refid="1776" relation="include">
        </childnode>
        <childnode refid="1771" relation="include">
        </childnode>
        <childnode refid="1773" relation="include">
        </childnode>
      </node>
      <node id="1842">
        <label>WaitingQueue.h</label>
        <link refid="WaitingQueue_8h_source"/>
        <childnode refid="1806" relation="include">
        </childnode>
        <childnode refid="1807" relation="include">
        </childnode>
        <childnode refid="1776" relation="include">
        </childnode>
        <childnode refid="1808" relation="include">
        </childnode>
        <childnode refid="1784" relation="include">
        </childnode>
        <childnode refid="1770" relation="include">
        </childnode>
        <childnode refid="1771" relation="include">
        </childnode>
        <childnode refid="1797" relation="include">
        </childnode>
        <childnode refid="1788" relation="include">
        </childnode>
        <childnode refid="1812" relation="include">
        </childnode>
      </node>
      <node id="1799">
        <label>execution_graph/Context.h</label>
        <link refid="Context_8h_source"/>
        <childnode refid="1771" relation="include">
        </childnode>
        <childnode refid="1797" relation="include">
        </childnode>
        <childnode refid="1784" relation="include">
        </childnode>
        <childnode refid="1800" relation="include">
        </childnode>
      </node>
      <node id="1841">
        <label>CacheData.h</label>
        <link refid="CacheData_8h_source"/>
        <childnode refid="1806" relation="include">
        </childnode>
        <childnode refid="1807" relation="include">
        </childnode>
        <childnode refid="1776" relation="include">
        </childnode>
        <childnode refid="1808" relation="include">
        </childnode>
        <childnode refid="1784" relation="include">
        </childnode>
        <childnode refid="1770" relation="include">
        </childnode>
        <childnode refid="1771" relation="include">
        </childnode>
        <childnode refid="1797" relation="include">
        </childnode>
        <childnode refid="1788" relation="include">
        </childnode>
        <childnode refid="1772" relation="include">
        </childnode>
        <childnode refid="1809" relation="include">
        </childnode>
        <childnode refid="1813" relation="include">
        </childnode>
        <childnode refid="1773" relation="include">
        </childnode>
        <childnode refid="1799" relation="include">
        </childnode>
        <childnode refid="1815" relation="include">
        </childnode>
        <childnode refid="1831" relation="include">
        </childnode>
        <childnode refid="1812" relation="include">
        </childnode>
        <childnode refid="1787" relation="include">
        </childnode>
        <childnode refid="1768" relation="include">
        </childnode>
        <childnode refid="1832" relation="include">
        </childnode>
      </node>
      <node id="1857">
        <label>../io/data_parser/CSVParser.h</label>
        <link refid="CSVParser_8h_source"/>
        <childnode refid="1768" relation="include">
        </childnode>
        <childnode refid="1787" relation="include">
        </childnode>
        <childnode refid="1792" relation="include">
        </childnode>
        <childnode refid="1776" relation="include">
        </childnode>
        <childnode refid="1771" relation="include">
        </childnode>
        <childnode refid="1856" relation="include">
        </childnode>
        <childnode refid="1855" relation="include">
        </childnode>
      </node>
      <node id="1787">
        <label>../data_provider/DataProvider.h</label>
        <link refid="DataProvider_8h_source"/>
        <childnode refid="1788" relation="include">
        </childnode>
        <childnode refid="1789" relation="include">
        </childnode>
        <childnode refid="1790" relation="include">
        </childnode>
        <childnode refid="1791" relation="include">
        </childnode>
        <childnode refid="1792" relation="include">
        </childnode>
        <childnode refid="1793" relation="include">
        </childnode>
        <childnode refid="1794" relation="include">
        </childnode>
        <childnode refid="1772" relation="include">
        </childnode>
        <childnode refid="1795" relation="include">
        </childnode>
        <childnode refid="1796" relation="include">
        </childnode>
        <childnode refid="1797" relation="include">
        </childnode>
        <childnode refid="1776" relation="include">
        </childnode>
        <childnode refid="1771" relation="include">
        </childnode>
        <childnode refid="1798" relation="include">
        </childnode>
        <childnode refid="1773" relation="include">
        </childnode>
      </node>
      <node id="1872">
        <label>utilities/CommonOperations.h</label>
        <link refid="CommonOperations_8h_source"/>
        <childnode refid="1770" relation="include">
        </childnode>
        <childnode refid="1771" relation="include">
        </childnode>
        <childnode refid="1773" relation="include">
        </childnode>
        <childnode refid="1839" relation="include">
        </childnode>
      </node>
      <node id="1840">
        <label>cudf/strings/strings_column_view.hpp</label>
      </node>
      <node id="1788">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="1874">
        <label>expression_utils.hpp</label>
        <link refid="expression__utils_8hpp_source"/>
        <childnode refid="1797" relation="include">
        </childnode>
        <childnode refid="1770" relation="include">
        </childnode>
        <childnode refid="1771" relation="include">
        </childnode>
        <childnode refid="1772" relation="include">
        </childnode>
        <childnode refid="1875" relation="include">
        </childnode>
      </node>
      <node id="1775">
        <label>cudf/table/table_view.hpp</label>
      </node>
      <node id="1846">
        <label>utilities/ctpl_stl.h</label>
        <link refid="ctpl__stl_8h_source"/>
        <childnode refid="1847" relation="include">
        </childnode>
        <childnode refid="1848" relation="include">
        </childnode>
        <childnode refid="1806" relation="include">
        </childnode>
        <childnode refid="1771" relation="include">
        </childnode>
        <childnode refid="1776" relation="include">
        </childnode>
        <childnode refid="1812" relation="include">
        </childnode>
        <childnode refid="1849" relation="include">
        </childnode>
        <childnode refid="1784" relation="include">
        </childnode>
        <childnode refid="1850" relation="include">
        </childnode>
      </node>
      <node id="1769">
        <label>../Schema.h</label>
        <link refid="Schema_8h_source"/>
        <childnode refid="1770" relation="include">
        </childnode>
        <childnode refid="1771" relation="include">
        </childnode>
        <childnode refid="1772" relation="include">
        </childnode>
        <childnode refid="1773" relation="include">
        </childnode>
      </node>
      <node id="1792">
        <label>arrow/io/interfaces.h</label>
      </node>
      <node id="1808">
        <label>condition_variable</label>
      </node>
      <node id="1845">
        <label>ExceptionHandling/BlazingThread.h</label>
      </node>
      <node id="1833">
        <label>communication/messages/MessageUtil.cuh</label>
      </node>
      <node id="1763">
        <label>/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/cython/engine.cpp</label>
        <link refid="engine_8cpp"/>
        <childnode refid="1764" relation="include">
        </childnode>
        <childnode refid="1765" relation="include">
        </childnode>
        <childnode refid="1851" relation="include">
        </childnode>
        <childnode refid="1857" relation="include">
        </childnode>
        <childnode refid="1858" relation="include">
        </childnode>
        <childnode refid="1859" relation="include">
        </childnode>
        <childnode refid="1860" relation="include">
        </childnode>
        <childnode refid="1861" relation="include">
        </childnode>
        <childnode refid="1863" relation="include">
        </childnode>
        <childnode refid="1864" relation="include">
        </childnode>
        <childnode refid="1865" relation="include">
        </childnode>
        <childnode refid="1866" relation="include">
        </childnode>
        <childnode refid="1876" relation="include">
        </childnode>
        <childnode refid="1834" relation="include">
        </childnode>
        <childnode refid="1797" relation="include">
        </childnode>
        <childnode refid="1831" relation="include">
        </childnode>
        <childnode refid="1788" relation="include">
        </childnode>
        <childnode refid="1813" relation="include">
        </childnode>
        <childnode refid="1877" relation="include">
        </childnode>
        <childnode refid="1809" relation="include">
        </childnode>
      </node>
      <node id="1830">
        <label>sys/statvfs.h</label>
      </node>
      <node id="1795">
        <label>cudf/utilities/type_dispatcher.hpp</label>
      </node>
      <node id="1835">
        <label>tuple</label>
      </node>
      <node id="1849">
        <label>future</label>
      </node>
      <node id="1789">
        <label>spdlog/async.h</label>
      </node>
      <node id="1802">
        <label>kernel.h</label>
        <link refid="kernel_8h_source"/>
        <childnode refid="1803" relation="include">
        </childnode>
        <childnode refid="1804" relation="include">
        </childnode>
        <childnode refid="1801" relation="include">
        </childnode>
      </node>
      <node id="1783">
        <label>stack</label>
      </node>
      <node id="1771">
        <label>vector</label>
      </node>
      <node id="1780">
        <label>transport/ColumnTransport.h</label>
        <link refid="ColumnTransport_8h_source"/>
        <childnode refid="1781" relation="include">
        </childnode>
      </node>
      <node id="1869">
        <label>blazingdb/io/Util/StringUtil.h</label>
      </node>
      <node id="1839">
        <label>cudf/column/column_factories.hpp</label>
      </node>
      <node id="1837">
        <label>cudf/column/column.hpp</label>
      </node>
      <node id="1785">
        <label>ucp/api/ucp.h</label>
      </node>
      <node id="1861">
        <label>../io/data_parser/ArrowParser.h</label>
        <link refid="ArrowParser_8h_source"/>
        <childnode refid="1768" relation="include">
        </childnode>
        <childnode refid="1771" relation="include">
        </childnode>
        <childnode refid="1776" relation="include">
        </childnode>
        <childnode refid="1792" relation="include">
        </childnode>
        <childnode refid="1852" relation="include">
        </childnode>
        <childnode refid="1862" relation="include">
        </childnode>
      </node>
      <node id="1791">
        <label>spdlog/sinks/stdout_color_sinks.h</label>
      </node>
      <node id="1782">
        <label>bmr/BufferProvider.h</label>
        <link refid="BufferProvider_8h_source"/>
        <childnode refid="1771" relation="include">
        </childnode>
        <childnode refid="1770" relation="include">
        </childnode>
        <childnode refid="1783" relation="include">
        </childnode>
        <childnode refid="1784" relation="include">
        </childnode>
        <childnode refid="1776" relation="include">
        </childnode>
        <childnode refid="1785" relation="include">
        </childnode>
      </node>
      <node id="1768">
        <label>data_parser/DataParser.h</label>
        <link refid="DataParser_8h_source"/>
        <childnode refid="1769" relation="include">
        </childnode>
        <childnode refid="1786" relation="include">
        </childnode>
        <childnode refid="1787" relation="include">
        </childnode>
        <childnode refid="1773" relation="include">
        </childnode>
        <childnode refid="1792" relation="include">
        </childnode>
        <childnode refid="1776" relation="include">
        </childnode>
        <childnode refid="1771" relation="include">
        </childnode>
      </node>
      <node id="1772">
        <label>cudf/types.hpp</label>
      </node>
      <node id="1877">
        <label>communication/CommunicationInterface/protocols.hpp</label>
        <link refid="protocols_8hpp_source"/>
        <childnode refid="1780" relation="include">
        </childnode>
        <childnode refid="1806" relation="include">
        </childnode>
        <childnode refid="1878" relation="include">
        </childnode>
        <childnode refid="1880" relation="include">
        </childnode>
        <childnode refid="1879" relation="include">
        </childnode>
        <childnode refid="1846" relation="include">
        </childnode>
        <childnode refid="1882" relation="include">
        </childnode>
        <childnode refid="1801" relation="include">
        </childnode>
      </node>
      <node id="1844">
        <label>bmr/MemoryMonitor.h</label>
        <link refid="MemoryMonitor_8h_source"/>
        <childnode refid="1808" relation="include">
        </childnode>
        <childnode refid="1784" relation="include">
        </childnode>
        <childnode refid="1814" relation="include">
        </childnode>
        <childnode refid="1845" relation="include">
        </childnode>
        <childnode refid="1797" relation="include">
        </childnode>
      </node>
      <node id="1851">
        <label>../io/data_parser/ArgsUtil.h</label>
        <link refid="ArgsUtil_8h_source"/>
        <childnode refid="1852" relation="include">
        </childnode>
        <childnode refid="1853" relation="include">
        </childnode>
        <childnode refid="1854" relation="include">
        </childnode>
        <childnode refid="1855" relation="include">
        </childnode>
        <childnode refid="1856" relation="include">
        </childnode>
      </node>
      <node id="1827">
        <label>rmm/mr/device/per_device_resource.hpp</label>
      </node>
      <node id="1854">
        <label>cudf/io/orc.hpp</label>
      </node>
      <node id="1852">
        <label>io/io.h</label>
      </node>
      <node id="1786">
        <label>../DataType.h</label>
        <link refid="DataType_8h_source"/>
      </node>
      <node id="1855">
        <label>cudf/io/csv.hpp</label>
      </node>
      <node id="1831">
        <label>communication/CommunicationData.h</label>
        <link refid="CommunicationData_8h_source"/>
        <childnode refid="1785" relation="include">
        </childnode>
        <childnode refid="1800" relation="include">
        </childnode>
        <childnode refid="1776" relation="include">
        </childnode>
        <childnode refid="1770" relation="include">
        </childnode>
        <childnode refid="1797" relation="include">
        </childnode>
      </node>
      <node id="1801">
        <label>execution_graph/logic_controllers/taskflow/graph.h</label>
        <link refid="graph_8h_source"/>
        <childnode refid="1802" relation="include">
        </childnode>
        <childnode refid="1843" relation="include">
        </childnode>
        <childnode refid="1805" relation="include">
        </childnode>
        <childnode refid="1844" relation="include">
        </childnode>
        <childnode refid="1846" relation="include">
        </childnode>
      </node>
      <node id="1804">
        <label>port.h</label>
        <link refid="port_8h_source"/>
        <childnode refid="1771" relation="include">
        </childnode>
        <childnode refid="1776" relation="include">
        </childnode>
        <childnode refid="1770" relation="include">
        </childnode>
        <childnode refid="1805" relation="include">
        </childnode>
      </node>
      <node id="1810">
        <label>iostream</label>
      </node>
      <node id="1778">
        <label>cudf/column/column_view.hpp</label>
      </node>
      <node id="1807">
        <label>deque</label>
      </node>
      <node id="1859">
        <label>../io/data_parser/JSONParser.h</label>
        <link refid="JSONParser_8h_source"/>
        <childnode refid="1792" relation="include">
        </childnode>
        <childnode refid="1856" relation="include">
        </childnode>
        <childnode refid="1853" relation="include">
        </childnode>
        <childnode refid="1776" relation="include">
        </childnode>
        <childnode refid="1771" relation="include">
        </childnode>
        <childnode refid="1768" relation="include">
        </childnode>
      </node>
      <node id="1863">
        <label>../io/data_parser/ParquetParser.h</label>
        <link refid="ParquetParser_8h_source"/>
        <childnode refid="1787" relation="include">
        </childnode>
        <childnode refid="1768" relation="include">
        </childnode>
        <childnode refid="1792" relation="include">
        </childnode>
        <childnode refid="1776" relation="include">
        </childnode>
        <childnode refid="1771" relation="include">
        </childnode>
        <childnode refid="1856" relation="include">
        </childnode>
      </node>
      <node id="1784">
        <label>mutex</label>
      </node>
      <node id="1818">
        <label>cuda_runtime_api.h</label>
      </node>
      <node id="1814">
        <label>chrono</label>
      </node>
      <node id="1871">
        <label>CalciteExpressionParsing.h</label>
        <link refid="CalciteExpressionParsing_8h_source"/>
        <childnode refid="1772" relation="include">
        </childnode>
        <childnode refid="1770" relation="include">
        </childnode>
        <childnode refid="1771" relation="include">
        </childnode>
      </node>
      <node id="1813">
        <label>CodeTimer.h</label>
        <link refid="CodeTimer_8h_source"/>
        <childnode refid="1814" relation="include">
        </childnode>
      </node>
      <node id="1798">
        <label>blazingdb/io/FileSystem/Uri.h</label>
      </node>
      <node id="1820">
        <label>rmm/mr/device/device_memory_resource.hpp</label>
      </node>
      <node id="1765">
        <label>../CalciteInterpreter.h</label>
        <link refid="CalciteInterpreter_8h_source"/>
        <childnode refid="1766" relation="include">
        </childnode>
        <childnode refid="1770" relation="include">
        </childnode>
        <childnode refid="1771" relation="include">
        </childnode>
        <childnode refid="1799" relation="include">
        </childnode>
        <childnode refid="1801" relation="include">
        </childnode>
      </node>
      <node id="1848">
        <label>thread</label>
      </node>
      <node id="1815">
        <label>bmr/BlazingMemoryResource.h</label>
        <link refid="BlazingMemoryResource_8h_source"/>
        <childnode refid="1816" relation="include">
        </childnode>
        <childnode refid="1806" relation="include">
        </childnode>
        <childnode refid="1817" relation="include">
        </childnode>
        <childnode refid="1818" relation="include">
        </childnode>
        <childnode refid="1819" relation="include">
        </childnode>
        <childnode refid="1820" relation="include">
        </childnode>
        <childnode refid="1821" relation="include">
        </childnode>
        <childnode refid="1822" relation="include">
        </childnode>
        <childnode refid="1823" relation="include">
        </childnode>
        <childnode refid="1824" relation="include">
        </childnode>
        <childnode refid="1825" relation="include">
        </childnode>
        <childnode refid="1826" relation="include">
        </childnode>
        <childnode refid="1827" relation="include">
        </childnode>
        <childnode refid="1828" relation="include">
        </childnode>
        <childnode refid="1829" relation="include">
        </childnode>
        <childnode refid="1830" relation="include">
        </childnode>
      </node>
      <node id="1824">
        <label>rmm/mr/device/pool_memory_resource.hpp</label>
      </node>
      <node id="1817">
        <label>set</label>
      </node>
      <node id="1774">
        <label>cudf/table/table.hpp</label>
      </node>
      <node id="1766">
        <label>io/DataLoader.h</label>
        <link refid="DataLoader_8h_source"/>
        <childnode refid="1767" relation="include">
        </childnode>
        <childnode refid="1768" relation="include">
        </childnode>
        <childnode refid="1787" relation="include">
        </childnode>
        <childnode refid="1792" relation="include">
        </childnode>
        <childnode refid="1799" relation="include">
        </childnode>
        <childnode refid="1771" relation="include">
        </childnode>
        <childnode refid="1776" relation="include">
        </childnode>
      </node>
      <node id="1868">
        <label>algorithm</label>
      </node>
      <node id="1853">
        <label>cudf/io/json.hpp</label>
      </node>
      <node id="1811">
        <label>cudf/utilities/error.hpp</label>
      </node>
      <node id="1793">
        <label>cudf/scalar/scalar.hpp</label>
      </node>
      <node id="1776">
        <label>memory</label>
      </node>
      <node id="1764">
        <label>engine/engine.h</label>
      </node>
      <node id="1867">
        <label>parser/expression_tree.hpp</label>
        <link refid="expression__tree_8hpp_source"/>
        <childnode refid="1816" relation="include">
        </childnode>
        <childnode refid="1868" relation="include">
        </childnode>
        <childnode refid="1869" relation="include">
        </childnode>
        <childnode refid="1810" relation="include">
        </childnode>
        <childnode refid="1770" relation="include">
        </childnode>
        <childnode refid="1771" relation="include">
        </childnode>
        <childnode refid="1870" relation="include">
        </childnode>
        <childnode refid="1772" relation="include">
        </childnode>
        <childnode refid="1871" relation="include">
        </childnode>
        <childnode refid="1872" relation="include">
        </childnode>
        <childnode refid="1873" relation="include">
        </childnode>
        <childnode refid="1874" relation="include">
        </childnode>
        <childnode refid="1809" relation="include">
        </childnode>
      </node>
      <node id="1767">
        <label>FileSystem/Uri.h</label>
      </node>
      <node id="1876">
        <label>../execution_graph/logic_controllers/LogicalFilter.h</label>
        <link refid="LogicalFilter_8h_source"/>
        <childnode refid="1799" relation="include">
        </childnode>
        <childnode refid="1773" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="engine_8cpp_1aea74327f086d9d7e9a518185228197ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; std::vector&lt; <ref refid="classral_1_1io_1_1data__loader" kindref="compound">ral::io::data_loader</ref> &gt;, std::vector&lt; <ref refid="classral_1_1io_1_1Schema" kindref="compound">ral::io::Schema</ref> &gt; &gt;</type>
        <definition>std::pair&lt;std::vector&lt;ral::io::data_loader&gt;, std::vector&lt;ral::io::Schema&gt; &gt; get_loaders_and_schemas</definition>
        <argsstring>(const std::vector&lt; TableSchema &gt; &amp;tableSchemas, const std::vector&lt; std::vector&lt; std::string &gt;&gt; &amp;tableSchemaCppArgKeys, const std::vector&lt; std::vector&lt; std::string &gt;&gt; &amp;tableSchemaCppArgValues, const std::vector&lt; std::vector&lt; std::string &gt;&gt; &amp;filesAll, const std::vector&lt; int &gt; &amp;fileTypes, const std::vector&lt; std::vector&lt; std::map&lt; std::string, std::string &gt;&gt;&gt; &amp;uri_values)</argsstring>
        <name>get_loaders_and_schemas</name>
        <param>
          <type>const std::vector&lt; TableSchema &gt; &amp;</type>
          <declname>tableSchemas</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; std::string &gt;&gt; &amp;</type>
          <declname>tableSchemaCppArgKeys</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; std::string &gt;&gt; &amp;</type>
          <declname>tableSchemaCppArgValues</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; std::string &gt;&gt; &amp;</type>
          <declname>filesAll</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>fileTypes</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; std::map&lt; std::string, std::string &gt;&gt;&gt; &amp;</type>
          <declname>uri_values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/cython/engine.cpp" line="26" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/cython/engine.cpp" bodystart="26" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="engine_8cpp_1a577dc37868768e8bd68ce62cf3042fa5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fix_column_names_duplicated</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;col_names)</argsstring>
        <name>fix_column_names_duplicated</name>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>col_names</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/cython/engine.cpp" line="111" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/cython/engine.cpp" bodystart="111" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="engine_8cpp_1aab327dfacfc0728976ed61e8eeae2164" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classral_1_1cache_1_1graph" kindref="compound">ral::cache::graph</ref> &gt;</type>
        <definition>std::shared_ptr&lt;ral::cache::graph&gt; runGenerateGraph</definition>
        <argsstring>(uint32_t masterIndex, std::vector&lt; std::string &gt; worker_ids, std::vector&lt; std::string &gt; tableNames, std::vector&lt; std::string &gt; tableScans, std::vector&lt; TableSchema &gt; tableSchemas, std::vector&lt; std::vector&lt; std::string &gt;&gt; tableSchemaCppArgKeys, std::vector&lt; std::vector&lt; std::string &gt;&gt; tableSchemaCppArgValues, std::vector&lt; std::vector&lt; std::string &gt;&gt; filesAll, std::vector&lt; int &gt; fileTypes, int32_t ctxToken, std::string query, std::vector&lt; std::vector&lt; std::map&lt; std::string, std::string &gt;&gt;&gt; uri_values, std::map&lt; std::string, std::string &gt; config_options, std::string sql)</argsstring>
        <name>runGenerateGraph</name>
        <param>
          <type>uint32_t</type>
          <declname>masterIndex</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>worker_ids</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>tableNames</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>tableScans</declname>
        </param>
        <param>
          <type>std::vector&lt; TableSchema &gt;</type>
          <declname>tableSchemas</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; std::string &gt;&gt;</type>
          <declname>tableSchemaCppArgKeys</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; std::string &gt;&gt;</type>
          <declname>tableSchemaCppArgValues</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; std::string &gt;&gt;</type>
          <declname>filesAll</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt;</type>
          <declname>fileTypes</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>ctxToken</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>query</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; std::map&lt; std::string, std::string &gt;&gt;&gt;</type>
          <declname>uri_values</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, std::string &gt;</type>
          <declname>config_options</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>sql</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/cython/engine.cpp" line="123" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/cython/engine.cpp" bodystart="123" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="engine_8cpp_1a3ed475581ce7d8eb68870079d83b11df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void startExecuteGraph</definition>
        <argsstring>(std::shared_ptr&lt; ral::cache::graph &gt; graph, int32_t ctx_token)</argsstring>
        <name>startExecuteGraph</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classral_1_1cache_1_1graph" kindref="compound">ral::cache::graph</ref> &gt;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>ctx_token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/cython/engine.cpp" line="160" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/cython/engine.cpp" bodystart="160" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="engine_8cpp_1a9b95521429a8374e7644015612374bf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; PartitionedResultSet &gt;</type>
        <definition>std::unique_ptr&lt;PartitionedResultSet&gt; getExecuteGraphResult</definition>
        <argsstring>(std::shared_ptr&lt; ral::cache::graph &gt; graph, int32_t ctx_token)</argsstring>
        <name>getExecuteGraphResult</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classral_1_1cache_1_1graph" kindref="compound">ral::cache::graph</ref> &gt;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>ctx_token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/cython/engine.cpp" line="164" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/cython/engine.cpp" bodystart="164" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="engine_8cpp_1a21265e777955ba2a24cca78d43b41ce5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; ResultSet &gt;</type>
        <definition>std::unique_ptr&lt;ResultSet&gt; runSkipData</definition>
        <argsstring>(ral::frame::BlazingTableView metadata, std::vector&lt; std::string &gt; all_column_names, std::string query)</argsstring>
        <name>runSkipData</name>
        <param>
          <type><ref refid="classral_1_1frame_1_1BlazingTableView" kindref="compound">ral::frame::BlazingTableView</ref></type>
          <declname>metadata</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>all_column_names</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>query</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/cython/engine.cpp" line="244" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/cython/engine.cpp" bodystart="244" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="engine_8cpp_1a4a098e96e7beb32b75661563cf0c4b65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TableScanInfo</type>
        <definition>TableScanInfo getTableScanInfo</definition>
        <argsstring>(std::string logicalPlan)</argsstring>
        <name>getTableScanInfo</name>
        <param>
          <type>std::string</type>
          <declname>logicalPlan</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/cython/engine.cpp" line="276" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/cython/engine.cpp" bodystart="276" bodyend="282"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;engine/engine.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../CalciteInterpreter.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../io/data_parser/ArgsUtil.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../io/data_parser/CSVParser.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../io/data_parser/GDFParser.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../io/data_parser/JSONParser.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../io/data_parser/OrcParser.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../io/data_parser/ArrowParser.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../io/data_parser/ParquetParser.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../io/data_provider/GDFDataProvider.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../io/data_provider/UriDataProvider.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../skip_data/SkipDataProcessor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../execution_graph/logic_controllers/LogicalFilter.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;numeric&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;communication/CommunicationData.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;spdlog/spdlog.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CodeTimer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;communication/CommunicationInterface/protocols.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;error.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacefmt_1_1literals" kindref="compound">fmt::literals</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">std::pair&lt;std::vector&lt;ral::io::data_loader&gt;,<sp/>std::vector&lt;ral::io::Schema&gt;&gt;<sp/>get_loaders_and_schemas(</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TableSchema&gt;<sp/>&amp;<sp/>tableSchemas,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;std::string&gt;&gt;<sp/>&amp;<sp/>tableSchemaCppArgKeys,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;std::string&gt;&gt;<sp/>&amp;<sp/>tableSchemaCppArgValues,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;std::string&gt;&gt;<sp/>&amp;<sp/>filesAll,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/>&amp;<sp/>fileTypes,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;std::map&lt;std::string,<sp/>std::string&gt;&gt;&gt;<sp/>&amp;<sp/>uri_values){</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;ral::io::data_loader&gt;<sp/>input_loaders;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;ral::io::Schema&gt;<sp/>schemas;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tableSchemas.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tableSchema<sp/>=<sp/>tableSchemas[i];</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>files<sp/>=<sp/>filesAll[i];</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fileType<sp/>=<sp/>fileTypes[i];</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>args_map<sp/>=<sp/>ral::io::to_map(tableSchemaCppArgKeys[i],<sp/>tableSchemaCppArgValues[i]);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;cudf::type_id&gt;<sp/>types;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>tableSchemas[i].types.size();<sp/>col++)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>types.push_back(tableSchemas[i].types[col]);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>schema<sp/>=<sp/><ref refid="classral_1_1io_1_1Schema" kindref="compound">ral::io::Schema</ref>(tableSchema.names,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableSchema.calcite_to_file_indices,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>types,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableSchema.in_file,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableSchema.row_groups_ids);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ral::io::data_parser&gt;<sp/>parser;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fileType<sp/>==<sp/>ral::io::DataType::PARQUET)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser<sp/>=<sp/>std::make_shared&lt;ral::io::parquet_parser&gt;();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fileType<sp/>==<sp/>gdfFileType<sp/>||<sp/>fileType<sp/>==<sp/>daskFileType)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser<sp/>=<sp/>std::make_shared&lt;ral::io::gdf_parser&gt;();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fileType<sp/>==<sp/>ral::io::DataType::ORC)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser<sp/>=<sp/>std::make_shared&lt;ral::io::orc_parser&gt;(args_map);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fileType<sp/>==<sp/>ral::io::DataType::JSON)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser<sp/>=<sp/>std::make_shared&lt;ral::io::json_parser&gt;(args_map);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fileType<sp/>==<sp/>ral::io::DataType::CSV)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser<sp/>=<sp/>std::make_shared&lt;ral::io::csv_parser&gt;(args_map);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fileType<sp/>==<sp/>ral::io::DataType::ARROW){</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parser<sp/>=<sp/>std::make_shared&lt;ral::io::arrow_parser&gt;(tableSchema.arrow_table);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ral::io::data_provider&gt;<sp/>provider;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Uri&gt;<sp/>uris;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>fileIndex<sp/>=<sp/>0;<sp/>fileIndex<sp/>&lt;<sp/>filesAll[i].size();<sp/>fileIndex++)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uris.push_back(Uri{filesAll[i][fileIndex]});</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schema.add_file(filesAll[i][fileIndex]);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fileType<sp/>==<sp/>ral::io::DataType::CUDF<sp/>||<sp/>fileType<sp/>==<sp/>ral::io::DataType::DASK_CUDF)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>gdf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>provider<sp/>=<sp/>std::make_shared&lt;ral::io::gdf_data_provider&gt;(tableSchema.blazingTableViews,<sp/>uri_values[i]);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>file<sp/>(this<sp/>includes<sp/>the<sp/>case<sp/>where<sp/>fileType<sp/>is<sp/>UNDEFINED<sp/>too)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>provider<sp/>=<sp/>std::make_shared&lt;ral::io::uri_data_provider&gt;(uris,<sp/>uri_values[i]);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classral_1_1io_1_1data__loader" kindref="compound">ral::io::data_loader</ref><sp/>loader(parser,<sp/>provider);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_loaders.push_back(loader);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schemas.push_back(schema);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(std::move(input_loaders),<sp/>std::move(schemas));</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>case<sp/>there<sp/>are<sp/>columns<sp/>with<sp/>the<sp/>same<sp/>name,<sp/>we<sp/>add<sp/>a<sp/>numerical<sp/>suffix,<sp/>example:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/>q1:<sp/>select<sp/>n1.n_nationkey,<sp/>n2.n_nationkey</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>nation<sp/>n1<sp/>inner<sp/>join<sp/>nation<sp/>n2<sp/>on<sp/>n1.n_nationkey<sp/>=<sp/>n2.n_nationkey</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/>original<sp/>column<sp/>names:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>[n_nationkey,<sp/>n_nationkey]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/>final<sp/>column<sp/>names:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>[n_nationkey,<sp/>n_nationkey0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>q2:<sp/>select<sp/>n_nationkey<sp/>as<sp/>n_nationkey0,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_regionkey<sp/>as<sp/>n_nationkey,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_regionkey<sp/>+<sp/>n_regionkey<sp/>as<sp/>n_nationkey</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>nation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/>original<sp/>column<sp/>names:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>[n_nationkey0,<sp/>n_nationkey,<sp/>n_nationkey]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>final<sp/>column<sp/>names:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>[n_nationkey0,<sp/>n_nationkey,<sp/>n_nationkey1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fix_column_names_duplicated(std::vector&lt;std::string&gt;<sp/>&amp;<sp/>col_names){</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,int&gt;<sp/>unique_names;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>col_name<sp/>:<sp/>col_names){</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(unique_names.find(col_name)<sp/>==<sp/>unique_names.end()){</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unique_names[col_name]=-1;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_name<sp/>=<sp/>col_name<sp/>+<sp/>std::to_string(++unique_names[col_name]);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal">std::shared_ptr&lt;ral::cache::graph&gt;<sp/>runGenerateGraph(uint32_t<sp/>masterIndex,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>worker_ids,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>tableNames,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>tableScans,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;TableSchema&gt;<sp/>tableSchemas,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;std::string&gt;&gt;<sp/>tableSchemaCppArgKeys,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;std::string&gt;&gt;<sp/>tableSchemaCppArgValues,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;std::string&gt;&gt;<sp/>filesAll,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>fileTypes,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>ctxToken,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>query,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;std::map&lt;std::string,<sp/>std::string&gt;&gt;&gt;<sp/>uri_values,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>config_options,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sql)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;ral::io::data_loader&gt;<sp/>input_loaders;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;ral::io::Schema&gt;<sp/>schemas;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>std::tie(input_loaders,<sp/>schemas)<sp/>=<sp/>get_loaders_and_schemas(tableSchemas,<sp/>tableSchemaCppArgKeys,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableSchemaCppArgValues,<sp/>filesAll,<sp/>fileTypes,<sp/>uri_values);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classblazingdb_1_1manager_1_1Context" kindref="compound">blazingdb::manager::Context</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classblazingdb_1_1transport_1_1Node" kindref="compound">blazingdb::transport::Node</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>communicationData<sp/>=<sp/>ral::communication::CommunicationData::getInstance();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Node&gt;<sp/>contextNodes;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;worker_id<sp/>:<sp/>worker_ids)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contextNodes.emplace_back(worker_id);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classblazingdb_1_1manager_1_1Context" kindref="compound">Context</ref><sp/>queryContext{</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ctxToken),<sp/>contextNodes,<sp/>contextNodes[masterIndex],<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>config_options};</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>graph<sp/>=<sp/>generate_graph(input_loaders,<sp/>schemas,<sp/>tableNames,<sp/>tableScans,<sp/>query,<sp/>queryContext,<sp/>sql);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>comm::graphs_info::getInstance().register_graph(ctxToken,<sp/>graph);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>graph;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startExecuteGraph(std::shared_ptr&lt;ral::cache::graph&gt;<sp/>graph,<sp/>int32_t<sp/>ctx_token)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>start_execute_graph(graph);</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal">std::unique_ptr&lt;PartitionedResultSet&gt;<sp/>getExecuteGraphResult(std::shared_ptr&lt;ral::cache::graph&gt;<sp/>graph,<sp/>int32_t<sp/>ctx_token)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Execute<sp/>query</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::unique_ptr&lt;ral::frame::BlazingTable&gt;&gt;<sp/>frames;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>frames<sp/>=<sp/>get_execute_graph_results(graph);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;PartitionedResultSet&gt;<sp/>result<sp/>=<sp/>std::make_unique&lt;PartitionedResultSet&gt;();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>frames.size()&gt;0<sp/>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;names<sp/>=<sp/>frames[0]-&gt;names();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>fix_column_names_duplicated(result-&gt;names);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cudfTable<sp/>:<sp/>frames){</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;cudfTables.emplace_back(std::move(cudfTable-&gt;releaseCudfTable()));</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;skipdata_analysis_fail<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>comm::graphs_info::getInstance().deregister_graph(ctx_token);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="188"><highlight class="comment">std::unique_ptr&lt;ResultSet&gt;<sp/>performPartition(int32_t<sp/>masterIndex,</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/><sp/><sp/>int32_t<sp/>ctxToken,</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>ral::frame::BlazingTableView<sp/>&amp;<sp/>table,</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>column_names)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="comment"></highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/><sp/>try<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ResultSet&gt;<sp/>result<sp/>=<sp/>std::make_unique&lt;ResultSet&gt;();</highlight></codeline>
<codeline lineno="196"><highlight class="comment"></highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>columnIndices;</highlight></codeline>
<codeline lineno="198"><highlight class="comment"></highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>using<sp/>blazingdb::manager::Context;</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>using<sp/>blazingdb::transport::Node;</highlight></codeline>
<codeline lineno="201"><highlight class="comment"></highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Node&gt;<sp/>contextNodes;</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(auto<sp/>currentMetadata<sp/>:<sp/>tcpMetadata)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auto<sp/>address<sp/>=</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blazingdb::transport::Address::TCP(currentMetadata.ip,<sp/>currentMetadata.communication_port,<sp/>0);</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contextNodes.push_back(Node(address,<sp/>currentMetadata.worker_id));</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="comment"></highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Context<sp/>queryContext{ctxToken,<sp/>contextNodes,<sp/>contextNodes[masterIndex],<sp/>&quot;&quot;,<sp/>std::map&lt;std::string,<sp/>std::string&gt;()};</highlight></codeline>
<codeline lineno="210"><highlight class="comment"></highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>std::vector&lt;std::string&gt;<sp/>&amp;<sp/>table_col_names<sp/>=<sp/>table.names();</highlight></codeline>
<codeline lineno="212"><highlight class="comment"></highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(auto<sp/>col_name:column_names){</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auto<sp/>it<sp/>=<sp/>std::find(table_col_names.begin(),<sp/>table_col_names.end(),<sp/>col_name);</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(it<sp/>!=<sp/>table_col_names.end()){</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>columnIndices.push_back(std::distance(table_col_names.begin(),<sp/>it));</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="comment"></highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>frame<sp/>=<sp/>ral::processor::process_distribution_table(</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table,<sp/>columnIndices,<sp/>&amp;queryContext);</highlight></codeline>
<codeline lineno="222"><highlight class="comment"></highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;names<sp/>=<sp/>frame-&gt;names();</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;cudfTable<sp/>=<sp/>frame-&gt;releaseCudfTable();</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;skipdata_analysis_fail<sp/>=<sp/>false;</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>result;</highlight></codeline>
<codeline lineno="227"><highlight class="comment"></highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/>catch(const<sp/>std::exception<sp/>&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;spdlog::logger&gt;<sp/>logger<sp/>=<sp/>spdlog::get(&quot;batch_logger&quot;);</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(logger){</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;error(&quot;|||{info}|||||&quot;,</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;info&quot;_a=&quot;In<sp/>performPartition.<sp/>What:<sp/>{}&quot;_format(e.what()));</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;flush();</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="comment"></highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;**[performPartition]**<sp/>error<sp/>partitioning<sp/>table.\n&quot;;</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>e.what()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw;</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="comment">}</highlight></codeline>
<codeline lineno="241"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal">std::unique_ptr&lt;ResultSet&gt;<sp/>runSkipData(<ref refid="classral_1_1frame_1_1BlazingTableView" kindref="compound">ral::frame::BlazingTableView</ref><sp/>metadata,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>all_column_names,<sp/>std::string<sp/>query)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::pair&lt;std::unique_ptr&lt;ral::frame::BlazingTable&gt;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;<sp/>result_pair<sp/>=<sp/>ral::skip_data::process_skipdata_for_table(</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata,<sp/>all_column_names,<sp/>query);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ResultSet&gt;<sp/>result<sp/>=<sp/>std::make_unique&lt;ResultSet&gt;();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;skipdata_analysis_fail<sp/>=<sp/>result_pair.second;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result_pair.second){<sp/></highlight><highlight class="comment">//<sp/>if<sp/>could<sp/>process<sp/>skip-data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;names<sp/>=<sp/>result_pair.first-&gt;names();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;cudfTable<sp/>=<sp/>result_pair.first-&gt;releaseCudfTable();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception<sp/>&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;**[runSkipData]**<sp/>error<sp/>parsing<sp/>metadata.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>e.what()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;spdlog::logger&gt;<sp/>logger<sp/>=<sp/>spdlog::get(</highlight><highlight class="stringliteral">&quot;batch_logger&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logger){</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;error(</highlight><highlight class="stringliteral">&quot;|||{info}|||||&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;In<sp/>runSkipData.<sp/>What:<sp/>{}&quot;</highlight><highlight class="normal">_format(e.what()));</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;flush();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal">TableScanInfo<sp/>getTableScanInfo(std::string<sp/>logicalPlan){</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>relational_algebra_steps,<sp/>table_names;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;int&gt;&gt;<sp/>table_columns;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>getTableScanInfo(logicalPlan,<sp/>relational_algebra_steps,<sp/>table_names,<sp/>table_columns);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TableScanInfo{relational_algebra_steps,<sp/>table_names,<sp/>table_columns};</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="285"><highlight class="comment">std::pair&lt;std::unique_ptr&lt;PartitionedResultSet&gt;,<sp/>error_code_t&gt;<sp/>runQuery_C(int32_t<sp/>masterIndex,</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>tableNames,</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>tableScans,</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/><sp/><sp/>std::vector&lt;TableSchema&gt;<sp/>tableSchemas,</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;std::string&gt;&gt;<sp/>tableSchemaCppArgKeys,</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;std::string&gt;&gt;<sp/>tableSchemaCppArgValues,</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;std::string&gt;&gt;<sp/>filesAll,</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>fileTypes,</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/><sp/><sp/><sp/>int32_t<sp/>ctxToken,</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/><sp/><sp/><sp/>std::string<sp/>query,</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;std::map&lt;std::string,<sp/>std::string&gt;&gt;&gt;<sp/>uri_values,</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/>config_options)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="comment"></highlight></codeline>
<codeline lineno="299"><highlight class="comment"></highlight></codeline>
<codeline lineno="300"><highlight class="comment">std::pair&lt;TableScanInfo,<sp/>error_code_t&gt;<sp/>getTableScanInfo_C(std::string<sp/>logicalPlan)<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="comment"></highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/><sp/><sp/>TableScanInfo<sp/>result;</highlight></codeline>
<codeline lineno="303"><highlight class="comment"></highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/><sp/><sp/><sp/>try<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>getTableScanInfo(logicalPlan);</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>std::make_pair(result,<sp/>E_SUCCESS);</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/>catch<sp/>(std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>std::make_pair(result,<sp/>E_EXCEPTION);</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="comment">}</highlight></codeline>
<codeline lineno="311"><highlight class="comment"></highlight></codeline>
<codeline lineno="312"><highlight class="comment">std::pair&lt;std::unique_ptr&lt;ResultSet&gt;,<sp/>error_code_t&gt;<sp/>runSkipData_C(</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/><sp/><sp/><sp/>ral::frame::BlazingTableView<sp/>metadata,</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>all_column_names,</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/><sp/><sp/><sp/>std::string<sp/>query)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="comment"></highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ResultSet&gt;<sp/>result<sp/>=<sp/>nullptr;</highlight></codeline>
<codeline lineno="318"><highlight class="comment"></highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/><sp/><sp/><sp/>try<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>std::move(runSkipData(metadata,</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_column_names,</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>query));</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>std::make_pair(std::move(result),<sp/>E_SUCCESS);</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/>catch<sp/>(std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>std::make_pair(std::move(result),<sp/>E_EXCEPTION);</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="comment">}</highlight></codeline>
<codeline lineno="328"><highlight class="comment"></highlight></codeline>
<codeline lineno="329"><highlight class="comment">std::pair&lt;std::unique_ptr&lt;ResultSet&gt;,<sp/>error_code_t&gt;<sp/>performPartition_C(</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/><sp/><sp/><sp/>int32_t<sp/>masterIndex,</highlight></codeline>
<codeline lineno="331"><highlight class="comment"></highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/><sp/><sp/><sp/>int32_t<sp/>ctxToken,</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>ral::frame::BlazingTableView<sp/>&amp;<sp/>table,</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>column_names)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="comment"></highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ResultSet&gt;<sp/>result<sp/>=<sp/>nullptr;</highlight></codeline>
<codeline lineno="337"><highlight class="comment"></highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/><sp/><sp/><sp/>try<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>std::move(performPartition(masterIndex,</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctxToken,</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table,</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>column_names));</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>std::make_pair(std::move(result),<sp/>E_SUCCESS);</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/>catch<sp/>(std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>std::make_pair(std::move(result),<sp/>E_EXCEPTION);</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="comment">}*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/cython/engine.cpp"/>
  </compounddef>
</doxygen>
