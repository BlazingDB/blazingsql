<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="BatchProcessing_8cpp" kind="file" language="C++">
    <compoundname>BatchProcessing.cpp</compoundname>
    <includes refid="BatchProcessing_8h" local="yes">BatchProcessing.h</includes>
    <includes refid="CodeTimer_8h" local="yes">CodeTimer.h</includes>
    <includes refid="CommunicationData_8h" local="yes">communication/CommunicationData.h</includes>
    <includes local="yes">ExceptionHandling/BlazingThread.h</includes>
    <includes refid="CSVParser_8h" local="yes">io/data_parser/CSVParser.h</includes>
    <includes refid="expression__utils_8hpp" local="yes">parser/expression_utils.hpp</includes>
    <includes refid="executor_8h" local="yes">taskflow/executor.h</includes>
    <includes local="no">cudf/types.hpp</includes>
    <includes refid="DebuggingUtils_8h" local="no">src/utilities/DebuggingUtils.h</includes>
    <includes refid="LogicalFilter_8h" local="no">src/execution_graph/logic_controllers/LogicalFilter.h</includes>
    <includes refid="LogicalProject_8h" local="yes">execution_graph/logic_controllers/LogicalProject.h</includes>
    <incdepgraph>
      <node id="2823">
        <label>atomic</label>
      </node>
      <node id="2819">
        <label>/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/BatchProcessing.cpp</label>
        <link refid="BatchProcessing_8cpp"/>
        <childnode refid="2820" relation="include">
        </childnode>
        <childnode refid="2836" relation="include">
        </childnode>
        <childnode refid="2867" relation="include">
        </childnode>
        <childnode refid="2898" relation="include">
        </childnode>
        <childnode refid="2906" relation="include">
        </childnode>
        <childnode refid="2909" relation="include">
        </childnode>
        <childnode refid="2911" relation="include">
        </childnode>
        <childnode refid="2831" relation="include">
        </childnode>
        <childnode refid="2912" relation="include">
        </childnode>
        <childnode refid="2913" relation="include">
        </childnode>
        <childnode refid="2914" relation="include">
        </childnode>
      </node>
      <node id="2864">
        <label>config/GPUManager.cuh</label>
      </node>
      <node id="2859">
        <label>rmm/mr/device/managed_memory_resource.hpp</label>
      </node>
      <node id="2900">
        <label>functional</label>
      </node>
      <node id="2903">
        <label>queue</label>
      </node>
      <node id="2822">
        <label>CacheMachine.h</label>
        <link refid="CacheMachine_8h_source"/>
        <childnode refid="2823" relation="include">
        </childnode>
        <childnode refid="2824" relation="include">
        </childnode>
        <childnode refid="2825" relation="include">
        </childnode>
        <childnode refid="2826" relation="include">
        </childnode>
        <childnode refid="2821" relation="include">
        </childnode>
        <childnode refid="2827" relation="include">
        </childnode>
        <childnode refid="2828" relation="include">
        </childnode>
        <childnode refid="2829" relation="include">
        </childnode>
        <childnode refid="2830" relation="include">
        </childnode>
        <childnode refid="2831" relation="include">
        </childnode>
        <childnode refid="2832" relation="include">
        </childnode>
        <childnode refid="2836" relation="include">
        </childnode>
        <childnode refid="2838" relation="include">
        </childnode>
        <childnode refid="2849" relation="include">
        </childnode>
        <childnode refid="2851" relation="include">
        </childnode>
        <childnode refid="2867" relation="include">
        </childnode>
        <childnode refid="2835" relation="include">
        </childnode>
        <childnode refid="2868" relation="include">
        </childnode>
        <childnode refid="2878" relation="include">
        </childnode>
        <childnode refid="2881" relation="include">
        </childnode>
        <childnode refid="2890" relation="include">
        </childnode>
        <childnode refid="2891" relation="include">
        </childnode>
      </node>
      <node id="2838">
        <label>execution_graph/logic_controllers/LogicPrimitives.h</label>
        <link refid="LogicPrimitives_8h_source"/>
        <childnode refid="2839" relation="include">
        </childnode>
        <childnode refid="2840" relation="include">
        </childnode>
        <childnode refid="2825" relation="include">
        </childnode>
        <childnode refid="2827" relation="include">
        </childnode>
        <childnode refid="2828" relation="include">
        </childnode>
        <childnode refid="2841" relation="include">
        </childnode>
        <childnode refid="2843" relation="include">
        </childnode>
      </node>
      <node id="2876">
        <label>cudf/scalar/scalar_device_view.cuh</label>
      </node>
      <node id="2881">
        <label>communication/messages/GPUComponentMessage.h</label>
        <link refid="GPUComponentMessage_8h_source"/>
        <childnode refid="2830" relation="include">
        </childnode>
        <childnode refid="2869" relation="include">
        </childnode>
        <childnode refid="2870" relation="include">
        </childnode>
        <childnode refid="2871" relation="include">
        </childnode>
        <childnode refid="2844" relation="include">
        </childnode>
        <childnode refid="2850" relation="include">
        </childnode>
        <childnode refid="2882" relation="include">
        </childnode>
        <childnode refid="2829" relation="include">
        </childnode>
        <childnode refid="2825" relation="include">
        </childnode>
        <childnode refid="2821" relation="include">
        </childnode>
        <childnode refid="2883" relation="include">
        </childnode>
        <childnode refid="2884" relation="include">
        </childnode>
        <childnode refid="2885" relation="include">
        </childnode>
        <childnode refid="2886" relation="include">
        </childnode>
        <childnode refid="2842" relation="include">
        </childnode>
        <childnode refid="2887" relation="include">
        </childnode>
        <childnode refid="2888" relation="include">
        </childnode>
        <childnode refid="2831" relation="include">
        </childnode>
        <childnode refid="2889" relation="include">
        </childnode>
        <childnode refid="2838" relation="include">
        </childnode>
        <childnode refid="2843" relation="include">
        </childnode>
      </node>
      <node id="2865">
        <label>sys/sysinfo.h</label>
      </node>
      <node id="2874">
        <label>cudf/scalar/scalar_factories.hpp</label>
      </node>
      <node id="2894">
        <label>kernel_type.h</label>
        <link refid="kernel__type_8h_source"/>
        <childnode refid="2827" relation="include">
        </childnode>
      </node>
      <node id="2845">
        <label>cstdint</label>
      </node>
      <node id="2857">
        <label>rmm/mr/device/owning_wrapper.hpp</label>
      </node>
      <node id="2862">
        <label>rmm/mr/device/logging_resource_adaptor.hpp</label>
      </node>
      <node id="2841">
        <label>execution_graph/logic_controllers/BlazingColumn.h</label>
        <link refid="BlazingColumn_8h_source"/>
        <childnode refid="2842" relation="include">
        </childnode>
        <childnode refid="2839" relation="include">
        </childnode>
        <childnode refid="2840" relation="include">
        </childnode>
        <childnode refid="2825" relation="include">
        </childnode>
        <childnode refid="2827" relation="include">
        </childnode>
        <childnode refid="2828" relation="include">
        </childnode>
      </node>
      <node id="2850">
        <label>transport/Node.h</label>
        <link refid="Node_8h_source"/>
        <childnode refid="2825" relation="include">
        </childnode>
        <childnode refid="2827" relation="include">
        </childnode>
      </node>
      <node id="2885">
        <label>cudf/copying.hpp</label>
      </node>
      <node id="2832">
        <label>error.hpp</label>
        <link refid="error_8hpp_source"/>
        <childnode refid="2833" relation="include">
        </childnode>
        <childnode refid="2828" relation="include">
        </childnode>
        <childnode refid="2834" relation="include">
        </childnode>
        <childnode refid="2835" relation="include">
        </childnode>
      </node>
      <node id="2907">
        <label>cudf/io/datasource.hpp</label>
      </node>
      <node id="2852">
        <label>cassert</label>
      </node>
      <node id="2858">
        <label>rmm/mr/device/cuda_memory_resource.hpp</label>
      </node>
      <node id="2861">
        <label>rmm/mr/device/arena_memory_resource.hpp</label>
      </node>
      <node id="2883">
        <label>numeric</label>
      </node>
      <node id="2855">
        <label>rmm/cuda_stream_view.hpp</label>
      </node>
      <node id="2827">
        <label>string</label>
      </node>
      <node id="2820">
        <label>BatchProcessing.h</label>
        <link refid="BatchProcessing_8h_source"/>
        <childnode refid="2821" relation="include">
        </childnode>
        <childnode refid="2822" relation="include">
        </childnode>
        <childnode refid="2892" relation="include">
        </childnode>
        <childnode refid="2879" relation="include">
        </childnode>
        <childnode refid="2904" relation="include">
        </childnode>
        <childnode refid="2893" relation="include">
        </childnode>
        <childnode refid="2838" relation="include">
        </childnode>
      </node>
      <node id="2910">
        <label>cudf/aggregation.hpp</label>
      </node>
      <node id="2829">
        <label>map</label>
      </node>
      <node id="2887">
        <label>cudf/null_mask.hpp</label>
      </node>
      <node id="2896">
        <label>kpair.h</label>
        <link refid="kpair_8h_source"/>
        <childnode refid="2895" relation="include">
        </childnode>
        <childnode refid="2893" relation="include">
        </childnode>
      </node>
      <node id="2870">
        <label>spdlog/sinks/basic_file_sink.h</label>
      </node>
      <node id="2843">
        <label>BlazingHostTable.h</label>
        <link refid="BlazingHostTable_8h_source"/>
        <childnode refid="2828" relation="include">
        </childnode>
        <childnode refid="2827" relation="include">
        </childnode>
        <childnode refid="2825" relation="include">
        </childnode>
        <childnode refid="2831" relation="include">
        </childnode>
        <childnode refid="2844" relation="include">
        </childnode>
        <childnode refid="2846" relation="include">
        </childnode>
        <childnode refid="2838" relation="include">
        </childnode>
      </node>
      <node id="2835">
        <label>exception</label>
      </node>
      <node id="2891">
        <label>WaitingQueue.h</label>
        <link refid="WaitingQueue_8h_source"/>
        <childnode refid="2823" relation="include">
        </childnode>
        <childnode refid="2824" relation="include">
        </childnode>
        <childnode refid="2825" relation="include">
        </childnode>
        <childnode refid="2826" relation="include">
        </childnode>
        <childnode refid="2821" relation="include">
        </childnode>
        <childnode refid="2827" relation="include">
        </childnode>
        <childnode refid="2828" relation="include">
        </childnode>
        <childnode refid="2829" relation="include">
        </childnode>
        <childnode refid="2830" relation="include">
        </childnode>
        <childnode refid="2835" relation="include">
        </childnode>
      </node>
      <node id="2849">
        <label>execution_graph/Context.h</label>
        <link refid="Context_8h_source"/>
        <childnode refid="2828" relation="include">
        </childnode>
        <childnode refid="2829" relation="include">
        </childnode>
        <childnode refid="2821" relation="include">
        </childnode>
        <childnode refid="2850" relation="include">
        </childnode>
      </node>
      <node id="2890">
        <label>CacheData.h</label>
        <link refid="CacheData_8h_source"/>
        <childnode refid="2823" relation="include">
        </childnode>
        <childnode refid="2824" relation="include">
        </childnode>
        <childnode refid="2825" relation="include">
        </childnode>
        <childnode refid="2826" relation="include">
        </childnode>
        <childnode refid="2821" relation="include">
        </childnode>
        <childnode refid="2827" relation="include">
        </childnode>
        <childnode refid="2828" relation="include">
        </childnode>
        <childnode refid="2829" relation="include">
        </childnode>
        <childnode refid="2830" relation="include">
        </childnode>
        <childnode refid="2831" relation="include">
        </childnode>
        <childnode refid="2832" relation="include">
        </childnode>
        <childnode refid="2836" relation="include">
        </childnode>
        <childnode refid="2838" relation="include">
        </childnode>
        <childnode refid="2849" relation="include">
        </childnode>
        <childnode refid="2851" relation="include">
        </childnode>
        <childnode refid="2867" relation="include">
        </childnode>
        <childnode refid="2835" relation="include">
        </childnode>
        <childnode refid="2868" relation="include">
        </childnode>
        <childnode refid="2878" relation="include">
        </childnode>
        <childnode refid="2881" relation="include">
        </childnode>
      </node>
      <node id="2906">
        <label>io/data_parser/CSVParser.h</label>
        <link refid="CSVParser_8h_source"/>
        <childnode refid="2878" relation="include">
        </childnode>
        <childnode refid="2868" relation="include">
        </childnode>
        <childnode refid="2872" relation="include">
        </childnode>
        <childnode refid="2825" relation="include">
        </childnode>
        <childnode refid="2828" relation="include">
        </childnode>
        <childnode refid="2907" relation="include">
        </childnode>
        <childnode refid="2908" relation="include">
        </childnode>
      </node>
      <node id="2868">
        <label>io/data_provider/DataProvider.h</label>
        <link refid="DataProvider_8h_source"/>
        <childnode refid="2830" relation="include">
        </childnode>
        <childnode refid="2869" relation="include">
        </childnode>
        <childnode refid="2870" relation="include">
        </childnode>
        <childnode refid="2871" relation="include">
        </childnode>
        <childnode refid="2872" relation="include">
        </childnode>
        <childnode refid="2873" relation="include">
        </childnode>
        <childnode refid="2874" relation="include">
        </childnode>
        <childnode refid="2831" relation="include">
        </childnode>
        <childnode refid="2875" relation="include">
        </childnode>
        <childnode refid="2876" relation="include">
        </childnode>
        <childnode refid="2829" relation="include">
        </childnode>
        <childnode refid="2825" relation="include">
        </childnode>
        <childnode refid="2828" relation="include">
        </childnode>
        <childnode refid="2877" relation="include">
        </childnode>
        <childnode refid="2838" relation="include">
        </childnode>
      </node>
      <node id="2889">
        <label>cudf/strings/strings_column_view.hpp</label>
      </node>
      <node id="2830">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="2909">
        <label>parser/expression_utils.hpp</label>
        <link refid="expression__utils_8hpp_source"/>
        <childnode refid="2829" relation="include">
        </childnode>
        <childnode refid="2827" relation="include">
        </childnode>
        <childnode refid="2828" relation="include">
        </childnode>
        <childnode refid="2831" relation="include">
        </childnode>
        <childnode refid="2910" relation="include">
        </childnode>
      </node>
      <node id="2840">
        <label>cudf/table/table_view.hpp</label>
      </node>
      <node id="2899">
        <label>utilities/ctpl_stl.h</label>
        <link refid="ctpl__stl_8h_source"/>
        <childnode refid="2900" relation="include">
        </childnode>
        <childnode refid="2901" relation="include">
        </childnode>
        <childnode refid="2823" relation="include">
        </childnode>
        <childnode refid="2828" relation="include">
        </childnode>
        <childnode refid="2825" relation="include">
        </childnode>
        <childnode refid="2835" relation="include">
        </childnode>
        <childnode refid="2902" relation="include">
        </childnode>
        <childnode refid="2821" relation="include">
        </childnode>
        <childnode refid="2903" relation="include">
        </childnode>
      </node>
      <node id="2879">
        <label>../Schema.h</label>
        <link refid="Schema_8h_source"/>
        <childnode refid="2827" relation="include">
        </childnode>
        <childnode refid="2828" relation="include">
        </childnode>
        <childnode refid="2831" relation="include">
        </childnode>
        <childnode refid="2838" relation="include">
        </childnode>
      </node>
      <node id="2872">
        <label>arrow/io/interfaces.h</label>
      </node>
      <node id="2826">
        <label>condition_variable</label>
      </node>
      <node id="2898">
        <label>ExceptionHandling/BlazingThread.h</label>
      </node>
      <node id="2882">
        <label>communication/messages/MessageUtil.cuh</label>
      </node>
      <node id="2866">
        <label>sys/statvfs.h</label>
      </node>
      <node id="2875">
        <label>cudf/utilities/type_dispatcher.hpp</label>
      </node>
      <node id="2884">
        <label>tuple</label>
      </node>
      <node id="2902">
        <label>future</label>
      </node>
      <node id="2914">
        <label>execution_graph/logic_controllers/LogicalProject.h</label>
        <link refid="LogicalProject_8h_source"/>
        <childnode refid="2849" relation="include">
        </childnode>
        <childnode refid="2838" relation="include">
        </childnode>
        <childnode refid="2841" relation="include">
        </childnode>
      </node>
      <node id="2869">
        <label>spdlog/async.h</label>
      </node>
      <node id="2893">
        <label>kernel.h</label>
        <link refid="kernel_8h_source"/>
        <childnode refid="2894" relation="include">
        </childnode>
        <childnode refid="2895" relation="include">
        </childnode>
        <childnode refid="2892" relation="include">
        </childnode>
      </node>
      <node id="2847">
        <label>stack</label>
      </node>
      <node id="2828">
        <label>vector</label>
      </node>
      <node id="2844">
        <label>transport/ColumnTransport.h</label>
        <link refid="ColumnTransport_8h_source"/>
        <childnode refid="2845" relation="include">
        </childnode>
      </node>
      <node id="2888">
        <label>cudf/column/column_factories.hpp</label>
      </node>
      <node id="2886">
        <label>cudf/column/column.hpp</label>
      </node>
      <node id="2848">
        <label>ucp/api/ucp.h</label>
      </node>
      <node id="2871">
        <label>spdlog/sinks/stdout_color_sinks.h</label>
      </node>
      <node id="2846">
        <label>bmr/BufferProvider.h</label>
        <link refid="BufferProvider_8h_source"/>
        <childnode refid="2828" relation="include">
        </childnode>
        <childnode refid="2827" relation="include">
        </childnode>
        <childnode refid="2847" relation="include">
        </childnode>
        <childnode refid="2821" relation="include">
        </childnode>
        <childnode refid="2825" relation="include">
        </childnode>
        <childnode refid="2848" relation="include">
        </childnode>
      </node>
      <node id="2878">
        <label>io/data_parser/DataParser.h</label>
        <link refid="DataParser_8h_source"/>
        <childnode refid="2879" relation="include">
        </childnode>
        <childnode refid="2880" relation="include">
        </childnode>
        <childnode refid="2868" relation="include">
        </childnode>
        <childnode refid="2838" relation="include">
        </childnode>
        <childnode refid="2872" relation="include">
        </childnode>
        <childnode refid="2825" relation="include">
        </childnode>
        <childnode refid="2828" relation="include">
        </childnode>
      </node>
      <node id="2831">
        <label>cudf/types.hpp</label>
      </node>
      <node id="2897">
        <label>bmr/MemoryMonitor.h</label>
        <link refid="MemoryMonitor_8h_source"/>
        <childnode refid="2826" relation="include">
        </childnode>
        <childnode refid="2821" relation="include">
        </childnode>
        <childnode refid="2837" relation="include">
        </childnode>
        <childnode refid="2898" relation="include">
        </childnode>
        <childnode refid="2829" relation="include">
        </childnode>
      </node>
      <node id="2863">
        <label>rmm/mr/device/per_device_resource.hpp</label>
      </node>
      <node id="2880">
        <label>../DataType.h</label>
        <link refid="DataType_8h_source"/>
      </node>
      <node id="2908">
        <label>cudf/io/csv.hpp</label>
      </node>
      <node id="2867">
        <label>communication/CommunicationData.h</label>
        <link refid="CommunicationData_8h_source"/>
        <childnode refid="2848" relation="include">
        </childnode>
        <childnode refid="2850" relation="include">
        </childnode>
        <childnode refid="2825" relation="include">
        </childnode>
        <childnode refid="2827" relation="include">
        </childnode>
        <childnode refid="2829" relation="include">
        </childnode>
      </node>
      <node id="2892">
        <label>taskflow/graph.h</label>
        <link refid="graph_8h_source"/>
        <childnode refid="2893" relation="include">
        </childnode>
        <childnode refid="2896" relation="include">
        </childnode>
        <childnode refid="2822" relation="include">
        </childnode>
        <childnode refid="2897" relation="include">
        </childnode>
        <childnode refid="2899" relation="include">
        </childnode>
      </node>
      <node id="2895">
        <label>port.h</label>
        <link refid="port_8h_source"/>
        <childnode refid="2828" relation="include">
        </childnode>
        <childnode refid="2825" relation="include">
        </childnode>
        <childnode refid="2827" relation="include">
        </childnode>
        <childnode refid="2822" relation="include">
        </childnode>
      </node>
      <node id="2833">
        <label>iostream</label>
      </node>
      <node id="2842">
        <label>cudf/column/column_view.hpp</label>
      </node>
      <node id="2824">
        <label>deque</label>
      </node>
      <node id="2821">
        <label>mutex</label>
      </node>
      <node id="2854">
        <label>cuda_runtime_api.h</label>
      </node>
      <node id="2837">
        <label>chrono</label>
      </node>
      <node id="2912">
        <label>src/utilities/DebuggingUtils.h</label>
        <link refid="DebuggingUtils_8h_source"/>
        <childnode refid="2838" relation="include">
        </childnode>
      </node>
      <node id="2877">
        <label>blazingdb/io/FileSystem/Uri.h</label>
      </node>
      <node id="2836">
        <label>CodeTimer.h</label>
        <link refid="CodeTimer_8h_source"/>
        <childnode refid="2837" relation="include">
        </childnode>
      </node>
      <node id="2856">
        <label>rmm/mr/device/device_memory_resource.hpp</label>
      </node>
      <node id="2911">
        <label>taskflow/executor.h</label>
        <link refid="executor_8h_source"/>
        <childnode refid="2893" relation="include">
        </childnode>
        <childnode refid="2822" relation="include">
        </childnode>
        <childnode refid="2898" relation="include">
        </childnode>
        <childnode refid="2899" relation="include">
        </childnode>
      </node>
      <node id="2901">
        <label>thread</label>
      </node>
      <node id="2851">
        <label>bmr/BlazingMemoryResource.h</label>
        <link refid="BlazingMemoryResource_8h_source"/>
        <childnode refid="2852" relation="include">
        </childnode>
        <childnode refid="2823" relation="include">
        </childnode>
        <childnode refid="2853" relation="include">
        </childnode>
        <childnode refid="2854" relation="include">
        </childnode>
        <childnode refid="2855" relation="include">
        </childnode>
        <childnode refid="2856" relation="include">
        </childnode>
        <childnode refid="2857" relation="include">
        </childnode>
        <childnode refid="2858" relation="include">
        </childnode>
        <childnode refid="2859" relation="include">
        </childnode>
        <childnode refid="2860" relation="include">
        </childnode>
        <childnode refid="2861" relation="include">
        </childnode>
        <childnode refid="2862" relation="include">
        </childnode>
        <childnode refid="2863" relation="include">
        </childnode>
        <childnode refid="2864" relation="include">
        </childnode>
        <childnode refid="2865" relation="include">
        </childnode>
        <childnode refid="2866" relation="include">
        </childnode>
      </node>
      <node id="2860">
        <label>rmm/mr/device/pool_memory_resource.hpp</label>
      </node>
      <node id="2853">
        <label>set</label>
      </node>
      <node id="2839">
        <label>cudf/table/table.hpp</label>
      </node>
      <node id="2904">
        <label>io/DataLoader.h</label>
        <link refid="DataLoader_8h_source"/>
        <childnode refid="2905" relation="include">
        </childnode>
        <childnode refid="2878" relation="include">
        </childnode>
        <childnode refid="2868" relation="include">
        </childnode>
        <childnode refid="2872" relation="include">
        </childnode>
        <childnode refid="2849" relation="include">
        </childnode>
        <childnode refid="2828" relation="include">
        </childnode>
        <childnode refid="2825" relation="include">
        </childnode>
      </node>
      <node id="2834">
        <label>cudf/utilities/error.hpp</label>
      </node>
      <node id="2873">
        <label>cudf/scalar/scalar.hpp</label>
      </node>
      <node id="2825">
        <label>memory</label>
      </node>
      <node id="2905">
        <label>FileSystem/Uri.h</label>
      </node>
      <node id="2913">
        <label>src/execution_graph/logic_controllers/LogicalFilter.h</label>
        <link refid="LogicalFilter_8h_source"/>
        <childnode refid="2849" relation="include">
        </childnode>
        <childnode refid="2838" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceral">ral</innernamespace>
    <innernamespace refid="namespaceral_1_1batch">ral::batch</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;BatchProcessing.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CodeTimer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;communication/CommunicationData.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ExceptionHandling/BlazingThread.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;io/data_parser/CSVParser.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;parser/expression_utils.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;taskflow/executor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cudf/types.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;src/utilities/DebuggingUtils.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;src/execution_graph/logic_controllers/LogicalFilter.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;execution_graph/logic_controllers/LogicalProject.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceral" kindref="compound">ral</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">batch<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BEGIN<sp/>BatchSequence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="classral_1_1batch_1_1BatchSequence_1a1012a9622924b621edd667400038b24d" refkind="member"><highlight class="normal"><ref refid="classral_1_1batch_1_1BatchSequence_1a1012a9622924b621edd667400038b24d" kindref="member">BatchSequence::BatchSequence</ref>(std::shared_ptr&lt;ral::cache::CacheMachine&gt;<sp/>cache,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classral_1_1cache_1_1kernel" kindref="compound">ral::cache::kernel</ref><sp/>*<sp/><ref refid="classral_1_1cache_1_1kernel" kindref="compound">kernel</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ordered)</highlight></codeline>
<codeline lineno="19"><highlight class="normal">:<sp/>cache{cache},<sp/><ref refid="classral_1_1cache_1_1kernel" kindref="compound">kernel</ref>{<ref refid="classral_1_1cache_1_1kernel" kindref="compound">kernel</ref>},<sp/>ordered{ordered}</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="classral_1_1batch_1_1BatchSequence_1a92ce0d4e310caded265fceab3f4c266a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classral_1_1batch_1_1BatchSequence_1a92ce0d4e310caded265fceab3f4c266a" kindref="member">BatchSequence::set_source</ref>(std::shared_ptr&lt;ral::cache::CacheMachine&gt;<sp/>cache)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;cache<sp/>=<sp/>cache;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classral_1_1batch_1_1BatchSequence_1a5fe181e6183df338739e61eb512c23a4" refkind="member"><highlight class="normal">std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/><ref refid="classral_1_1batch_1_1BatchSequence_1a5fe181e6183df338739e61eb512c23a4" kindref="member">BatchSequence::next</ref>()<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ordered)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cache-&gt;pullFromCache();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cache-&gt;pullUnorderedFromCache();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classral_1_1batch_1_1BatchSequence_1af62f1f620ac02a018737af8a89eb4881" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classral_1_1batch_1_1BatchSequence_1af62f1f620ac02a018737af8a89eb4881" kindref="member">BatchSequence::wait_for_next</ref>()<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classral_1_1cache_1_1kernel" kindref="compound">kernel</ref>)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>message_id<sp/>=<sp/>std::to_string((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="classral_1_1cache_1_1kernel" kindref="compound">kernel</ref>-&gt;<ref refid="classral_1_1cache_1_1kernel_1a146246668880ca685f22d208e638578b" kindref="member">get_type_id</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<ref refid="classral_1_1cache_1_1kernel" kindref="compound">kernel</ref>-&gt;<ref refid="classral_1_1cache_1_1kernel_1a33ce6e9907abce1acedb01e236c6812e" kindref="member">get_id</ref>());</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cache-&gt;wait_for_next();</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classral_1_1batch_1_1BatchSequence_1a0ed0531f11f65b4e7391da23c2a2de12" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classral_1_1batch_1_1BatchSequence_1a0ed0531f11f65b4e7391da23c2a2de12" kindref="member">BatchSequence::has_next_now</ref>()<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cache-&gt;has_next_now();</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>END<sp/>BatchSequence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BEGIN<sp/>BatchSequenceBypass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classral_1_1batch_1_1BatchSequenceBypass_1aece145bb27dd1aa61252a831b8d0b536" refkind="member"><highlight class="normal"><ref refid="classral_1_1batch_1_1BatchSequenceBypass_1aece145bb27dd1aa61252a831b8d0b536" kindref="member">BatchSequenceBypass::BatchSequenceBypass</ref>(std::shared_ptr&lt;ral::cache::CacheMachine&gt;<sp/>cache,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classral_1_1cache_1_1kernel" kindref="compound">ral::cache::kernel</ref><sp/>*<sp/><ref refid="classral_1_1cache_1_1kernel" kindref="compound">kernel</ref>)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">:<sp/>cache{cache},<sp/><ref refid="classral_1_1cache_1_1kernel" kindref="compound">kernel</ref>{<ref refid="classral_1_1cache_1_1kernel" kindref="compound">kernel</ref>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classral_1_1batch_1_1BatchSequenceBypass_1aaf3b8397046f0ad622a49c751861d983" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classral_1_1batch_1_1BatchSequenceBypass_1aaf3b8397046f0ad622a49c751861d983" kindref="member">BatchSequenceBypass::set_source</ref>(std::shared_ptr&lt;ral::cache::CacheMachine&gt;<sp/>cache)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;cache<sp/>=<sp/>cache;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classral_1_1batch_1_1BatchSequenceBypass_1a5d55f785961b21c82578223ab5a0a217" refkind="member"><highlight class="normal">std::unique_ptr&lt;ral::cache::CacheData&gt;<sp/><ref refid="classral_1_1batch_1_1BatchSequenceBypass_1a5d55f785961b21c82578223ab5a0a217" kindref="member">BatchSequenceBypass::next</ref>()<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cache-&gt;pullCacheData();</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classral_1_1batch_1_1BatchSequenceBypass_1a623422aa9164a34bce024e92f4f26679" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classral_1_1batch_1_1BatchSequenceBypass_1a623422aa9164a34bce024e92f4f26679" kindref="member">BatchSequenceBypass::wait_for_next</ref>()<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cache-&gt;wait_for_next();</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classral_1_1batch_1_1BatchSequenceBypass_1a221ad94710394f83ebbeeabcc1851b22" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classral_1_1batch_1_1BatchSequenceBypass_1a221ad94710394f83ebbeeabcc1851b22" kindref="member">BatchSequenceBypass::has_next_now</ref>()<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cache-&gt;has_next_now();</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>END<sp/>BatchSequenceBypass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BEGIN<sp/>TableScan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="classral_1_1batch_1_1TableScan_1a64b1e4afbf75881a69e4adb43a553e76" refkind="member"><highlight class="normal"><ref refid="classral_1_1batch_1_1TableScan_1a64b1e4afbf75881a69e4adb43a553e76" kindref="member">TableScan::TableScan</ref>(std::size_t<sp/>kernel_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>queryString,<sp/>std::shared_ptr&lt;ral::io::data_provider&gt;<sp/>provider,<sp/>std::shared_ptr&lt;ral::io::data_parser&gt;<sp/>parser,<sp/><ref refid="classral_1_1io_1_1Schema" kindref="compound">ral::io::Schema</ref><sp/>&amp;<sp/>schema,<sp/>std::shared_ptr&lt;Context&gt;<sp/>context,<sp/>std::shared_ptr&lt;ral::cache::graph&gt;<sp/>query_graph)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">:<sp/><ref refid="classral_1_1cache_1_1kernel" kindref="compound">kernel</ref>(kernel_id,<sp/>queryString,<sp/>context,<sp/>kernel_type::TableScanKernel),<sp/>provider(provider),<sp/>parser(parser),<sp/>schema(schema),<sp/>num_batches(0)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(parser-&gt;type()<sp/>==<sp/>ral::io::DataType::CUDF<sp/>||<sp/>parser-&gt;type()<sp/>==<sp/>ral::io::DataType::DASK_CUDF){</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_batches<sp/>=<sp/>std::max(provider-&gt;get_num_handles(),<sp/>(size_t)1);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parser-&gt;type()<sp/>==<sp/>ral::io::DataType::CSV)<sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>csv_parser<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classral_1_1io_1_1csv__parser" kindref="compound">ral::io::csv_parser</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(parser.get());</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_batches<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_bytes_chunk_size<sp/>=<sp/>csv_parser-&gt;max_bytes_chunk_size();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_bytes_chunk_size<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>file_idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(provider-&gt;has_next())<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>data_handle<sp/>=<sp/>provider-&gt;get_next();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>file_size<sp/>=<sp/>data_handle.file_handle-&gt;GetSize().ValueOrDie();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num_chunks<sp/>=<sp/>(file_size<sp/>+<sp/>max_bytes_chunk_size<sp/>-<sp/>1)<sp/>/<sp/>max_bytes_chunk_size;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>file_row_groups(num_chunks);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::iota(file_row_groups.begin(),<sp/>file_row_groups.end(),<sp/>0);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>schema.get_rowgroups()[file_idx]<sp/>=<sp/>std::move(file_row_groups);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_batches<sp/>+=<sp/>num_chunks;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_idx++;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>provider-&gt;reset();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_batches<sp/>=<sp/>provider-&gt;get_num_handles();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_batches<sp/>=<sp/>provider-&gt;get_num_handles();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;query_graph<sp/>=<sp/><ref refid="classral_1_1cache_1_1kernel_1a5fbb02292aff165a28ef25e75f0d89bd" kindref="member">query_graph</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><ref refid="structral_1_1execution_1_1task__result" kindref="compound">ral::execution::task_result</ref><sp/>TableScan::do_process(std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>inputs,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ral::cache::CacheMachine&gt;<sp/>output,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>cudaStream_t<sp/></highlight><highlight class="comment">/*stream*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::string&gt;&amp;<sp/></highlight><highlight class="comment">/*args*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;addToCache(std::move(inputs[0]));</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rmm::bad_alloc&amp;<sp/>e){</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//can<sp/>still<sp/>recover<sp/>if<sp/>the<sp/>input<sp/>was<sp/>not<sp/>a<sp/>GPUCacheData<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::RETRY,<sp/>std::string(e.what()),<sp/>std::move(inputs)};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e){</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::FAIL,<sp/>std::string(e.what()),<sp/>std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>()};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::SUCCESS,<sp/>std::string(),<sp/>std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>()};</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classral_1_1batch_1_1TableScan_1a0dd1b7ffeaec582922ee586b452245c0" refkind="member"><highlight class="normal">kstatus<sp/><ref refid="classral_1_1batch_1_1TableScan_1a0dd1b7ffeaec582922ee586b452245c0" kindref="member">TableScan::run</ref>()<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCodeTimer" kindref="compound">CodeTimer</ref><sp/>timer;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>projections(schema.get_num_columns());</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>std::iota(projections.begin(),<sp/>projections.end(),<sp/>0);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>its<sp/>empty<sp/>we<sp/>can<sp/>just<sp/>add<sp/>it<sp/>to<sp/>the<sp/>cache<sp/>without<sp/>scheduling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!provider-&gt;has_next())<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1af6b7b538f6a692393f314a4f1037d4a6" kindref="member">add_to_output_cache</ref>(std::move(schema.makeEmptyBlazingTable(projections)));</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(provider-&gt;has_next())<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//retrieve<sp/>the<sp/>file<sp/>handle<sp/>but<sp/>do<sp/>not<sp/>open<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>will<sp/>allow<sp/>us<sp/>to<sp/>prevent<sp/>from<sp/>having<sp/>too<sp/>many<sp/>open<sp/>file<sp/>handles<sp/>by<sp/>being</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//able<sp/>to<sp/>limit<sp/>the<sp/>number<sp/>of<sp/>file<sp/>tasks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>handle<sp/>=<sp/>provider-&gt;get_next(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>file_schema<sp/>=<sp/>schema.fileSchema(file_index);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>row_group_ids<sp/>=<sp/>schema.get_rowgroup_ids(file_index);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>is<sp/>the<sp/>part<sp/>where<sp/>we<sp/>make<sp/>the<sp/>task<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ral::cache::CacheData&gt;<sp/>input<sp/>=</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_unique&lt;ral::cache::CacheDataIO&gt;(handle,parser,schema,file_schema,row_group_ids,projections);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::unique_ptr&lt;ral::cache::CacheData&gt;<sp/>&gt;<sp/>inputs;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs.push_back(std::move(input));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classral_1_1cache_1_1kernel_1a94c3bd66b93a0e67165d0a54741c19dc" kindref="member">output_cache</ref><sp/>=<sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a94c3bd66b93a0e67165d0a54741c19dc" kindref="member">output_cache</ref>();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ral::execution::executor::get_instance()-&gt;add_task(</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move(inputs),</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classral_1_1cache_1_1kernel_1a94c3bd66b93a0e67165d0a54741c19dc" kindref="member">output_cache</ref>,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*if<sp/>(this-&gt;has_limit_<sp/>&amp;&amp;<sp/>output_cache-&gt;get_num_rows_added()<sp/>&gt;=<sp/>this-&gt;limit_rows_)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/>break;</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_index++;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logger)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;debug(</highlight><highlight class="stringliteral">&quot;{query_id}|{step}|{substep}|{info}|{duration}|kernel_id|{kernel_id}||&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;query_id&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getContextToken(),</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;step&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getQueryStep(),</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;substep&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getQuerySubstep(),</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;TableScan<sp/>Kernel<sp/>tasks<sp/>created&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;duration&quot;</highlight><highlight class="normal">_a=timer.elapsed_time(),</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kernel_id&quot;</highlight><highlight class="normal">_a=this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a33ce6e9907abce1acedb01e236c6812e" kindref="member">get_id</ref>());</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(kernel_mutex);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kernel_cv.wait(lock,[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;tasks.empty()<sp/>||<sp/>ral::execution::executor::get_instance()-&gt;has_exception();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ep<sp/>=<sp/>ral::execution::executor::get_instance()-&gt;last_exception()){</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::rethrow_exception(ep);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logger)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;debug(</highlight><highlight class="stringliteral">&quot;{query_id}|{step}|{substep}|{info}|{duration}|kernel_id|{kernel_id}||&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;query_id&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getContextToken(),</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;step&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getQueryStep(),</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;substep&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getQuerySubstep(),</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;TableScan<sp/>Kernel<sp/>Completed&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;duration&quot;</highlight><highlight class="normal">_a=timer.elapsed_time(),</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kernel_id&quot;</highlight><highlight class="normal">_a=this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a33ce6e9907abce1acedb01e236c6812e" kindref="member">get_id</ref>());</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kstatus::proceed;</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="classral_1_1batch_1_1TableScan_1a7e0bd59ce5ca3d44b0530927f5edd481" refkind="member"><highlight class="normal">std::pair&lt;bool,<sp/>uint64_t&gt;<sp/><ref refid="classral_1_1batch_1_1TableScan_1a7e0bd59ce5ca3d44b0530927f5edd481" kindref="member">TableScan::get_estimated_output_num_rows</ref>(){</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rows_so_far<sp/>=<sp/>(double)this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a6eac1b9f1e6efb3bb9942ba7bbf66a94" kindref="member">output_</ref>.total_rows_added();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>batches_so_far<sp/>=<sp/>(double)this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a6eac1b9f1e6efb3bb9942ba7bbf66a94" kindref="member">output_</ref>.total_batches_added();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(batches_so_far<sp/>==<sp/>0<sp/>||<sp/>num_batches<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>(uint64_t)(rows_so_far/(batches_so_far/((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)num_batches))));</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">//<sp/>END<sp/>TableScan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BEGIN<sp/>BindableTableScan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="classral_1_1batch_1_1BindableTableScan_1adc92c38cd526bfbf6b1586fbfa4058cc" refkind="member"><highlight class="normal"><ref refid="classral_1_1batch_1_1BindableTableScan_1adc92c38cd526bfbf6b1586fbfa4058cc" kindref="member">BindableTableScan::BindableTableScan</ref>(std::size_t<sp/><ref refid="classral_1_1cache_1_1kernel_1a2fd708656cb056a41ec635b8bdc4acfe" kindref="member">kernel_id</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>queryString,<sp/>std::shared_ptr&lt;ral::io::data_provider&gt;<sp/>provider,<sp/>std::shared_ptr&lt;ral::io::data_parser&gt;<sp/>parser,<sp/><ref refid="classral_1_1io_1_1Schema" kindref="compound">ral::io::Schema</ref><sp/>&amp;<sp/>schema,<sp/>std::shared_ptr&lt;Context&gt;<sp/><ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>,<sp/>std::shared_ptr&lt;ral::cache::graph&gt;<sp/><ref refid="classral_1_1cache_1_1kernel_1a5fbb02292aff165a28ef25e75f0d89bd" kindref="member">query_graph</ref>)</highlight></codeline>
<codeline lineno="204"><highlight class="normal">:<sp/><ref refid="classral_1_1cache_1_1kernel" kindref="compound">kernel</ref>(kernel_id,<sp/>queryString,<sp/>context,<sp/>kernel_type::BindableTableScanKernel),<sp/>provider(provider),<sp/>parser(parser),<sp/>schema(schema)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;query_graph<sp/>=<sp/><ref refid="classral_1_1cache_1_1kernel_1a5fbb02292aff165a28ef25e75f0d89bd" kindref="member">query_graph</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;filtered<sp/>=<sp/>is_filtered_bindable_scan(<ref refid="classral_1_1cache_1_1kernel_1a0619a9c1e4952dc353dcfa079910a84a" kindref="member">expression</ref>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><ref refid="structral_1_1execution_1_1task__result" kindref="compound">ral::execution::task_result</ref><sp/>BindableTableScan::do_process(std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>inputs,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ral::cache::CacheMachine&gt;<sp/>output,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>cudaStream_t<sp/></highlight><highlight class="comment">/*stream*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::string&gt;&amp;<sp/></highlight><highlight class="comment">/*args*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>input<sp/>=<sp/>inputs[0];</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>filtered_input;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;filtered)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filtered_input<sp/>=<sp/>ral::processor::process_filter(input-&gt;toBlazingTableView(),<sp/><ref refid="classral_1_1cache_1_1kernel_1a0619a9c1e4952dc353dcfa079910a84a" kindref="member">expression</ref>,<sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>.get());</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filtered_input-&gt;setNames(fix_column_aliases(filtered_input-&gt;names(),<sp/><ref refid="classral_1_1cache_1_1kernel_1a0619a9c1e4952dc353dcfa079910a84a" kindref="member">expression</ref>));</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;addToCache(std::move(filtered_input));</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input-&gt;setNames(fix_column_aliases(input-&gt;names(),<sp/><ref refid="classral_1_1cache_1_1kernel_1a0619a9c1e4952dc353dcfa079910a84a" kindref="member">expression</ref>));</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;addToCache(std::move(input));</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rmm::bad_alloc&amp;<sp/>e){</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//can<sp/>still<sp/>recover<sp/>if<sp/>the<sp/>input<sp/>was<sp/>not<sp/>a<sp/>GPUCacheData</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::RETRY,<sp/>std::string(e.what()),<sp/>std::move(inputs)};</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e){</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::FAIL,<sp/>std::string(e.what()),<sp/>std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>()};</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::SUCCESS,<sp/>std::string(),<sp/>std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>()};</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="classral_1_1batch_1_1BindableTableScan_1a3215b390c1b588e165724b108038cbf9" refkind="member"><highlight class="normal">kstatus<sp/><ref refid="classral_1_1batch_1_1BindableTableScan_1a3215b390c1b588e165724b108038cbf9" kindref="member">BindableTableScan::run</ref>()<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCodeTimer" kindref="compound">CodeTimer</ref><sp/>timer;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>projections<sp/>=<sp/>get_projections(<ref refid="classral_1_1cache_1_1kernel_1a0619a9c1e4952dc353dcfa079910a84a" kindref="member">expression</ref>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(projections.size()<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>projections.resize(schema.get_num_columns());</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::iota(projections.begin(),<sp/>projections.end(),<sp/>0);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>its<sp/>empty<sp/>we<sp/>can<sp/>just<sp/>add<sp/>it<sp/>to<sp/>the<sp/>cache<sp/>without<sp/>scheduling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!provider-&gt;has_next())<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>empty<sp/>=<sp/>schema.makeEmptyBlazingTable(projections);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>empty-&gt;setNames(fix_column_aliases(empty-&gt;names(),<sp/><ref refid="classral_1_1cache_1_1kernel_1a0619a9c1e4952dc353dcfa079910a84a" kindref="member">expression</ref>));</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1af6b7b538f6a692393f314a4f1037d4a6" kindref="member">add_to_output_cache</ref>(std::move(empty));</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(provider-&gt;has_next())<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//retrieve<sp/>the<sp/>file<sp/>handle<sp/>but<sp/>do<sp/>not<sp/>open<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>will<sp/>allow<sp/>us<sp/>to<sp/>prevent<sp/>from<sp/>having<sp/>too<sp/>many<sp/>open<sp/>file<sp/>handles<sp/>by<sp/>being</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//able<sp/>to<sp/>limit<sp/>the<sp/>number<sp/>of<sp/>file<sp/>tasks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>handle<sp/>=<sp/>provider-&gt;get_next(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>file_schema<sp/>=<sp/>schema.fileSchema(file_index);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>row_group_ids<sp/>=<sp/>schema.get_rowgroup_ids(file_index);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>is<sp/>the<sp/>part<sp/>where<sp/>we<sp/>make<sp/>the<sp/>task<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ral::cache::CacheData&gt;<sp/>input<sp/>=</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_unique&lt;ral::cache::CacheDataIO&gt;(handle,parser,schema,file_schema,row_group_ids,projections);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::unique_ptr&lt;ral::cache::CacheData&gt;<sp/>&gt;<sp/>inputs;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs.push_back(std::move(input));</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classral_1_1cache_1_1kernel_1a94c3bd66b93a0e67165d0a54741c19dc" kindref="member">output_cache</ref><sp/>=<sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a94c3bd66b93a0e67165d0a54741c19dc" kindref="member">output_cache</ref>();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ral::execution::executor::get_instance()-&gt;add_task(</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move(inputs),</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classral_1_1cache_1_1kernel_1a94c3bd66b93a0e67165d0a54741c19dc" kindref="member">output_cache</ref>,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_index++;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*if<sp/>(this-&gt;has_limit_<sp/>&amp;&amp;<sp/>output_cache-&gt;get_num_rows_added()<sp/>&gt;=<sp/>this-&gt;limit_rows_)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/>break;</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logger){</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;debug(</highlight><highlight class="stringliteral">&quot;{query_id}|{step}|{substep}|{info}|{duration}|kernel_id|{kernel_id}||&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;query_id&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getContextToken(),</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;step&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getQueryStep(),</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;substep&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getQuerySubstep(),</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;BindableTableScan<sp/>Kernel<sp/>tasks<sp/>created&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;duration&quot;</highlight><highlight class="normal">_a=timer.elapsed_time(),</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kernel_id&quot;</highlight><highlight class="normal">_a=this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a33ce6e9907abce1acedb01e236c6812e" kindref="member">get_id</ref>());</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(kernel_mutex);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kernel_cv.wait(lock,[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;tasks.empty()<sp/>||<sp/>ral::execution::executor::get_instance()-&gt;has_exception();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ep<sp/>=<sp/>ral::execution::executor::get_instance()-&gt;last_exception()){</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::rethrow_exception(ep);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logger){</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;debug(</highlight><highlight class="stringliteral">&quot;{query_id}|{step}|{substep}|{info}|{duration}|kernel_id|{kernel_id}||&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;query_id&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getContextToken(),</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;step&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getQueryStep(),</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;substep&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getQuerySubstep(),</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;BindableTableScan<sp/>Kernel<sp/>Completed&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;duration&quot;</highlight><highlight class="normal">_a=timer.elapsed_time(),</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kernel_id&quot;</highlight><highlight class="normal">_a=this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a33ce6e9907abce1acedb01e236c6812e" kindref="member">get_id</ref>());</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kstatus::proceed;</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="classral_1_1batch_1_1BindableTableScan_1aa5054a845227c869fd27869e1784eb4d" refkind="member"><highlight class="normal">std::pair&lt;bool,<sp/>uint64_t&gt;<sp/><ref refid="classral_1_1batch_1_1BindableTableScan_1aa5054a845227c869fd27869e1784eb4d" kindref="member">BindableTableScan::get_estimated_output_num_rows</ref>(){</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rows_so_far<sp/>=<sp/>(double)this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a6eac1b9f1e6efb3bb9942ba7bbf66a94" kindref="member">output_</ref>.total_rows_added();</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current_batch<sp/>=<sp/>(double)file_index;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_batch<sp/>==<sp/>0<sp/>||<sp/>num_batches<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>(uint64_t)(rows_so_far/(current_batch/num_batches)));</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="comment">//<sp/>END<sp/>BindableTableScan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BEGIN<sp/>Projection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="classral_1_1batch_1_1Projection_1a1a13e4b65e633ffc98ad26f1db81e25b" refkind="member"><highlight class="normal"><ref refid="classral_1_1batch_1_1Projection_1a1a13e4b65e633ffc98ad26f1db81e25b" kindref="member">Projection::Projection</ref>(std::size_t<sp/><ref refid="classral_1_1cache_1_1kernel_1a2fd708656cb056a41ec635b8bdc4acfe" kindref="member">kernel_id</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>queryString,<sp/>std::shared_ptr&lt;Context&gt;<sp/><ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>,<sp/>std::shared_ptr&lt;ral::cache::graph&gt;<sp/><ref refid="classral_1_1cache_1_1kernel_1a5fbb02292aff165a28ef25e75f0d89bd" kindref="member">query_graph</ref>)</highlight></codeline>
<codeline lineno="323"><highlight class="normal">:<sp/><ref refid="classral_1_1cache_1_1kernel" kindref="compound">kernel</ref>(kernel_id,<sp/>queryString,<sp/>context,<sp/>kernel_type::ProjectKernel)</highlight></codeline>
<codeline lineno="324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;query_graph<sp/>=<sp/><ref refid="classral_1_1cache_1_1kernel_1a5fbb02292aff165a28ef25e75f0d89bd" kindref="member">query_graph</ref>;</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><ref refid="structral_1_1execution_1_1task__result" kindref="compound">ral::execution::task_result</ref><sp/>Projection::do_process(std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>inputs,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ral::cache::CacheMachine&gt;<sp/>output,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>cudaStream_t<sp/></highlight><highlight class="comment">/*stream*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::string&gt;&amp;<sp/></highlight><highlight class="comment">/*args*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>input<sp/>=<sp/>inputs[0];</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>columns<sp/>=<sp/>ral::processor::process_project(std::move(input),<sp/><ref refid="classral_1_1cache_1_1kernel_1a0619a9c1e4952dc353dcfa079910a84a" kindref="member">expression</ref>,<sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>.get());</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;addToCache(std::move(columns));</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rmm::bad_alloc&amp;<sp/>e){</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//can<sp/>still<sp/>recover<sp/>if<sp/>the<sp/>input<sp/>was<sp/>not<sp/>a<sp/>GPUCacheData<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::RETRY,<sp/>std::string(e.what()),<sp/>std::move(inputs)};</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e){</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::FAIL,<sp/>std::string(e.what()),<sp/>std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>()};</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::SUCCESS,<sp/>std::string(),<sp/>std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>()};</highlight></codeline>
<codeline lineno="343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="classral_1_1batch_1_1Projection_1a14bafcd753d4bd86160bec679ac19058" refkind="member"><highlight class="normal">kstatus<sp/><ref refid="classral_1_1batch_1_1Projection_1a14bafcd753d4bd86160bec679ac19058" kindref="member">Projection::run</ref>()<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCodeTimer" kindref="compound">CodeTimer</ref><sp/>timer;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr<sp/>&lt;ral::cache::CacheData&gt;<sp/>cache_data<sp/>=<sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1aac90d80ed296715da2a7736691847270" kindref="member">input_cache</ref>()-&gt;pullCacheData();</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>RAL_EXPECTS(cache_data<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>Projection::run()<sp/>first<sp/>input<sp/>CacheData<sp/>was<sp/>nullptr&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>this<sp/>kernel<sp/>will<sp/>project<sp/>all<sp/>the<sp/>columns<sp/>(with<sp/>or<sp/>without<sp/>aliases)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>want<sp/>to<sp/>avoid<sp/>caching<sp/>and<sp/>decahing<sp/>for<sp/>this<sp/>kernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bypassing_project,<sp/>bypassing_project_with_aliases;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>aliases;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>column_names<sp/>=<sp/>cache_data-&gt;names();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>std::tie(bypassing_project,<sp/>bypassing_project_with_aliases,<sp/>aliases)<sp/>=<sp/>bypassingProject(this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a0619a9c1e4952dc353dcfa079910a84a" kindref="member">expression</ref>,<sp/>column_names);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(cache_data<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bypassing_project_with_aliases)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_data-&gt;set_names(aliases);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1af6b7b538f6a692393f314a4f1037d4a6" kindref="member">add_to_output_cache</ref>(std::move(cache_data));</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bypassing_project)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1af6b7b538f6a692393f314a4f1037d4a6" kindref="member">add_to_output_cache</ref>(std::move(cache_data));</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::unique_ptr<sp/>&lt;ral::cache::CacheData&gt;<sp/>&gt;<sp/>inputs;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs.push_back(std::move(cache_data));</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ral::execution::executor::get_instance()-&gt;add_task(</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move(inputs),</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a94c3bd66b93a0e67165d0a54741c19dc" kindref="member">output_cache</ref>(),</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_data<sp/>=<sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1aac90d80ed296715da2a7736691847270" kindref="member">input_cache</ref>()-&gt;pullCacheData();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logger)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;debug(</highlight><highlight class="stringliteral">&quot;{query_id}|{step}|{substep}|{info}|{duration}|kernel_id|{kernel_id}||&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;query_id&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getContextToken(),</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;step&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getQueryStep(),</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;substep&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getQuerySubstep(),</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;Projection<sp/>Kernel<sp/>tasks<sp/>created&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;duration&quot;</highlight><highlight class="normal">_a=timer.elapsed_time(),</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kernel_id&quot;</highlight><highlight class="normal">_a=this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a33ce6e9907abce1acedb01e236c6812e" kindref="member">get_id</ref>());</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(kernel_mutex);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel_cv.wait(lock,[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;tasks.empty()<sp/>||<sp/>ral::execution::executor::get_instance()-&gt;has_exception();</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ep<sp/>=<sp/>ral::execution::executor::get_instance()-&gt;last_exception()){</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::rethrow_exception(ep);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logger)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;debug(</highlight><highlight class="stringliteral">&quot;{query_id}|{step}|{substep}|{info}|{duration}|kernel_id|{kernel_id}||&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;query_id&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getContextToken(),</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;step&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getQueryStep(),</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;substep&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getQuerySubstep(),</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;Projection<sp/>Kernel<sp/>Completed&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;duration&quot;</highlight><highlight class="normal">_a=timer.elapsed_time(),</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kernel_id&quot;</highlight><highlight class="normal">_a=this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a33ce6e9907abce1acedb01e236c6812e" kindref="member">get_id</ref>());</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kstatus::proceed;</highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="comment">//<sp/>END<sp/>Projection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BEGIN<sp/>Filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="classral_1_1batch_1_1Filter_1a65d965cdb5585989d29100bc633bc0d8" refkind="member"><highlight class="normal"><ref refid="classral_1_1batch_1_1Filter_1a65d965cdb5585989d29100bc633bc0d8" kindref="member">Filter::Filter</ref>(std::size_t<sp/><ref refid="classral_1_1cache_1_1kernel_1a2fd708656cb056a41ec635b8bdc4acfe" kindref="member">kernel_id</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>queryString,<sp/>std::shared_ptr&lt;Context&gt;<sp/><ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>,<sp/>std::shared_ptr&lt;ral::cache::graph&gt;<sp/><ref refid="classral_1_1cache_1_1kernel_1a5fbb02292aff165a28ef25e75f0d89bd" kindref="member">query_graph</ref>)</highlight></codeline>
<codeline lineno="412"><highlight class="normal">:<sp/><ref refid="classral_1_1cache_1_1kernel" kindref="compound">kernel</ref>(kernel_id,<sp/>queryString,<sp/>context,<sp/>kernel_type::FilterKernel)</highlight></codeline>
<codeline lineno="413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;query_graph<sp/>=<sp/><ref refid="classral_1_1cache_1_1kernel_1a5fbb02292aff165a28ef25e75f0d89bd" kindref="member">query_graph</ref>;</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><ref refid="structral_1_1execution_1_1task__result" kindref="compound">ral::execution::task_result</ref><sp/>Filter::do_process(std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>inputs,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ral::cache::CacheMachine&gt;<sp/>output,</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>cudaStream_t<sp/></highlight><highlight class="comment">/*stream*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::string&gt;&amp;<sp/></highlight><highlight class="comment">/*args*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>columns;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>input<sp/>=<sp/>inputs[0];</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>columns<sp/>=<sp/>ral::processor::process_filter(input-&gt;toBlazingTableView(),<sp/><ref refid="classral_1_1cache_1_1kernel_1a0619a9c1e4952dc353dcfa079910a84a" kindref="member">expression</ref>,<sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>.get());</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;addToCache(std::move(columns));</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rmm::bad_alloc&amp;<sp/>e){</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::RETRY,<sp/>std::string(e.what()),<sp/>std::move(inputs)};</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e){</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::FAIL,<sp/>std::string(e.what()),<sp/>std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>()};</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::SUCCESS,<sp/>std::string(),<sp/>std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>()};</highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435" refid="classral_1_1batch_1_1Filter_1acae535218dc139f0db24b80cb39353c2" refkind="member"><highlight class="normal">kstatus<sp/><ref refid="classral_1_1batch_1_1Filter_1acae535218dc139f0db24b80cb39353c2" kindref="member">Filter::run</ref>()<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCodeTimer" kindref="compound">CodeTimer</ref><sp/>timer;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr<sp/>&lt;ral::cache::CacheData&gt;<sp/>cache_data<sp/>=<sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1aac90d80ed296715da2a7736691847270" kindref="member">input_cache</ref>()-&gt;pullCacheData();</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(cache_data<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::unique_ptr<sp/>&lt;ral::cache::CacheData&gt;<sp/>&gt;<sp/>inputs;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs.push_back(std::move(cache_data));</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ral::execution::executor::get_instance()-&gt;add_task(</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move(inputs),</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a94c3bd66b93a0e67165d0a54741c19dc" kindref="member">output_cache</ref>(),</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_data<sp/>=<sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1aac90d80ed296715da2a7736691847270" kindref="member">input_cache</ref>()-&gt;pullCacheData();</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logger){</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;debug(</highlight><highlight class="stringliteral">&quot;{query_id}|{step}|{substep}|{info}|{duration}|kernel_id|{kernel_id}||&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;query_id&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getContextToken(),</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;step&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getQueryStep(),</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;substep&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getQuerySubstep(),</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;Filter<sp/>Kernel<sp/>tasks<sp/>created&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;duration&quot;</highlight><highlight class="normal">_a=timer.elapsed_time(),</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kernel_id&quot;</highlight><highlight class="normal">_a=this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a33ce6e9907abce1acedb01e236c6812e" kindref="member">get_id</ref>());</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(kernel_mutex);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel_cv.wait(lock,[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;tasks.empty()<sp/>||<sp/>ral::execution::executor::get_instance()-&gt;has_exception();</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ep<sp/>=<sp/>ral::execution::executor::get_instance()-&gt;last_exception()){</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::rethrow_exception(ep);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logger)<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;debug(</highlight><highlight class="stringliteral">&quot;{query_id}|{step}|{substep}|{info}|{duration}|kernel_id|{kernel_id}||&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;query_id&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getContextToken(),</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;step&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getQueryStep(),</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;substep&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getQuerySubstep(),</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;Filter<sp/>Kernel<sp/>Completed&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;duration&quot;</highlight><highlight class="normal">_a=timer.elapsed_time(),</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kernel_id&quot;</highlight><highlight class="normal">_a=this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a33ce6e9907abce1acedb01e236c6812e" kindref="member">get_id</ref>());</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kstatus::proceed;</highlight></codeline>
<codeline lineno="481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="classral_1_1batch_1_1Filter_1a74c13588fc770a4f487aeef39bd27174" refkind="member"><highlight class="normal">std::pair&lt;bool,<sp/>uint64_t&gt;<sp/><ref refid="classral_1_1batch_1_1Filter_1a74c13588fc770a4f487aeef39bd27174" kindref="member">Filter::get_estimated_output_num_rows</ref>(){</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;bool,<sp/>uint64_t&gt;<sp/>total_in<sp/>=<sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a5fbb02292aff165a28ef25e75f0d89bd" kindref="member">query_graph</ref>-&gt;get_estimated_input_rows_to_kernel(this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a2fd708656cb056a41ec635b8bdc4acfe" kindref="member">kernel_id</ref>);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(total_in.first){</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>out_so_far<sp/>=<sp/>(double)this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a6eac1b9f1e6efb3bb9942ba7bbf66a94" kindref="member">output_</ref>.total_bytes_added();</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>in_so_far<sp/>=<sp/>(double)this-&gt;total_input_bytes_processed;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(in_so_far<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>(uint64_t)(<sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)total_in.second)<sp/>*out_so_far/in_so_far)<sp/>);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="comment">//<sp/>END<sp/>Filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BEGIN<sp/>Print</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502" refid="classral_1_1batch_1_1Print_1aaa9c9b3999fa088344f8505fcf201721" refkind="member"><highlight class="normal">kstatus<sp/><ref refid="classral_1_1batch_1_1Print_1aaa9c9b3999fa088344f8505fcf201721" kindref="member">Print::run</ref>()<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lg(print_lock);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classral_1_1batch_1_1BatchSequence" kindref="compound">BatchSequence</ref><sp/>input(this-&gt;<ref refid="classral_1_1cache_1_1kernel_1aac90d80ed296715da2a7736691847270" kindref="member">input_cache</ref>(),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(input.<ref refid="classral_1_1batch_1_1BatchSequence_1af62f1f620ac02a018737af8a89eb4881" kindref="member">wait_for_next</ref>()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>batch<sp/>=<sp/>input.<ref refid="classral_1_1batch_1_1BatchSequence_1a5fe181e6183df338739e61eb512c23a4" kindref="member">next</ref>();</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ral::utilities::print_blazing_table_view(batch-&gt;toBlazingTableView());</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kstatus::stop;</highlight></codeline>
<codeline lineno="510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="comment">//<sp/>END<sp/>Print</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BEGIN<sp/>OutputKernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516" refid="classral_1_1batch_1_1OutputKernel_1a53519f315635c5e83e958fda42300f9a" refkind="member"><highlight class="normal">kstatus<sp/><ref refid="classral_1_1batch_1_1OutputKernel_1a53519f315635c5e83e958fda42300f9a" kindref="member">OutputKernel::run</ref>()<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a014bae9051f8ae95341be2f967b135c5" kindref="member">input_</ref>.get_cache()-&gt;wait_for_next())<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;frame::BlazingTable&gt;<sp/>temp_output<sp/>=<sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a014bae9051f8ae95341be2f967b135c5" kindref="member">input_</ref>.get_cache()-&gt;pullFromCache();</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(temp_output){</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.emplace_back(std::move(temp_output));</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>done<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kstatus::stop;</highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529" refid="classral_1_1batch_1_1OutputKernel_1adc3b6153007602790ee9045740fce823" refkind="member"><highlight class="normal">frame_type<sp/><ref refid="classral_1_1batch_1_1OutputKernel_1adc3b6153007602790ee9045740fce823" kindref="member">OutputKernel::release</ref>()<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(output);</highlight></codeline>
<codeline lineno="531"><highlight class="normal">}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533" refid="classral_1_1batch_1_1OutputKernel_1aeab17b971b0dbef6f892561e120b149c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classral_1_1batch_1_1OutputKernel_1aeab17b971b0dbef6f892561e120b149c" kindref="member">OutputKernel::is_done</ref>()<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>done.load();</highlight></codeline>
<codeline lineno="535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="comment">//<sp/>END<sp/>OutputKernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>batch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ral</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/BatchProcessing.cpp"/>
  </compounddef>
</doxygen>
