<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classral_1_1io_1_1uri__data__provider" kind="class" language="C++" prot="public">
    <compoundname>ral::io::uri_data_provider</compoundname>
    <basecompoundref refid="classral_1_1io_1_1data__provider" prot="public" virt="non-virtual">ral::io::data_provider</basecompoundref>
    <includes refid="UriDataProvider_8h" local="no">UriDataProvider.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classral_1_1io_1_1uri__data__provider_1a1c7b6b70d9365d01c06c590437edbe08" prot="private" static="no" mutable="no">
        <type>std::vector&lt; Uri &gt;</type>
        <definition>std::vector&lt;Uri&gt; ral::io::uri_data_provider::file_uris</definition>
        <argsstring></argsstring>
        <name>file_uris</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>stores the list of uris that will be used by the provider </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.h" line="70" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classral_1_1io_1_1uri__data__provider_1ab6c4057d31563454de960d231408f5ad" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t ral::io::uri_data_provider::current_file</definition>
        <argsstring></argsstring>
        <name>current_file</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>stores an index to the current file being used </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.h" line="74" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classral_1_1io_1_1uri__data__provider_1aa0edd69c2db518efc5b8c82d48626b70" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; arrow::io::RandomAccessFile &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;arrow::io::RandomAccessFile&gt; &gt; ral::io::uri_data_provider::opened_files</definition>
        <argsstring></argsstring>
        <name>opened_files</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>stores the files that were opened by the provider to be closed when it goes out of scope </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.h" line="78" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classral_1_1io_1_1uri__data__provider_1adbcce5d82528dba70a8dfa1a4baf9567" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; ral::io::uri_data_provider::errors</definition>
        <argsstring></argsstring>
        <name>errors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>stores any errors that occured while trying to open these uris </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.h" line="84" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classral_1_1io_1_1uri__data__provider_1abd96f8e320b42046bf7d68887b413f72" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::map&lt; std::string, std::string &gt; &gt;</type>
        <definition>std::vector&lt;std::map&lt;std::string, std::string&gt; &gt; ral::io::uri_data_provider::uri_values</definition>
        <argsstring></argsstring>
        <name>uri_values</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stores strings which represent scalar values which map to a file or directory, for example in hive partitioned tables where the files themselves wont have the partition columns this gives us a way of passing those in </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.h" line="91" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classral_1_1io_1_1uri__data__provider_1adbbca894e44ee7ba379583592faf8171" prot="private" static="no" mutable="no">
        <type>std::vector&lt; Uri &gt;</type>
        <definition>std::vector&lt;Uri&gt; ral::io::uri_data_provider::directory_uris</definition>
        <argsstring></argsstring>
        <name>directory_uris</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.h" line="92" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classral_1_1io_1_1uri__data__provider_1a11ff7061ba1c12b3581b8e4a1407e7e2" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t ral::io::uri_data_provider::directory_current_file</definition>
        <argsstring></argsstring>
        <name>directory_current_file</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.h" line="93" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classral_1_1io_1_1uri__data__provider_1a939251b87c4f26bf900bd07f4f1b1369" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ral::io::uri_data_provider::ignore_missing_paths</definition>
        <argsstring></argsstring>
        <name>ignore_missing_paths</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.h" line="94" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classral_1_1io_1_1uri__data__provider_1a8fae6bcd15526167bff4db8b55983cf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ral::io::uri_data_provider::uri_data_provider</definition>
        <argsstring>(std::vector&lt; Uri &gt; uris, std::vector&lt; std::map&lt; std::string, std::string &gt;&gt; uri_values, bool ignore_missing_paths=false)</argsstring>
        <name>uri_data_provider</name>
        <param>
          <type>std::vector&lt; Uri &gt;</type>
          <declname>uris</declname>
        </param>
        <param>
          <type>std::vector&lt; std::map&lt; std::string, std::string &gt;&gt;</type>
          <declname>uri_values</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ignore_missing_paths</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.h" line="28" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.cpp" bodystart="24" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classral_1_1io_1_1uri__data__provider_1afe82d9a1af9cc7718bfc5e1168821ebb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ral::io::uri_data_provider::uri_data_provider</definition>
        <argsstring>(std::vector&lt; Uri &gt; uris, bool ignore_missing_paths=false)</argsstring>
        <name>uri_data_provider</name>
        <param>
          <type>std::vector&lt; Uri &gt;</type>
          <declname>uris</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ignore_missing_paths</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.h" line="31" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.cpp" bodystart="20" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classral_1_1io_1_1uri__data__provider_1a6a1f9ddcfc0337174d2d6e25e21423c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="classral_1_1io_1_1data__provider" kindref="compound">data_provider</ref> &gt;</type>
        <definition>std::shared_ptr&lt; data_provider &gt; ral::io::uri_data_provider::clone</definition>
        <argsstring>() override</argsstring>
        <name>clone</name>
        <reimplements refid="classral_1_1io_1_1data__provider_1afff64b38ec3107e2e63edf6773ab7414">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.h" line="34" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.cpp" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classral_1_1io_1_1uri__data__provider_1a86dfa840b3643e0e7a7c006c0f646c0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>ral::io::uri_data_provider::~uri_data_provider</definition>
        <argsstring>()</argsstring>
        <name>~uri_data_provider</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.h" line="36" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.cpp" bodystart="41" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classral_1_1io_1_1uri__data__provider_1a1815b5e9fa0b323b0cf9c0ff932a1c4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ral::io::uri_data_provider::has_next</definition>
        <argsstring>()</argsstring>
        <name>has_next</name>
        <reimplements refid="classral_1_1io_1_1data__provider_1a92176228bbef65093853e2e2165a6d71">has_next</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>tells us if there are more files in the list of uris to be provided </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.h" line="40" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.cpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classral_1_1io_1_1uri__data__provider_1aaab8f4f12a00b546a4cc01260d9199c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ral::io::uri_data_provider::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <reimplements refid="classral_1_1io_1_1data__provider_1ab762cbdb9fd702a61b48785c84e91536">reset</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resets current_file to 0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.h" line="44" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.cpp" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classral_1_1io_1_1uri__data__provider_1a189c193c14fdabc3dd84dca1385688d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structral_1_1io_1_1data__handle" kindref="compound">data_handle</ref></type>
        <definition>data_handle ral::io::uri_data_provider::get_next</definition>
        <argsstring>(bool open_file=true)</argsstring>
        <name>get_next</name>
        <reimplements refid="classral_1_1io_1_1data__provider_1aa49cde8c92f3bc4e9fcbe2e8f34e7ba3">get_next</reimplements>
        <param>
          <type>bool</type>
          <declname>open_file</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets a randomaccessfile to the uri at file_uris[current_file] and advances current_file by 1 open_file = true will actually open the file and return a std::shared_ptr&lt;arrow::io::RandomAccessFile&gt;. If its false it will return a nullptr </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.h" line="49" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.cpp" bodystart="71" bodyend="241"/>
        <references refid="classral_1_1io_1_1gdf__data__provider_1a6770bc3c6f51365ecd3c7cc16babb7ff" compoundref="GDFDataProvider_8cpp" startline="65" endline="75">ral::io::gdf_data_provider::get_next</references>
      </memberdef>
      <memberdef kind="function" id="classral_1_1io_1_1uri__data__provider_1a53be24f2a445940e82c15b324c7b7c5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; <ref refid="structral_1_1io_1_1data__handle" kindref="compound">data_handle</ref> &gt;</type>
        <definition>std::vector&lt; data_handle &gt; ral::io::uri_data_provider::get_some</definition>
        <argsstring>(std::size_t num_files, bool open_file=true)</argsstring>
        <name>get_some</name>
        <reimplements refid="classral_1_1io_1_1data__provider_1ae65c935f9812ac3321b0c814fa4a5548">get_some</reimplements>
        <param>
          <type>std::size_t</type>
          <declname>num_files</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>open_file</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tries to get up to num_files data_handles. We use this instead of a get_all() because if there are too many files, trying to get too many file handles will cause a crash. Using <ref refid="classral_1_1io_1_1uri__data__provider_1a53be24f2a445940e82c15b324c7b7c5f" kindref="member">get_some()</ref> forces breaking up the process of getting file_handles. open_file = true will actually open the file and return a std::shared_ptr&lt;arrow::io::RandomAccessFile&gt;. If its false it will return a nullptr </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.h" line="57" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.cpp" bodystart="59" bodyend="69"/>
        <references refid="classral_1_1io_1_1gdf__data__provider_1af7ad84e9da11d439efe9328db3531855" compoundref="GDFDataProvider_8cpp" startline="40" endline="40">ral::io::gdf_data_provider::has_next</references>
        <references refid="classral_1_1io_1_1gdf__data__provider_1a6770bc3c6f51365ecd3c7cc16babb7ff" compoundref="GDFDataProvider_8cpp" startline="65" endline="75">ral::io::gdf_data_provider::get_next</references>
      </memberdef>
      <memberdef kind="function" id="classral_1_1io_1_1uri__data__provider_1afb66fcd6bc0ac46a75d195f160f9ec45" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ral::io::uri_data_provider::close_file_handles</definition>
        <argsstring>()</argsstring>
        <name>close_file_handles</name>
        <reimplements refid="classral_1_1io_1_1data__provider_1afa6216bccde854b011ed098e114ba8b3">close_file_handles</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Closes currently open set of file handles maintained by the provider </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.h" line="62" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.cpp" bodystart="246" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classral_1_1io_1_1uri__data__provider_1a89a2e8bd07ce00025d62e877ae56a871" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t ral::io::uri_data_provider::get_num_handles</definition>
        <argsstring>()</argsstring>
        <name>get_num_handles</name>
        <reimplements refid="classral_1_1io_1_1data__provider_1a00ff9cc629a869d7b7e6a67c90056749">get_num_handles</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of data_handles that will be provided. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.h" line="64" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.cpp" bodystart="37" bodyend="39"/>
        <references refid="classral_1_1io_1_1gdf__data__provider_1a4a78cce759b9bee4d09ceee3014644d2" compoundref="GDFDataProvider_8cpp" startline="80" endline="82">ral::io::gdf_data_provider::close_file_handles</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>can generate a series of randomaccessfiles from uris that are provided when it goes out of scope it will close any files it opened this last point is debatable in terms of if this is the desired functionality </para>    </detaileddescription>
    <inheritancegraph>
      <node id="444">
        <label>ral::io::uri_data_provider</label>
        <link refid="classral_1_1io_1_1uri__data__provider"/>
        <childnode refid="445" relation="public-inheritance">
        </childnode>
      </node>
      <node id="445">
        <label>ral::io::data_provider</label>
        <link refid="classral_1_1io_1_1data__provider"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="446">
        <label>ral::io::uri_data_provider</label>
        <link refid="classral_1_1io_1_1uri__data__provider"/>
        <childnode refid="447" relation="public-inheritance">
        </childnode>
      </node>
      <node id="447">
        <label>ral::io::data_provider</label>
        <link refid="classral_1_1io_1_1data__provider"/>
      </node>
    </collaborationgraph>
    <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.h" line="26" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/io/data_provider/UriDataProvider.h" bodystart="26" bodyend="95"/>
    <listofallmembers>
      <member refid="classral_1_1io_1_1uri__data__provider_1a6a1f9ddcfc0337174d2d6e25e21423c0" prot="public" virt="virtual"><scope>ral::io::uri_data_provider</scope><name>clone</name></member>
      <member refid="classral_1_1io_1_1uri__data__provider_1afb66fcd6bc0ac46a75d195f160f9ec45" prot="public" virt="virtual"><scope>ral::io::uri_data_provider</scope><name>close_file_handles</name></member>
      <member refid="classral_1_1io_1_1uri__data__provider_1ab6c4057d31563454de960d231408f5ad" prot="private" virt="non-virtual"><scope>ral::io::uri_data_provider</scope><name>current_file</name></member>
      <member refid="classral_1_1io_1_1uri__data__provider_1a11ff7061ba1c12b3581b8e4a1407e7e2" prot="private" virt="non-virtual"><scope>ral::io::uri_data_provider</scope><name>directory_current_file</name></member>
      <member refid="classral_1_1io_1_1uri__data__provider_1adbbca894e44ee7ba379583592faf8171" prot="private" virt="non-virtual"><scope>ral::io::uri_data_provider</scope><name>directory_uris</name></member>
      <member refid="classral_1_1io_1_1uri__data__provider_1adbcce5d82528dba70a8dfa1a4baf9567" prot="private" virt="non-virtual"><scope>ral::io::uri_data_provider</scope><name>errors</name></member>
      <member refid="classral_1_1io_1_1uri__data__provider_1a1c7b6b70d9365d01c06c590437edbe08" prot="private" virt="non-virtual"><scope>ral::io::uri_data_provider</scope><name>file_uris</name></member>
      <member refid="classral_1_1io_1_1uri__data__provider_1a189c193c14fdabc3dd84dca1385688d0" prot="public" virt="virtual"><scope>ral::io::uri_data_provider</scope><name>get_next</name></member>
      <member refid="classral_1_1io_1_1uri__data__provider_1a89a2e8bd07ce00025d62e877ae56a871" prot="public" virt="virtual"><scope>ral::io::uri_data_provider</scope><name>get_num_handles</name></member>
      <member refid="classral_1_1io_1_1uri__data__provider_1a53be24f2a445940e82c15b324c7b7c5f" prot="public" virt="virtual"><scope>ral::io::uri_data_provider</scope><name>get_some</name></member>
      <member refid="classral_1_1io_1_1uri__data__provider_1a1815b5e9fa0b323b0cf9c0ff932a1c4b" prot="public" virt="virtual"><scope>ral::io::uri_data_provider</scope><name>has_next</name></member>
      <member refid="classral_1_1io_1_1uri__data__provider_1a939251b87c4f26bf900bd07f4f1b1369" prot="private" virt="non-virtual"><scope>ral::io::uri_data_provider</scope><name>ignore_missing_paths</name></member>
      <member refid="classral_1_1io_1_1uri__data__provider_1aa0edd69c2db518efc5b8c82d48626b70" prot="private" virt="non-virtual"><scope>ral::io::uri_data_provider</scope><name>opened_files</name></member>
      <member refid="classral_1_1io_1_1uri__data__provider_1aaab8f4f12a00b546a4cc01260d9199c8" prot="public" virt="virtual"><scope>ral::io::uri_data_provider</scope><name>reset</name></member>
      <member refid="classral_1_1io_1_1uri__data__provider_1a8fae6bcd15526167bff4db8b55983cf5" prot="public" virt="non-virtual"><scope>ral::io::uri_data_provider</scope><name>uri_data_provider</name></member>
      <member refid="classral_1_1io_1_1uri__data__provider_1afe82d9a1af9cc7718bfc5e1168821ebb" prot="public" virt="non-virtual"><scope>ral::io::uri_data_provider</scope><name>uri_data_provider</name></member>
      <member refid="classral_1_1io_1_1uri__data__provider_1abd96f8e320b42046bf7d68887b413f72" prot="private" virt="non-virtual"><scope>ral::io::uri_data_provider</scope><name>uri_values</name></member>
      <member refid="classral_1_1io_1_1uri__data__provider_1a86dfa840b3643e0e7a7c006c0f646c0c" prot="public" virt="virtual"><scope>ral::io::uri_data_provider</scope><name>~uri_data_provider</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
