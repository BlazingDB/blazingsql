<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacecomm_1_1detail" kind="namespace" language="C++">
    <compoundname>comm::detail</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="bufferTransport_8cpp_1ab28928f84da603ccc901dfae405a6bf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; char &gt;</type>
        <definition>std::vector&lt; char &gt; comm::detail::serialize_metadata_and_transports_and_buffer_sizes</definition>
        <argsstring>(const ral::cache::MetadataDictionary &amp;metadata, const std::vector&lt; blazingdb::transport::ColumnTransport &gt; &amp;column_transports, const std::vector&lt; ral::memory::blazing_chunked_column_info &gt; &amp;chunked_column_infos, const std::vector&lt; size_t &gt; buffer_sizes)</argsstring>
        <name>serialize_metadata_and_transports_and_buffer_sizes</name>
        <param>
          <type>const <ref refid="classral_1_1cache_1_1MetadataDictionary" kindref="compound">ral::cache::MetadataDictionary</ref> &amp;</type>
          <declname>metadata</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="structblazingdb_1_1transport_1_1ColumnTransport" kindref="compound">blazingdb::transport::ColumnTransport</ref> &gt; &amp;</type>
          <declname>column_transports</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="structral_1_1memory_1_1blazing__chunked__column__info" kindref="compound">ral::memory::blazing_chunked_column_info</ref> &gt; &amp;</type>
          <declname>chunked_column_infos</declname>
        </param>
        <param>
          <type>const std::vector&lt; size_t &gt;</type>
          <declname>buffer_sizes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/communication/CommunicationInterface/bufferTransport.cpp" line="11" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/communication/CommunicationInterface/bufferTransport.cpp" bodystart="11" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="bufferTransport_8cpp_1a4a4eab7cb88bc66f0543639744b9c8ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="classral_1_1cache_1_1MetadataDictionary" kindref="compound">ral::cache::MetadataDictionary</ref>, std::vector&lt; <ref refid="structblazingdb_1_1transport_1_1ColumnTransport" kindref="compound">blazingdb::transport::ColumnTransport</ref> &gt;, std::vector&lt; <ref refid="structral_1_1memory_1_1blazing__chunked__column__info" kindref="compound">ral::memory::blazing_chunked_column_info</ref> &gt;, std::vector&lt; size_t &gt; &gt;</type>
        <definition>std::tuple&lt; ral::cache::MetadataDictionary, std::vector&lt; blazingdb::transport::ColumnTransport &gt;, std::vector&lt; ral::memory::blazing_chunked_column_info &gt;, std::vector&lt; size_t &gt; &gt; comm::detail::get_metadata_and_transports_and_buffer_sizes_from_bytes</definition>
        <argsstring>(std::vector&lt; char &gt; data)</argsstring>
        <name>get_metadata_and_transports_and_buffer_sizes_from_bytes</name>
        <param>
          <type>std::vector&lt; char &gt;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/communication/CommunicationInterface/bufferTransport.cpp" line="76" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/communication/CommunicationInterface/bufferTransport.cpp" bodystart="76" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="bufferTransport_8hpp_1a20bc35320f8caba006ffd1c7ddef056f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; char &gt;</type>
        <definition>std::vector&lt;char&gt; comm::detail::to_byte_vector</definition>
        <argsstring>(T input)</argsstring>
        <name>to_byte_vector</name>
        <param>
          <type>T</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/communication/CommunicationInterface/bufferTransport.hpp" line="18" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/communication/CommunicationInterface/bufferTransport.hpp" bodystart="18" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="bufferTransport_8hpp_1ab26ede7aa2c808e59a4011644fa8df23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; char &gt;</type>
        <definition>std::vector&lt;char&gt; comm::detail::vector_to_byte_vector</definition>
        <argsstring>(std::vector&lt; T &gt; input)</argsstring>
        <name>vector_to_byte_vector</name>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/communication/CommunicationInterface/bufferTransport.hpp" line="24" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/communication/CommunicationInterface/bufferTransport.hpp" bodystart="24" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="bufferTransport_8hpp_1a3a6dfbc4fa670cc4cccf7a722dc16185" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T comm::detail::from_byte_vector</definition>
        <argsstring>(const char *input)</argsstring>
        <name>from_byte_vector</name>
        <param>
          <type>const char *</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/communication/CommunicationInterface/bufferTransport.hpp" line="30" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/communication/CommunicationInterface/bufferTransport.hpp" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="bufferTransport_8hpp_1ae91d1a57d61a289594eaffef6d1a7575" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt;T&gt; comm::detail::vector_from_byte_vector</definition>
        <argsstring>(const char *input, size_t length)</argsstring>
        <name>vector_from_byte_vector</name>
        <param>
          <type>const char *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/communication/CommunicationInterface/bufferTransport.hpp" line="36" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/communication/CommunicationInterface/bufferTransport.hpp" bodystart="36" bodyend="39"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/communication/CommunicationInterface/bufferTransport.cpp" line="9" column="1"/>
  </compounddef>
</doxygen>
