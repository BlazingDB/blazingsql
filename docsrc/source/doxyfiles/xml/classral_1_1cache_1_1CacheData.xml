<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classral_1_1cache_1_1CacheData" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>ral::cache::CacheData</compoundname>
    <derivedcompoundref refid="classral_1_1cache_1_1CacheDataIO" prot="public" virt="non-virtual">ral::cache::CacheDataIO</derivedcompoundref>
    <derivedcompoundref refid="classral_1_1cache_1_1CacheDataLocalFile" prot="public" virt="non-virtual">ral::cache::CacheDataLocalFile</derivedcompoundref>
    <derivedcompoundref refid="classral_1_1cache_1_1ConcatCacheData" prot="public" virt="non-virtual">ral::cache::ConcatCacheData</derivedcompoundref>
    <derivedcompoundref refid="classral_1_1cache_1_1CPUCacheData" prot="public" virt="non-virtual">ral::cache::CPUCacheData</derivedcompoundref>
    <derivedcompoundref refid="classral_1_1cache_1_1GPUCacheData" prot="public" virt="non-virtual">ral::cache::GPUCacheData</derivedcompoundref>
    <includes refid="CacheData_8h" local="no">CacheData.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classral_1_1cache_1_1CacheData_1acf9d130e22baac61d4689c52e36b9c17" prot="protected" static="no" mutable="no">
        <type>CacheDataType</type>
        <definition>CacheDataType ral::cache::CacheData::cache_type</definition>
        <argsstring></argsstring>
        <name>cache_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The CacheDataType that is used to store the dataframe representation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" line="247" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classral_1_1cache_1_1CacheData_1a7a43a46a362c8fe93a7af81debbeca1b" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; ral::cache::CacheData::col_names</definition>
        <argsstring></argsstring>
        <name>col_names</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A vector storing the names of the columns in the dataframe representation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" line="248" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" bodystart="248" bodyend="-1"/>
        <referencedby refid="classral_1_1cache_1_1ConcatCacheData_1af726fc27fcf1621fff1f399f8b2d3cec" compoundref="CacheData_8cpp" startline="301" endline="320">ral::cache::ConcatCacheData::decache</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classral_1_1cache_1_1CacheData_1aec9a1b3c0fb78cfdb3bd5494bcee2d8f" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; cudf::data_type &gt;</type>
        <definition>std::vector&lt;cudf::data_type&gt; ral::cache::CacheData::schema</definition>
        <argsstring></argsstring>
        <name>schema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A vector storing the cudf::data_type of the columns in the dataframe representation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" line="249" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" bodystart="249" bodyend="-1"/>
        <referencedby refid="classral_1_1cache_1_1ConcatCacheData_1af726fc27fcf1621fff1f399f8b2d3cec" compoundref="CacheData_8cpp" startline="301" endline="320">ral::cache::ConcatCacheData::decache</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classral_1_1cache_1_1CacheData_1a4cdddfb8e552e0e3e91877ae80e5fc9e" prot="protected" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t ral::cache::CacheData::n_rows</definition>
        <argsstring></argsstring>
        <name>n_rows</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stores the number of rows in the dataframe representation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" line="250" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classral_1_1cache_1_1CacheData_1aaeb232ef3aa8c2a3d86e1169ed2e8152" prot="protected" static="no" mutable="no">
        <type><ref refid="classral_1_1cache_1_1MetadataDictionary" kindref="compound">MetadataDictionary</ref></type>
        <definition>MetadataDictionary ral::cache::CacheData::metadata</definition>
        <argsstring></argsstring>
        <name>metadata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The metadata used for routing and planning. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" line="251" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" bodystart="251" bodyend="-1"/>
        <referencedby refid="classral_1_1cache_1_1CPUCacheData_1a0b647a41636c90cd2992a2cc11994af1" compoundref="CacheData_8cpp" startline="110" endline="114">ral::cache::CPUCacheData::CPUCacheData</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classral_1_1cache_1_1CacheData_1a257a4e0a13e894093e8ae37da1612c62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ral::cache::CacheData::CacheData</definition>
        <argsstring>(CacheDataType cache_type, std::vector&lt; std::string &gt; col_names, std::vector&lt; cudf::data_type &gt; schema, size_t n_rows)</argsstring>
        <name>CacheData</name>
        <param>
          <type>CacheDataType</type>
          <declname>cache_type</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>col_names</declname>
        </param>
        <param>
          <type>std::vector&lt; cudf::data_type &gt;</type>
          <declname>schema</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n_rows</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor for <ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref> This is only invoked by the derived classes when constructing. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cache_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The CacheDataType of this cache letting us know where the data is stored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>col_names</parametername>
</parameternamelist>
<parameterdescription>
<para>The names of the columns in the dataframe. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>schema</parametername>
</parameternamelist>
<parameterdescription>
<para>The types of the columns in the dataframe. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_rows</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of rows in the dataframe. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" line="159" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" bodystart="159" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classral_1_1cache_1_1CacheData_1a7967efd36e3cbf3b35b7010f138fcbce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ral::cache::CacheData::CacheData</definition>
        <argsstring>()</argsstring>
        <name>CacheData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" line="164" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" bodystart="164" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classral_1_1cache_1_1CacheData_1a2db8fdd2151babd7a07f4c6e246b710c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::unique_ptr&lt; <ref refid="classral_1_1frame_1_1BlazingTable" kindref="compound">ral::frame::BlazingTable</ref> &gt;</type>
        <definition>virtual std::unique_ptr&lt;ral::frame::BlazingTable&gt; ral::cache::CacheData::decache</definition>
        <argsstring>()=0</argsstring>
        <name>decache</name>
        <reimplementedby refid="classral_1_1cache_1_1GPUCacheData_1a7efe1d821067ba5266df18adb701bf5f">decache</reimplementedby>
        <reimplementedby refid="classral_1_1cache_1_1CPUCacheData_1a03a18d3dfd4fe60dffdd0a9daabfbde2">decache</reimplementedby>
        <reimplementedby refid="classral_1_1cache_1_1CacheDataLocalFile_1a1d34227fbbf671e47119846ee2f2a0af">decache</reimplementedby>
        <reimplementedby refid="classral_1_1cache_1_1CacheDataIO_1a7fb2dceef20a385e31508ac70edfbf58">decache</reimplementedby>
        <reimplementedby refid="classral_1_1cache_1_1ConcatCacheData_1af726fc27fcf1621fff1f399f8b2d3cec">decache</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove the payload from this <ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref>. A pure virtual function. This removes the payload for the <ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref>. After this the <ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref> will almost always go out of scope and be destroyed. <simplesect kind="return"><para>a BlazingTable generated from the source of data for this <ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" line="173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classral_1_1cache_1_1CacheData_1aaad8a726296574845f01f9380dcee40d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t</type>
        <definition>virtual size_t ral::cache::CacheData::sizeInBytes</definition>
        <argsstring>() const =0</argsstring>
        <name>sizeInBytes</name>
        <reimplementedby refid="classral_1_1cache_1_1GPUCacheData_1a4fc8aecb334114f0ef07ce37be0e8900">sizeInBytes</reimplementedby>
        <reimplementedby refid="classral_1_1cache_1_1CPUCacheData_1a83236d09b1d2341059d1a6738839d35c">sizeInBytes</reimplementedby>
        <reimplementedby refid="classral_1_1cache_1_1CacheDataLocalFile_1ab0853eca16df1149f4ac0efbf3faa556">sizeInBytes</reimplementedby>
        <reimplementedby refid="classral_1_1cache_1_1CacheDataIO_1a3364dc1069ceba37e2ffc97e5a4508aa">sizeInBytes</reimplementedby>
        <reimplementedby refid="classral_1_1cache_1_1ConcatCacheData_1a25914d06c36e4a1748dc9479adc5ccd8">sizeInBytes</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>. A pure virtual function. This removes the payload for the <ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref>. After this the <ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref> will almost always go out of scope and be destroyed. <simplesect kind="return"><para>the number of bytes our dataframe occupies in whatever format it is being stored </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" line="181" column="1"/>
        <referencedby refid="classral_1_1batch_1_1PartwiseJoin_1a280aee308eff9e14f239cdce229c4035" compoundref="BatchJoinProcessing_8cpp" startline="429" endline="553">ral::batch::PartwiseJoin::run</referencedby>
      </memberdef>
      <memberdef kind="function" id="classral_1_1cache_1_1CacheData_1a3bb1623a4266ba7c961d325023ff13c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void ral::cache::CacheData::set_names</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;names)=0</argsstring>
        <name>set_names</name>
        <reimplementedby refid="classral_1_1cache_1_1GPUCacheData_1a35d56396384cd4380141d47291d3e55f">set_names</reimplementedby>
        <reimplementedby refid="classral_1_1cache_1_1CPUCacheData_1a3d0444ff9ba0814775499060071a2d1a">set_names</reimplementedby>
        <reimplementedby refid="classral_1_1cache_1_1CacheDataLocalFile_1a49c8d137ef2d0a30ee59025f91725567">set_names</reimplementedby>
        <reimplementedby refid="classral_1_1cache_1_1CacheDataIO_1a9f5ae6134a546813c74a2924f7567080">set_names</reimplementedby>
        <reimplementedby refid="classral_1_1cache_1_1ConcatCacheData_1a02f400f33f88ba3e216f5899fa4f12b8">set_names</reimplementedby>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>names</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the names of the columns. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>names</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector of the column names. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classral_1_1cache_1_1CacheData_1ac66a4910198d677594609b455c4ecde8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual ral::cache::CacheData::~CacheData</definition>
        <argsstring>()</argsstring>
        <name>~CacheData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" line="192" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" bodystart="192" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classral_1_1cache_1_1CacheData_1aa2c8d58823d781cc1f8e6e589d897642" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; ral::cache::CacheData::names</definition>
        <argsstring>() const</argsstring>
        <name>names</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the names of the columns. <simplesect kind="return"><para>a vector of the column names </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" line="198" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" bodystart="198" bodyend="200"/>
        <referencedby refid="classral_1_1cache_1_1CacheDataIO_1a7fb2dceef20a385e31508ac70edfbf58" compoundref="CacheData_8cpp" startline="238" endline="285">ral::cache::CacheDataIO::decache</referencedby>
      </memberdef>
      <memberdef kind="function" id="classral_1_1cache_1_1CacheData_1a747bc7b9113756471ce8a7bce2c46689" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; cudf::data_type &gt;</type>
        <definition>std::vector&lt;cudf::data_type&gt; ral::cache::CacheData::get_schema</definition>
        <argsstring>() const</argsstring>
        <name>get_schema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the cudf::data_type of each column. <simplesect kind="return"><para>a vector of the cudf::data_type of each column. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" line="206" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" bodystart="206" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classral_1_1cache_1_1CacheData_1acddfe8617004fc875fff972ae5b1f616" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t ral::cache::CacheData::num_columns</definition>
        <argsstring>() const</argsstring>
        <name>num_columns</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of columns this <ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref> will generate with decache. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" line="213" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" bodystart="213" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classral_1_1cache_1_1CacheData_1a14a5b9fadf872c12d633e38bb6f9f07d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t ral::cache::CacheData::num_rows</definition>
        <argsstring>() const</argsstring>
        <name>num_rows</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of rows this <ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref> will generate with decache. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" line="220" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" bodystart="220" bodyend="222"/>
        <referencedby refid="classral_1_1batch_1_1PartwiseJoin_1a280aee308eff9e14f239cdce229c4035" compoundref="BatchJoinProcessing_8cpp" startline="429" endline="553">ral::batch::PartwiseJoin::run</referencedby>
        <referencedby refid="classral_1_1cache_1_1CacheDataIO_1a7fb2dceef20a385e31508ac70edfbf58" compoundref="CacheData_8cpp" startline="238" endline="285">ral::cache::CacheDataIO::decache</referencedby>
      </memberdef>
      <memberdef kind="function" id="classral_1_1cache_1_1CacheData_1a6669c7c34305f2099cede2be98433604" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>CacheDataType</type>
        <definition>CacheDataType ral::cache::CacheData::get_type</definition>
        <argsstring>() const</argsstring>
        <name>get_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the type of <ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref> that was used to construct this <ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref> <simplesect kind="return"><para>The CacheDataType that is used to store the dataframe representation. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" line="228" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" bodystart="228" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classral_1_1cache_1_1CacheData_1a7e3fea5c3558948f4c461998f7ef434b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classral_1_1cache_1_1MetadataDictionary" kindref="compound">MetadataDictionary</ref></type>
        <definition>MetadataDictionary ral::cache::CacheData::getMetadata</definition>
        <argsstring>()</argsstring>
        <name>getMetadata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the <ref refid="classral_1_1cache_1_1MetadataDictionary" kindref="compound">MetadataDictionary</ref> <simplesect kind="return"><para>The <ref refid="classral_1_1cache_1_1MetadataDictionary" kindref="compound">MetadataDictionary</ref> which is used in routing and planning. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" line="236" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" bodystart="236" bodyend="238"/>
        <referencedby refid="classral_1_1batch_1_1PartitionSingleNodeKernel_1a5af293b33505bec1e9fb66f9bb9d29af" compoundref="BatchOrderByProcessing_8cpp" startline="43" endline="93">ral::batch::PartitionSingleNodeKernel::run</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classral_1_1cache_1_1CacheData_1af70878c08fae1935cd0a39999cabf6fb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref> &gt;</type>
        <definition>std::unique_ptr&lt; CacheData &gt; ral::cache::CacheData::downgradeCacheData</definition>
        <argsstring>(std::unique_ptr&lt; CacheData &gt; cacheData, std::string id, std::shared_ptr&lt; Context &gt; ctx)</argsstring>
        <name>downgradeCacheData</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref> &gt;</type>
          <declname>cacheData</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>id</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classblazingdb_1_1manager_1_1Context" kindref="compound">Context</ref> &gt;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Utility function which can take a <ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref> and if its a standard GPU cache data, it will downgrade it to CPU or Disk <simplesect kind="return"><para>If the input <ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref> is not of a type that can be downgraded, it will just return the original input, otherwise it will return the downgraded <ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" line="244" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.cpp" bodystart="44" bodyend="106"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Base Class for all <ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref> A <ref refid="classral_1_1cache_1_1CacheData" kindref="compound">CacheData</ref> represents a combination of a schema along with a container for a dataframe. This gives us one type that can be sent around and whose only purpose is to hold data until it is ready to be operated on by calling the decache method. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="95">
        <label>ral::cache::ConcatCacheData</label>
        <link refid="classral_1_1cache_1_1ConcatCacheData"/>
        <childnode refid="92" relation="public-inheritance">
        </childnode>
      </node>
      <node id="94">
        <label>ral::cache::CacheDataLocalFile</label>
        <link refid="classral_1_1cache_1_1CacheDataLocalFile"/>
        <childnode refid="92" relation="public-inheritance">
        </childnode>
      </node>
      <node id="92">
        <label>ral::cache::CacheData</label>
        <link refid="classral_1_1cache_1_1CacheData"/>
      </node>
      <node id="93">
        <label>ral::cache::CacheDataIO</label>
        <link refid="classral_1_1cache_1_1CacheDataIO"/>
        <childnode refid="92" relation="public-inheritance">
        </childnode>
      </node>
      <node id="97">
        <label>ral::cache::GPUCacheData</label>
        <link refid="classral_1_1cache_1_1GPUCacheData"/>
        <childnode refid="92" relation="public-inheritance">
        </childnode>
      </node>
      <node id="96">
        <label>ral::cache::CPUCacheData</label>
        <link refid="classral_1_1cache_1_1CPUCacheData"/>
        <childnode refid="92" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="98">
        <label>ral::cache::CacheData</label>
        <link refid="classral_1_1cache_1_1CacheData"/>
        <childnode refid="99" relation="usage">
          <edgelabel>metadata</edgelabel>
        </childnode>
      </node>
      <node id="99">
        <label>ral::cache::MetadataDictionary</label>
        <link refid="classral_1_1cache_1_1MetadataDictionary"/>
      </node>
    </collaborationgraph>
    <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" line="148" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/CacheData.h" bodystart="148" bodyend="252"/>
    <listofallmembers>
      <member refid="classral_1_1cache_1_1CacheData_1acf9d130e22baac61d4689c52e36b9c17" prot="protected" virt="non-virtual"><scope>ral::cache::CacheData</scope><name>cache_type</name></member>
      <member refid="classral_1_1cache_1_1CacheData_1a257a4e0a13e894093e8ae37da1612c62" prot="public" virt="non-virtual"><scope>ral::cache::CacheData</scope><name>CacheData</name></member>
      <member refid="classral_1_1cache_1_1CacheData_1a7967efd36e3cbf3b35b7010f138fcbce" prot="public" virt="non-virtual"><scope>ral::cache::CacheData</scope><name>CacheData</name></member>
      <member refid="classral_1_1cache_1_1CacheData_1a7a43a46a362c8fe93a7af81debbeca1b" prot="protected" virt="non-virtual"><scope>ral::cache::CacheData</scope><name>col_names</name></member>
      <member refid="classral_1_1cache_1_1CacheData_1a2db8fdd2151babd7a07f4c6e246b710c" prot="public" virt="pure-virtual"><scope>ral::cache::CacheData</scope><name>decache</name></member>
      <member refid="classral_1_1cache_1_1CacheData_1af70878c08fae1935cd0a39999cabf6fb" prot="public" virt="non-virtual"><scope>ral::cache::CacheData</scope><name>downgradeCacheData</name></member>
      <member refid="classral_1_1cache_1_1CacheData_1a747bc7b9113756471ce8a7bce2c46689" prot="public" virt="non-virtual"><scope>ral::cache::CacheData</scope><name>get_schema</name></member>
      <member refid="classral_1_1cache_1_1CacheData_1a6669c7c34305f2099cede2be98433604" prot="public" virt="non-virtual"><scope>ral::cache::CacheData</scope><name>get_type</name></member>
      <member refid="classral_1_1cache_1_1CacheData_1a7e3fea5c3558948f4c461998f7ef434b" prot="public" virt="non-virtual"><scope>ral::cache::CacheData</scope><name>getMetadata</name></member>
      <member refid="classral_1_1cache_1_1CacheData_1aaeb232ef3aa8c2a3d86e1169ed2e8152" prot="protected" virt="non-virtual"><scope>ral::cache::CacheData</scope><name>metadata</name></member>
      <member refid="classral_1_1cache_1_1CacheData_1a4cdddfb8e552e0e3e91877ae80e5fc9e" prot="protected" virt="non-virtual"><scope>ral::cache::CacheData</scope><name>n_rows</name></member>
      <member refid="classral_1_1cache_1_1CacheData_1aa2c8d58823d781cc1f8e6e589d897642" prot="public" virt="non-virtual"><scope>ral::cache::CacheData</scope><name>names</name></member>
      <member refid="classral_1_1cache_1_1CacheData_1acddfe8617004fc875fff972ae5b1f616" prot="public" virt="non-virtual"><scope>ral::cache::CacheData</scope><name>num_columns</name></member>
      <member refid="classral_1_1cache_1_1CacheData_1a14a5b9fadf872c12d633e38bb6f9f07d" prot="public" virt="non-virtual"><scope>ral::cache::CacheData</scope><name>num_rows</name></member>
      <member refid="classral_1_1cache_1_1CacheData_1aec9a1b3c0fb78cfdb3bd5494bcee2d8f" prot="protected" virt="non-virtual"><scope>ral::cache::CacheData</scope><name>schema</name></member>
      <member refid="classral_1_1cache_1_1CacheData_1a3bb1623a4266ba7c961d325023ff13c6" prot="public" virt="pure-virtual"><scope>ral::cache::CacheData</scope><name>set_names</name></member>
      <member refid="classral_1_1cache_1_1CacheData_1aaad8a726296574845f01f9380dcee40d" prot="public" virt="pure-virtual"><scope>ral::cache::CacheData</scope><name>sizeInBytes</name></member>
      <member refid="classral_1_1cache_1_1CacheData_1ac66a4910198d677594609b455c4ecde8" prot="public" virt="virtual"><scope>ral::cache::CacheData</scope><name>~CacheData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
