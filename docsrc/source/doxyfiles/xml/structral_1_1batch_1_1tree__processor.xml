<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structral_1_1batch_1_1tree__processor" kind="struct" language="C++" prot="public">
    <compoundname>ral::batch::tree_processor</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structral_1_1batch_1_1tree__processor_1a38c2010979cc4c09e6ab57e0b8cf9a3b" prot="public" static="no" mutable="no">
        <type><ref refid="structral_1_1batch_1_1node" kindref="compound">node</ref></type>
        <definition>node ral::batch::tree_processor::root</definition>
        <argsstring></argsstring>
        <name>root</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" line="35" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structral_1_1batch_1_1tree__processor_1a2d1624b6ca76bb66d5ce052037498d30" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classblazingdb_1_1manager_1_1Context" kindref="compound">Context</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Context&gt; ral::batch::tree_processor::context</definition>
        <argsstring></argsstring>
        <name>context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" line="36" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structral_1_1batch_1_1tree__processor_1afd6296fcae67c2f0e4e9514204e47e74" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classral_1_1io_1_1data__loader" kindref="compound">ral::io::data_loader</ref> &gt;</type>
        <definition>std::vector&lt;ral::io::data_loader&gt; ral::batch::tree_processor::input_loaders</definition>
        <argsstring></argsstring>
        <name>input_loaders</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" line="37" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structral_1_1batch_1_1tree__processor_1a7632a35857e3fad6693eab43ea07a299" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classral_1_1io_1_1Schema" kindref="compound">ral::io::Schema</ref> &gt;</type>
        <definition>std::vector&lt;ral::io::Schema&gt; ral::batch::tree_processor::schemas</definition>
        <argsstring></argsstring>
        <name>schemas</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" line="38" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structral_1_1batch_1_1tree__processor_1aab2b3310b02c1ebba7006282c3d847cf" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; ral::batch::tree_processor::table_names</definition>
        <argsstring></argsstring>
        <name>table_names</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" line="39" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structral_1_1batch_1_1tree__processor_1a3824095215e25aef4488dc5d99bc8605" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; ral::batch::tree_processor::table_scans</definition>
        <argsstring></argsstring>
        <name>table_scans</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" line="40" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structral_1_1batch_1_1tree__processor_1a347b4fc1d2dae6c27261bbc0d4e28347" prot="public" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool ral::batch::tree_processor::transform_operators_bigger_than_gpu</definition>
        <argsstring></argsstring>
        <name>transform_operators_bigger_than_gpu</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" line="41" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structral_1_1batch_1_1tree__processor_1adc5da4556f8c70a08476a61b9042f9d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ral::batch::tree_processor::tree_processor</definition>
        <argsstring>(node root, std::shared_ptr&lt; Context &gt; context, std::vector&lt; ral::io::data_loader &gt; input_loaders, std::vector&lt; ral::io::Schema &gt; schemas, std::vector&lt; std::string &gt; table_names, std::vector&lt; std::string &gt; table_scans, const bool transform_operators_bigger_than_gpu)</argsstring>
        <name>tree_processor</name>
        <param>
          <type><ref refid="structral_1_1batch_1_1node" kindref="compound">node</ref></type>
          <declname>root</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classblazingdb_1_1manager_1_1Context" kindref="compound">Context</ref> &gt;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classral_1_1io_1_1data__loader" kindref="compound">ral::io::data_loader</ref> &gt;</type>
          <declname>input_loaders</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classral_1_1io_1_1Schema" kindref="compound">ral::io::Schema</ref> &gt;</type>
          <declname>schemas</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>table_names</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>table_scans</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>transform_operators_bigger_than_gpu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" line="43" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" bodystart="43" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="structral_1_1batch_1_1tree__processor_1a380b0ebf92171d2bc12a40bcc465c0fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classral_1_1cache_1_1kernel" kindref="compound">kernel</ref> &gt;</type>
        <definition>std::shared_ptr&lt;kernel&gt; ral::batch::tree_processor::make_kernel</definition>
        <argsstring>(std::size_t kernel_id, std::string expr, std::shared_ptr&lt; ral::cache::graph &gt; query_graph)</argsstring>
        <name>make_kernel</name>
        <param>
          <type>std::size_t</type>
          <declname>kernel_id</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classral_1_1cache_1_1graph" kindref="compound">ral::cache::graph</ref> &gt;</type>
          <declname>query_graph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" line="55" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" bodystart="55" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="structral_1_1batch_1_1tree__processor_1aad6415f756e52d44f91fb2d21f8e3f78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t ral::batch::tree_processor::expr_tree_from_json</definition>
        <argsstring>(std::size_t kernel_id, boost::property_tree::ptree const &amp;p_tree, node *root_ptr, int level, std::shared_ptr&lt; ral::cache::graph &gt; query_graph)</argsstring>
        <name>expr_tree_from_json</name>
        <param>
          <type>std::size_t</type>
          <declname>kernel_id</declname>
        </param>
        <param>
          <type>boost::property_tree::ptree const &amp;</type>
          <declname>p_tree</declname>
        </param>
        <param>
          <type><ref refid="structral_1_1batch_1_1node" kindref="compound">node</ref> *</type>
          <declname>root_ptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classral_1_1cache_1_1graph" kindref="compound">ral::cache::graph</ref> &gt;</type>
          <declname>query_graph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" line="124" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" bodystart="124" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="structral_1_1batch_1_1tree__processor_1a1ef5919766ba268b525d228218b6865f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boost::property_tree::ptree</type>
        <definition>boost::property_tree::ptree ral::batch::tree_processor::create_array_tree</definition>
        <argsstring>(boost::property_tree::ptree child)</argsstring>
        <name>create_array_tree</name>
        <param>
          <type>boost::property_tree::ptree</type>
          <declname>child</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" line="138" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" bodystart="138" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="structral_1_1batch_1_1tree__processor_1a99c4e9e369c38f1a0a10c1b51a2d0353" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ral::batch::tree_processor::transform_json_tree</definition>
        <argsstring>(boost::property_tree::ptree &amp;p_tree, bool first_windowed_call=true)</argsstring>
        <name>transform_json_tree</name>
        <param>
          <type>boost::property_tree::ptree &amp;</type>
          <declname>p_tree</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>first_windowed_call</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" line="144" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" bodystart="144" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="structral_1_1batch_1_1tree__processor_1a1e6fd084fd75a1f9ff90c248fd54558f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string ral::batch::tree_processor::to_string</definition>
        <argsstring>()</argsstring>
        <name>to_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" line="323" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" bodystart="323" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="structral_1_1batch_1_1tree__processor_1aafdf123aeee84d5d0b3d6d7be4c0f341" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string ral::batch::tree_processor::to_string</definition>
        <argsstring>(node *p_tree, int level)</argsstring>
        <name>to_string</name>
        <param>
          <type><ref refid="structral_1_1batch_1_1node" kindref="compound">node</ref> *</type>
          <declname>p_tree</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" line="327" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" bodystart="327" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="structral_1_1batch_1_1tree__processor_1a7e8b1c6d1e558b7df3b63e01174d60dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; std::shared_ptr&lt; <ref refid="classral_1_1cache_1_1graph" kindref="compound">ral::cache::graph</ref> &gt;, std::size_t &gt;</type>
        <definition>std::tuple&lt;std::shared_ptr&lt;ral::cache::graph&gt;,std::size_t&gt; ral::batch::tree_processor::build_batch_graph</definition>
        <argsstring>(std::string json)</argsstring>
        <name>build_batch_graph</name>
        <param>
          <type>std::string</type>
          <declname>json</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" line="344" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" bodystart="344" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="structral_1_1batch_1_1tree__processor_1a9f0f7e5089826076cb1bdfa30083ddcd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ral::batch::tree_processor::visit</definition>
        <argsstring>(ral::cache::graph &amp;query_graph, node *parent, std::vector&lt; std::shared_ptr&lt; node &gt;&gt; &amp;children)</argsstring>
        <name>visit</name>
        <param>
          <type><ref refid="classral_1_1cache_1_1graph" kindref="compound">ral::cache::graph</ref> &amp;</type>
          <declname>query_graph</declname>
        </param>
        <param>
          <type><ref refid="structral_1_1batch_1_1node" kindref="compound">node</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>std::vector&lt; std::shared_ptr&lt; <ref refid="structral_1_1batch_1_1node" kindref="compound">node</ref> &gt;&gt; &amp;</type>
          <declname>children</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" line="369" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" bodystart="369" bodyend="461"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="421">
        <label>ral::batch::tree_processor</label>
        <link refid="structral_1_1batch_1_1tree__processor"/>
        <childnode refid="422" relation="usage">
          <edgelabel>root</edgelabel>
        </childnode>
      </node>
      <node id="422">
        <label>ral::batch::node</label>
        <link refid="structral_1_1batch_1_1node"/>
      </node>
    </collaborationgraph>
    <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" line="33" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/PhysicalPlanGenerator.h" bodystart="33" bodyend="462"/>
    <listofallmembers>
      <member refid="structral_1_1batch_1_1tree__processor_1a7e8b1c6d1e558b7df3b63e01174d60dc" prot="public" virt="non-virtual"><scope>ral::batch::tree_processor</scope><name>build_batch_graph</name></member>
      <member refid="structral_1_1batch_1_1tree__processor_1a2d1624b6ca76bb66d5ce052037498d30" prot="public" virt="non-virtual"><scope>ral::batch::tree_processor</scope><name>context</name></member>
      <member refid="structral_1_1batch_1_1tree__processor_1a1ef5919766ba268b525d228218b6865f" prot="public" virt="non-virtual"><scope>ral::batch::tree_processor</scope><name>create_array_tree</name></member>
      <member refid="structral_1_1batch_1_1tree__processor_1aad6415f756e52d44f91fb2d21f8e3f78" prot="public" virt="non-virtual"><scope>ral::batch::tree_processor</scope><name>expr_tree_from_json</name></member>
      <member refid="structral_1_1batch_1_1tree__processor_1afd6296fcae67c2f0e4e9514204e47e74" prot="public" virt="non-virtual"><scope>ral::batch::tree_processor</scope><name>input_loaders</name></member>
      <member refid="structral_1_1batch_1_1tree__processor_1a380b0ebf92171d2bc12a40bcc465c0fc" prot="public" virt="non-virtual"><scope>ral::batch::tree_processor</scope><name>make_kernel</name></member>
      <member refid="structral_1_1batch_1_1tree__processor_1a38c2010979cc4c09e6ab57e0b8cf9a3b" prot="public" virt="non-virtual"><scope>ral::batch::tree_processor</scope><name>root</name></member>
      <member refid="structral_1_1batch_1_1tree__processor_1a7632a35857e3fad6693eab43ea07a299" prot="public" virt="non-virtual"><scope>ral::batch::tree_processor</scope><name>schemas</name></member>
      <member refid="structral_1_1batch_1_1tree__processor_1aab2b3310b02c1ebba7006282c3d847cf" prot="public" virt="non-virtual"><scope>ral::batch::tree_processor</scope><name>table_names</name></member>
      <member refid="structral_1_1batch_1_1tree__processor_1a3824095215e25aef4488dc5d99bc8605" prot="public" virt="non-virtual"><scope>ral::batch::tree_processor</scope><name>table_scans</name></member>
      <member refid="structral_1_1batch_1_1tree__processor_1a1e6fd084fd75a1f9ff90c248fd54558f" prot="public" virt="non-virtual"><scope>ral::batch::tree_processor</scope><name>to_string</name></member>
      <member refid="structral_1_1batch_1_1tree__processor_1aafdf123aeee84d5d0b3d6d7be4c0f341" prot="public" virt="non-virtual"><scope>ral::batch::tree_processor</scope><name>to_string</name></member>
      <member refid="structral_1_1batch_1_1tree__processor_1a99c4e9e369c38f1a0a10c1b51a2d0353" prot="public" virt="non-virtual"><scope>ral::batch::tree_processor</scope><name>transform_json_tree</name></member>
      <member refid="structral_1_1batch_1_1tree__processor_1a347b4fc1d2dae6c27261bbc0d4e28347" prot="public" virt="non-virtual"><scope>ral::batch::tree_processor</scope><name>transform_operators_bigger_than_gpu</name></member>
      <member refid="structral_1_1batch_1_1tree__processor_1adc5da4556f8c70a08476a61b9042f9d9" prot="public" virt="non-virtual"><scope>ral::batch::tree_processor</scope><name>tree_processor</name></member>
      <member refid="structral_1_1batch_1_1tree__processor_1a9f0f7e5089826076cb1bdfa30083ddcd" prot="public" virt="non-virtual"><scope>ral::batch::tree_processor</scope><name>visit</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
