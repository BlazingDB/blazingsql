<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="BatchAggregationProcessing_8cpp" kind="file" language="C++">
    <compoundname>BatchAggregationProcessing.cpp</compoundname>
    <includes refid="BatchAggregationProcessing_8h" local="yes">BatchAggregationProcessing.h</includes>
    <includes refid="executor_8h" local="yes">taskflow/executor.h</includes>
    <includes refid="CommonOperations_8h" local="yes">utilities/CommonOperations.h</includes>
    <includes local="no">cudf/partitioning.hpp</includes>
    <incdepgraph>
      <node id="2241">
        <label>atomic</label>
      </node>
      <node id="2282">
        <label>config/GPUManager.cuh</label>
      </node>
      <node id="2277">
        <label>rmm/mr/device/managed_memory_resource.hpp</label>
      </node>
      <node id="2318">
        <label>functional</label>
      </node>
      <node id="2321">
        <label>queue</label>
      </node>
      <node id="2240">
        <label>CacheMachine.h</label>
        <link refid="CacheMachine_8h_source"/>
        <childnode refid="2241" relation="include">
        </childnode>
        <childnode refid="2242" relation="include">
        </childnode>
        <childnode refid="2243" relation="include">
        </childnode>
        <childnode refid="2244" relation="include">
        </childnode>
        <childnode refid="2239" relation="include">
        </childnode>
        <childnode refid="2245" relation="include">
        </childnode>
        <childnode refid="2246" relation="include">
        </childnode>
        <childnode refid="2247" relation="include">
        </childnode>
        <childnode refid="2248" relation="include">
        </childnode>
        <childnode refid="2249" relation="include">
        </childnode>
        <childnode refid="2250" relation="include">
        </childnode>
        <childnode refid="2254" relation="include">
        </childnode>
        <childnode refid="2256" relation="include">
        </childnode>
        <childnode refid="2267" relation="include">
        </childnode>
        <childnode refid="2269" relation="include">
        </childnode>
        <childnode refid="2285" relation="include">
        </childnode>
        <childnode refid="2253" relation="include">
        </childnode>
        <childnode refid="2286" relation="include">
        </childnode>
        <childnode refid="2296" relation="include">
        </childnode>
        <childnode refid="2299" relation="include">
        </childnode>
        <childnode refid="2308" relation="include">
        </childnode>
        <childnode refid="2309" relation="include">
        </childnode>
      </node>
      <node id="2256">
        <label>execution_graph/logic_controllers/LogicPrimitives.h</label>
        <link refid="LogicPrimitives_8h_source"/>
        <childnode refid="2257" relation="include">
        </childnode>
        <childnode refid="2258" relation="include">
        </childnode>
        <childnode refid="2243" relation="include">
        </childnode>
        <childnode refid="2245" relation="include">
        </childnode>
        <childnode refid="2246" relation="include">
        </childnode>
        <childnode refid="2259" relation="include">
        </childnode>
        <childnode refid="2261" relation="include">
        </childnode>
      </node>
      <node id="2294">
        <label>cudf/scalar/scalar_device_view.cuh</label>
      </node>
      <node id="2299">
        <label>communication/messages/GPUComponentMessage.h</label>
        <link refid="GPUComponentMessage_8h_source"/>
        <childnode refid="2248" relation="include">
        </childnode>
        <childnode refid="2287" relation="include">
        </childnode>
        <childnode refid="2288" relation="include">
        </childnode>
        <childnode refid="2289" relation="include">
        </childnode>
        <childnode refid="2262" relation="include">
        </childnode>
        <childnode refid="2268" relation="include">
        </childnode>
        <childnode refid="2300" relation="include">
        </childnode>
        <childnode refid="2247" relation="include">
        </childnode>
        <childnode refid="2243" relation="include">
        </childnode>
        <childnode refid="2239" relation="include">
        </childnode>
        <childnode refid="2301" relation="include">
        </childnode>
        <childnode refid="2302" relation="include">
        </childnode>
        <childnode refid="2303" relation="include">
        </childnode>
        <childnode refid="2304" relation="include">
        </childnode>
        <childnode refid="2260" relation="include">
        </childnode>
        <childnode refid="2305" relation="include">
        </childnode>
        <childnode refid="2306" relation="include">
        </childnode>
        <childnode refid="2249" relation="include">
        </childnode>
        <childnode refid="2307" relation="include">
        </childnode>
        <childnode refid="2256" relation="include">
        </childnode>
        <childnode refid="2261" relation="include">
        </childnode>
      </node>
      <node id="2283">
        <label>sys/sysinfo.h</label>
      </node>
      <node id="2292">
        <label>cudf/scalar/scalar_factories.hpp</label>
      </node>
      <node id="2312">
        <label>kernel_type.h</label>
        <link refid="kernel__type_8h_source"/>
        <childnode refid="2245" relation="include">
        </childnode>
      </node>
      <node id="2263">
        <label>cstdint</label>
      </node>
      <node id="2275">
        <label>rmm/mr/device/owning_wrapper.hpp</label>
      </node>
      <node id="2280">
        <label>rmm/mr/device/logging_resource_adaptor.hpp</label>
      </node>
      <node id="2259">
        <label>execution_graph/logic_controllers/BlazingColumn.h</label>
        <link refid="BlazingColumn_8h_source"/>
        <childnode refid="2260" relation="include">
        </childnode>
        <childnode refid="2257" relation="include">
        </childnode>
        <childnode refid="2258" relation="include">
        </childnode>
        <childnode refid="2243" relation="include">
        </childnode>
        <childnode refid="2245" relation="include">
        </childnode>
        <childnode refid="2246" relation="include">
        </childnode>
      </node>
      <node id="2268">
        <label>transport/Node.h</label>
        <link refid="Node_8h_source"/>
        <childnode refid="2243" relation="include">
        </childnode>
        <childnode refid="2245" relation="include">
        </childnode>
      </node>
      <node id="2333">
        <label>cudf/partitioning.hpp</label>
      </node>
      <node id="2303">
        <label>cudf/copying.hpp</label>
      </node>
      <node id="2250">
        <label>error.hpp</label>
        <link refid="error_8hpp_source"/>
        <childnode refid="2251" relation="include">
        </childnode>
        <childnode refid="2246" relation="include">
        </childnode>
        <childnode refid="2252" relation="include">
        </childnode>
        <childnode refid="2253" relation="include">
        </childnode>
      </node>
      <node id="2270">
        <label>cassert</label>
      </node>
      <node id="2276">
        <label>rmm/mr/device/cuda_memory_resource.hpp</label>
      </node>
      <node id="2327">
        <label>operators/GroupBy.h</label>
        <link refid="GroupBy_8h_source"/>
        <childnode refid="2267" relation="include">
        </childnode>
        <childnode refid="2245" relation="include">
        </childnode>
        <childnode refid="2246" relation="include">
        </childnode>
        <childnode refid="2302" relation="include">
        </childnode>
        <childnode refid="2256" relation="include">
        </childnode>
        <childnode refid="2328" relation="include">
        </childnode>
        <childnode refid="2329" relation="include">
        </childnode>
        <childnode refid="2330" relation="include">
        </childnode>
        <childnode refid="2260" relation="include">
        </childnode>
      </node>
      <node id="2279">
        <label>rmm/mr/device/arena_memory_resource.hpp</label>
      </node>
      <node id="2301">
        <label>numeric</label>
      </node>
      <node id="2273">
        <label>rmm/cuda_stream_view.hpp</label>
      </node>
      <node id="2245">
        <label>string</label>
      </node>
      <node id="2238">
        <label>BatchProcessing.h</label>
        <link refid="BatchProcessing_8h_source"/>
        <childnode refid="2239" relation="include">
        </childnode>
        <childnode refid="2240" relation="include">
        </childnode>
        <childnode refid="2310" relation="include">
        </childnode>
        <childnode refid="2297" relation="include">
        </childnode>
        <childnode refid="2322" relation="include">
        </childnode>
        <childnode refid="2311" relation="include">
        </childnode>
        <childnode refid="2256" relation="include">
        </childnode>
      </node>
      <node id="2328">
        <label>cudf/aggregation.hpp</label>
      </node>
      <node id="2247">
        <label>map</label>
      </node>
      <node id="2305">
        <label>cudf/null_mask.hpp</label>
      </node>
      <node id="2314">
        <label>kpair.h</label>
        <link refid="kpair_8h_source"/>
        <childnode refid="2313" relation="include">
        </childnode>
        <childnode refid="2311" relation="include">
        </childnode>
      </node>
      <node id="2325">
        <label>distribution/primitives.h</label>
        <link refid="primitives_8h_source"/>
        <childnode refid="2267" relation="include">
        </childnode>
        <childnode refid="2326" relation="include">
        </childnode>
        <childnode refid="2246" relation="include">
        </childnode>
        <childnode refid="2256" relation="include">
        </childnode>
      </node>
      <node id="2288">
        <label>spdlog/sinks/basic_file_sink.h</label>
      </node>
      <node id="2261">
        <label>BlazingHostTable.h</label>
        <link refid="BlazingHostTable_8h_source"/>
        <childnode refid="2246" relation="include">
        </childnode>
        <childnode refid="2245" relation="include">
        </childnode>
        <childnode refid="2243" relation="include">
        </childnode>
        <childnode refid="2249" relation="include">
        </childnode>
        <childnode refid="2262" relation="include">
        </childnode>
        <childnode refid="2264" relation="include">
        </childnode>
        <childnode refid="2256" relation="include">
        </childnode>
      </node>
      <node id="2253">
        <label>exception</label>
      </node>
      <node id="2309">
        <label>WaitingQueue.h</label>
        <link refid="WaitingQueue_8h_source"/>
        <childnode refid="2241" relation="include">
        </childnode>
        <childnode refid="2242" relation="include">
        </childnode>
        <childnode refid="2243" relation="include">
        </childnode>
        <childnode refid="2244" relation="include">
        </childnode>
        <childnode refid="2239" relation="include">
        </childnode>
        <childnode refid="2245" relation="include">
        </childnode>
        <childnode refid="2246" relation="include">
        </childnode>
        <childnode refid="2247" relation="include">
        </childnode>
        <childnode refid="2248" relation="include">
        </childnode>
        <childnode refid="2253" relation="include">
        </childnode>
      </node>
      <node id="2267">
        <label>execution_graph/Context.h</label>
        <link refid="Context_8h_source"/>
        <childnode refid="2246" relation="include">
        </childnode>
        <childnode refid="2247" relation="include">
        </childnode>
        <childnode refid="2239" relation="include">
        </childnode>
        <childnode refid="2268" relation="include">
        </childnode>
      </node>
      <node id="2308">
        <label>CacheData.h</label>
        <link refid="CacheData_8h_source"/>
        <childnode refid="2241" relation="include">
        </childnode>
        <childnode refid="2242" relation="include">
        </childnode>
        <childnode refid="2243" relation="include">
        </childnode>
        <childnode refid="2244" relation="include">
        </childnode>
        <childnode refid="2239" relation="include">
        </childnode>
        <childnode refid="2245" relation="include">
        </childnode>
        <childnode refid="2246" relation="include">
        </childnode>
        <childnode refid="2247" relation="include">
        </childnode>
        <childnode refid="2248" relation="include">
        </childnode>
        <childnode refid="2249" relation="include">
        </childnode>
        <childnode refid="2250" relation="include">
        </childnode>
        <childnode refid="2254" relation="include">
        </childnode>
        <childnode refid="2256" relation="include">
        </childnode>
        <childnode refid="2267" relation="include">
        </childnode>
        <childnode refid="2269" relation="include">
        </childnode>
        <childnode refid="2285" relation="include">
        </childnode>
        <childnode refid="2253" relation="include">
        </childnode>
        <childnode refid="2286" relation="include">
        </childnode>
        <childnode refid="2296" relation="include">
        </childnode>
        <childnode refid="2299" relation="include">
        </childnode>
      </node>
      <node id="2286">
        <label>io/data_provider/DataProvider.h</label>
        <link refid="DataProvider_8h_source"/>
        <childnode refid="2248" relation="include">
        </childnode>
        <childnode refid="2287" relation="include">
        </childnode>
        <childnode refid="2288" relation="include">
        </childnode>
        <childnode refid="2289" relation="include">
        </childnode>
        <childnode refid="2290" relation="include">
        </childnode>
        <childnode refid="2291" relation="include">
        </childnode>
        <childnode refid="2292" relation="include">
        </childnode>
        <childnode refid="2249" relation="include">
        </childnode>
        <childnode refid="2293" relation="include">
        </childnode>
        <childnode refid="2294" relation="include">
        </childnode>
        <childnode refid="2247" relation="include">
        </childnode>
        <childnode refid="2243" relation="include">
        </childnode>
        <childnode refid="2246" relation="include">
        </childnode>
        <childnode refid="2295" relation="include">
        </childnode>
        <childnode refid="2256" relation="include">
        </childnode>
      </node>
      <node id="2332">
        <label>utilities/CommonOperations.h</label>
        <link refid="CommonOperations_8h_source"/>
        <childnode refid="2245" relation="include">
        </childnode>
        <childnode refid="2246" relation="include">
        </childnode>
        <childnode refid="2256" relation="include">
        </childnode>
        <childnode refid="2306" relation="include">
        </childnode>
      </node>
      <node id="2307">
        <label>cudf/strings/strings_column_view.hpp</label>
      </node>
      <node id="2248">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="2258">
        <label>cudf/table/table_view.hpp</label>
      </node>
      <node id="2317">
        <label>utilities/ctpl_stl.h</label>
        <link refid="ctpl__stl_8h_source"/>
        <childnode refid="2318" relation="include">
        </childnode>
        <childnode refid="2319" relation="include">
        </childnode>
        <childnode refid="2241" relation="include">
        </childnode>
        <childnode refid="2246" relation="include">
        </childnode>
        <childnode refid="2243" relation="include">
        </childnode>
        <childnode refid="2253" relation="include">
        </childnode>
        <childnode refid="2320" relation="include">
        </childnode>
        <childnode refid="2239" relation="include">
        </childnode>
        <childnode refid="2321" relation="include">
        </childnode>
      </node>
      <node id="2297">
        <label>../Schema.h</label>
        <link refid="Schema_8h_source"/>
        <childnode refid="2245" relation="include">
        </childnode>
        <childnode refid="2246" relation="include">
        </childnode>
        <childnode refid="2249" relation="include">
        </childnode>
        <childnode refid="2256" relation="include">
        </childnode>
      </node>
      <node id="2330">
        <label>cudf/detail/aggregation/aggregation.hpp</label>
      </node>
      <node id="2290">
        <label>arrow/io/interfaces.h</label>
      </node>
      <node id="2244">
        <label>condition_variable</label>
      </node>
      <node id="2316">
        <label>ExceptionHandling/BlazingThread.h</label>
      </node>
      <node id="2300">
        <label>communication/messages/MessageUtil.cuh</label>
      </node>
      <node id="2284">
        <label>sys/statvfs.h</label>
      </node>
      <node id="2293">
        <label>cudf/utilities/type_dispatcher.hpp</label>
      </node>
      <node id="2302">
        <label>tuple</label>
      </node>
      <node id="2320">
        <label>future</label>
      </node>
      <node id="2287">
        <label>spdlog/async.h</label>
      </node>
      <node id="2311">
        <label>kernel.h</label>
        <link refid="kernel_8h_source"/>
        <childnode refid="2312" relation="include">
        </childnode>
        <childnode refid="2313" relation="include">
        </childnode>
        <childnode refid="2310" relation="include">
        </childnode>
      </node>
      <node id="2265">
        <label>stack</label>
      </node>
      <node id="2246">
        <label>vector</label>
      </node>
      <node id="2262">
        <label>transport/ColumnTransport.h</label>
        <link refid="ColumnTransport_8h_source"/>
        <childnode refid="2263" relation="include">
        </childnode>
      </node>
      <node id="2306">
        <label>cudf/column/column_factories.hpp</label>
      </node>
      <node id="2304">
        <label>cudf/column/column.hpp</label>
      </node>
      <node id="2266">
        <label>ucp/api/ucp.h</label>
      </node>
      <node id="2289">
        <label>spdlog/sinks/stdout_color_sinks.h</label>
      </node>
      <node id="2264">
        <label>bmr/BufferProvider.h</label>
        <link refid="BufferProvider_8h_source"/>
        <childnode refid="2246" relation="include">
        </childnode>
        <childnode refid="2245" relation="include">
        </childnode>
        <childnode refid="2265" relation="include">
        </childnode>
        <childnode refid="2239" relation="include">
        </childnode>
        <childnode refid="2243" relation="include">
        </childnode>
        <childnode refid="2266" relation="include">
        </childnode>
      </node>
      <node id="2296">
        <label>io/data_parser/DataParser.h</label>
        <link refid="DataParser_8h_source"/>
        <childnode refid="2297" relation="include">
        </childnode>
        <childnode refid="2298" relation="include">
        </childnode>
        <childnode refid="2286" relation="include">
        </childnode>
        <childnode refid="2256" relation="include">
        </childnode>
        <childnode refid="2290" relation="include">
        </childnode>
        <childnode refid="2243" relation="include">
        </childnode>
        <childnode refid="2246" relation="include">
        </childnode>
      </node>
      <node id="2249">
        <label>cudf/types.hpp</label>
      </node>
      <node id="2315">
        <label>bmr/MemoryMonitor.h</label>
        <link refid="MemoryMonitor_8h_source"/>
        <childnode refid="2244" relation="include">
        </childnode>
        <childnode refid="2239" relation="include">
        </childnode>
        <childnode refid="2255" relation="include">
        </childnode>
        <childnode refid="2316" relation="include">
        </childnode>
        <childnode refid="2247" relation="include">
        </childnode>
      </node>
      <node id="2281">
        <label>rmm/mr/device/per_device_resource.hpp</label>
      </node>
      <node id="2298">
        <label>../DataType.h</label>
        <link refid="DataType_8h_source"/>
      </node>
      <node id="2285">
        <label>communication/CommunicationData.h</label>
        <link refid="CommunicationData_8h_source"/>
        <childnode refid="2266" relation="include">
        </childnode>
        <childnode refid="2268" relation="include">
        </childnode>
        <childnode refid="2243" relation="include">
        </childnode>
        <childnode refid="2245" relation="include">
        </childnode>
        <childnode refid="2247" relation="include">
        </childnode>
      </node>
      <node id="2310">
        <label>taskflow/graph.h</label>
        <link refid="graph_8h_source"/>
        <childnode refid="2311" relation="include">
        </childnode>
        <childnode refid="2314" relation="include">
        </childnode>
        <childnode refid="2240" relation="include">
        </childnode>
        <childnode refid="2315" relation="include">
        </childnode>
        <childnode refid="2317" relation="include">
        </childnode>
      </node>
      <node id="2313">
        <label>port.h</label>
        <link refid="port_8h_source"/>
        <childnode refid="2246" relation="include">
        </childnode>
        <childnode refid="2243" relation="include">
        </childnode>
        <childnode refid="2245" relation="include">
        </childnode>
        <childnode refid="2240" relation="include">
        </childnode>
      </node>
      <node id="2251">
        <label>iostream</label>
      </node>
      <node id="2260">
        <label>cudf/column/column_view.hpp</label>
      </node>
      <node id="2242">
        <label>deque</label>
      </node>
      <node id="2239">
        <label>mutex</label>
      </node>
      <node id="2272">
        <label>cuda_runtime_api.h</label>
      </node>
      <node id="2255">
        <label>chrono</label>
      </node>
      <node id="2295">
        <label>blazingdb/io/FileSystem/Uri.h</label>
      </node>
      <node id="2254">
        <label>CodeTimer.h</label>
        <link refid="CodeTimer_8h_source"/>
        <childnode refid="2255" relation="include">
        </childnode>
      </node>
      <node id="2274">
        <label>rmm/mr/device/device_memory_resource.hpp</label>
      </node>
      <node id="2331">
        <label>taskflow/executor.h</label>
        <link refid="executor_8h_source"/>
        <childnode refid="2311" relation="include">
        </childnode>
        <childnode refid="2240" relation="include">
        </childnode>
        <childnode refid="2316" relation="include">
        </childnode>
        <childnode refid="2317" relation="include">
        </childnode>
      </node>
      <node id="2319">
        <label>thread</label>
      </node>
      <node id="2269">
        <label>bmr/BlazingMemoryResource.h</label>
        <link refid="BlazingMemoryResource_8h_source"/>
        <childnode refid="2270" relation="include">
        </childnode>
        <childnode refid="2241" relation="include">
        </childnode>
        <childnode refid="2271" relation="include">
        </childnode>
        <childnode refid="2272" relation="include">
        </childnode>
        <childnode refid="2273" relation="include">
        </childnode>
        <childnode refid="2274" relation="include">
        </childnode>
        <childnode refid="2275" relation="include">
        </childnode>
        <childnode refid="2276" relation="include">
        </childnode>
        <childnode refid="2277" relation="include">
        </childnode>
        <childnode refid="2278" relation="include">
        </childnode>
        <childnode refid="2279" relation="include">
        </childnode>
        <childnode refid="2280" relation="include">
        </childnode>
        <childnode refid="2281" relation="include">
        </childnode>
        <childnode refid="2282" relation="include">
        </childnode>
        <childnode refid="2283" relation="include">
        </childnode>
        <childnode refid="2284" relation="include">
        </childnode>
      </node>
      <node id="2324">
        <label>taskflow/distributing_kernel.h</label>
        <link refid="distributing__kernel_8h_source"/>
        <childnode refid="2241" relation="include">
        </childnode>
        <childnode refid="2247" relation="include">
        </childnode>
        <childnode refid="2246" relation="include">
        </childnode>
        <childnode refid="2325" relation="include">
        </childnode>
        <childnode refid="2240" relation="include">
        </childnode>
        <childnode refid="2267" relation="include">
        </childnode>
        <childnode refid="2311" relation="include">
        </childnode>
      </node>
      <node id="2237">
        <label>BatchAggregationProcessing.h</label>
        <link refid="BatchAggregationProcessing_8h_source"/>
        <childnode refid="2238" relation="include">
        </childnode>
        <childnode refid="2324" relation="include">
        </childnode>
        <childnode refid="2327" relation="include">
        </childnode>
      </node>
      <node id="2278">
        <label>rmm/mr/device/pool_memory_resource.hpp</label>
      </node>
      <node id="2271">
        <label>set</label>
      </node>
      <node id="2257">
        <label>cudf/table/table.hpp</label>
      </node>
      <node id="2236">
        <label>/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/BatchAggregationProcessing.cpp</label>
        <link refid="BatchAggregationProcessing_8cpp"/>
        <childnode refid="2237" relation="include">
        </childnode>
        <childnode refid="2331" relation="include">
        </childnode>
        <childnode refid="2332" relation="include">
        </childnode>
        <childnode refid="2333" relation="include">
        </childnode>
      </node>
      <node id="2326">
        <label>communication/factory/MessageFactory.h</label>
        <link refid="MessageFactory_8h_source"/>
      </node>
      <node id="2322">
        <label>io/DataLoader.h</label>
        <link refid="DataLoader_8h_source"/>
        <childnode refid="2323" relation="include">
        </childnode>
        <childnode refid="2296" relation="include">
        </childnode>
        <childnode refid="2286" relation="include">
        </childnode>
        <childnode refid="2290" relation="include">
        </childnode>
        <childnode refid="2267" relation="include">
        </childnode>
        <childnode refid="2246" relation="include">
        </childnode>
        <childnode refid="2243" relation="include">
        </childnode>
      </node>
      <node id="2252">
        <label>cudf/utilities/error.hpp</label>
      </node>
      <node id="2329">
        <label>cudf/groupby.hpp</label>
      </node>
      <node id="2291">
        <label>cudf/scalar/scalar.hpp</label>
      </node>
      <node id="2243">
        <label>memory</label>
      </node>
      <node id="2323">
        <label>FileSystem/Uri.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceral">ral</innernamespace>
    <innernamespace refid="namespaceral_1_1batch">ral::batch</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;BatchAggregationProcessing.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;taskflow/executor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;utilities/CommonOperations.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cudf/partitioning.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceral" kindref="compound">ral</ref><sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">batch<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BEGIN<sp/>ComputeAggregateKernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">ComputeAggregateKernel::ComputeAggregateKernel(std::size_t<sp/>kernel_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>queryString,<sp/>std::shared_ptr&lt;Context&gt;<sp/>context,<sp/>std::shared_ptr&lt;ral::cache::graph&gt;<sp/>query_graph)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>kernel{kernel_id,<sp/>queryString,<sp/>context,<sp/>kernel_type::ComputeAggregateKernel}<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;query_graph<sp/>=<sp/>query_graph;</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><ref refid="structral_1_1execution_1_1task__result" kindref="compound">ral::execution::task_result</ref><sp/>ComputeAggregateKernel::do_process(std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>inputs,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ral::cache::CacheMachine&gt;<sp/>output,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>cudaStream_t<sp/></highlight><highlight class="comment">/*stream*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::string&gt;&amp;<sp/></highlight><highlight class="comment">/*args*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>input<sp/>=<sp/>inputs[0];</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>columns;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;aggregation_types.size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>columns<sp/>=<sp/>ral::operators::compute_groupby_without_aggregations(</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input-&gt;toBlazingTableView(),<sp/>this-&gt;group_column_indices);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;group_column_indices.size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>columns<sp/>=<sp/>ral::operators::compute_aggregations_without_groupby(</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input-&gt;toBlazingTableView(),<sp/>aggregation_input_expressions,<sp/>this-&gt;aggregation_types,<sp/>aggregation_column_assigned_aliases);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>columns<sp/>=<sp/>ral::operators::compute_aggregations_with_groupby(</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input-&gt;toBlazingTableView(),<sp/>aggregation_input_expressions,<sp/>this-&gt;aggregation_types,<sp/>aggregation_column_assigned_aliases,<sp/>group_column_indices);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;addToCache(std::move(columns));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rmm::bad_alloc&amp;<sp/>e){</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::RETRY,<sp/>std::string(e.what()),<sp/>std::move(inputs)};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e){</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::FAIL,<sp/>std::string(e.what()),<sp/>std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>()};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::SUCCESS,<sp/>std::string(),<sp/>std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>()};</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classral_1_1batch_1_1ComputeAggregateKernel_1ad3f8e41cf0adf95dbe0249a6dd9c1240" refkind="member"><highlight class="normal">kstatus<sp/>ComputeAggregateKernel::run()<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCodeTimer" kindref="compound">CodeTimer</ref><sp/>timer;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr<sp/>&lt;ral::cache::CacheData&gt;<sp/>cache_data<sp/>=<sp/>this-&gt;input_cache()-&gt;pullCacheData();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>RAL_EXPECTS(cache_data<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;In<sp/>ComputeAggregateKernel:<sp/>The<sp/>input<sp/>cache<sp/>data<sp/>cannot<sp/>be<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>case<sp/>UNION<sp/>exists,<sp/>we<sp/>want<sp/>to<sp/>know<sp/>the<sp/>num<sp/>of<sp/>columns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>std::tie(this-&gt;group_column_indices,<sp/>aggregation_input_expressions,<sp/>this-&gt;aggregation_types,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aggregation_column_assigned_aliases)<sp/>=<sp/>ral::operators::parseGroupByExpression(this-&gt;expression,<sp/>cache_data-&gt;num_columns());</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(cache_data<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>){</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::unique_ptr<sp/>&lt;ral::cache::CacheData&gt;<sp/>&gt;<sp/>inputs;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs.push_back(std::move(cache_data));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ral::execution::executor::get_instance()-&gt;add_task(</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move(inputs),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;output_cache(),</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_data<sp/>=<sp/>this-&gt;input_cache()-&gt;pullCacheData();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logger)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;debug(</highlight><highlight class="stringliteral">&quot;{query_id}|{step}|{substep}|{info}|{duration}|kernel_id|{kernel_id}||&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;query_id&quot;</highlight><highlight class="normal">_a=context-&gt;getContextToken(),</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;step&quot;</highlight><highlight class="normal">_a=context-&gt;getQueryStep(),</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;substep&quot;</highlight><highlight class="normal">_a=context-&gt;getQuerySubstep(),</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;Compute<sp/>Aggregate<sp/>Kernel<sp/>tasks<sp/>created&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;duration&quot;</highlight><highlight class="normal">_a=timer.elapsed_time(),</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kernel_id&quot;</highlight><highlight class="normal">_a=this-&gt;get_id());</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(kernel_mutex);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel_cv.wait(lock,[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;tasks.empty()<sp/>||<sp/>ral::execution::executor::get_instance()-&gt;has_exception();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ep<sp/>=<sp/>ral::execution::executor::get_instance()-&gt;last_exception()){</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::rethrow_exception(ep);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logger)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;debug(</highlight><highlight class="stringliteral">&quot;{query_id}|{step}|{substep}|{info}|{duration}|kernel_id|{kernel_id}||&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;query_id&quot;</highlight><highlight class="normal">_a=context-&gt;getContextToken(),</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;step&quot;</highlight><highlight class="normal">_a=context-&gt;getQueryStep(),</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;substep&quot;</highlight><highlight class="normal">_a=context-&gt;getQuerySubstep(),</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;ComputeAggregate<sp/>Kernel<sp/>Completed&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;duration&quot;</highlight><highlight class="normal">_a=timer.elapsed_time(),</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kernel_id&quot;</highlight><highlight class="normal">_a=this-&gt;get_id());</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kstatus::proceed;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="classral_1_1batch_1_1ComputeAggregateKernel_1a08af1468040c590da06edee88cf92f2e" refkind="member"><highlight class="normal">std::pair&lt;bool,<sp/>uint64_t&gt;<sp/>ComputeAggregateKernel::get_estimated_output_num_rows(){</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;aggregation_types.size()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>this-&gt;group_column_indices.size()<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>aggregation<sp/>without<sp/>groupby</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::pair&lt;bool,<sp/>uint64_t&gt;<sp/>total_in<sp/>=<sp/>this-&gt;query_graph-&gt;get_estimated_input_rows_to_kernel(this-&gt;kernel_id);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(total_in.first){</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>out_so_far<sp/>=<sp/>(double)this-&gt;output_.total_bytes_added();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>in_so_far<sp/>=<sp/>(double)this-&gt;total_input_bytes_processed;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(in_so_far<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>(uint64_t)(<sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)total_in.second)<sp/>*out_so_far/in_so_far)<sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/>END<sp/>ComputeAggregateKernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BEGIN<sp/>DistributeAggregateKernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">DistributeAggregateKernel::DistributeAggregateKernel(std::size_t<sp/>kernel_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>queryString,<sp/>std::shared_ptr&lt;Context&gt;<sp/>context,<sp/>std::shared_ptr&lt;ral::cache::graph&gt;<sp/>query_graph)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classral_1_1cache_1_1distributing__kernel" kindref="compound">distributing_kernel</ref>{kernel_id,<sp/>queryString,<sp/>context,<sp/>kernel_type::DistributeAggregateKernel}<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;query_graph<sp/>=<sp/>query_graph;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>set_number_of_message_trackers(1);<sp/></highlight><highlight class="comment">//default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><ref refid="structral_1_1execution_1_1task__result" kindref="compound">ral::execution::task_result</ref><sp/>DistributeAggregateKernel::do_process(std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>inputs,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ral::cache::CacheMachine&gt;<sp/>output,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>cudaStream_t<sp/></highlight><highlight class="comment">/*stream*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::string&gt;&amp;<sp/></highlight><highlight class="comment">/*args*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>input<sp/>=<sp/>inputs[0];</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>num_partitions<sp/>=<sp/>context-&gt;getTotalNodes()<sp/>will<sp/>do<sp/>for<sp/>now,<sp/>but<sp/>may<sp/>want<sp/>a<sp/>function<sp/>to<sp/>determine<sp/>this<sp/>in<sp/>the<sp/>future.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>do<sp/>partition<sp/>into<sp/>something<sp/>other<sp/>than<sp/>the<sp/>number<sp/>of<sp/>nodes,<sp/>then<sp/>we<sp/>have<sp/>to<sp/>use<sp/>part_ids<sp/>and<sp/>change<sp/>up<sp/>more<sp/>of<sp/>the<sp/>logic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_partitions<sp/>=<sp/>this-&gt;context-&gt;getTotalNodes();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>its<sp/>an<sp/>aggregation<sp/>without<sp/>group<sp/>by<sp/>we<sp/>want<sp/>to<sp/>send<sp/>all<sp/>the<sp/>results<sp/>to<sp/>the<sp/>master<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>self_node<sp/>=<sp/>ral::communication::CommunicationData::getInstance().getSelfNode();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(group_column_indices.size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;context-&gt;isMasterNode(self_node))<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>added<sp/>=<sp/>this-&gt;output_.get_cache()-&gt;addToCache(std::move(input),</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(added)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>increment_node_count(self_node.id());</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!set_empty_part_for_non_master_node){<sp/></highlight><highlight class="comment">//<sp/>we<sp/>want<sp/>to<sp/>keep<sp/>in<sp/>the<sp/>non-master<sp/>nodes<sp/>something,<sp/>so<sp/>that<sp/>the<sp/>cache<sp/>is<sp/>not<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>empty<sp/>=</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ral::utilities::create_empty_table(input-&gt;toBlazingTableView());</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>added<sp/>=<sp/>this-&gt;add_to_output_cache(std::move(empty),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_empty_part_for_non_master_node<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(added)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>increment_node_count(self_node.id());</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_message(std::move(input),</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//specific_cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//cache_id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{this-&gt;context-&gt;getMasterNode().id()});<sp/></highlight><highlight class="comment">//target_id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rmm::bad_alloc&amp;<sp/>e){</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::RETRY,<sp/>std::string(e.what()),<sp/>std::move(inputs)};</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e){</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::FAIL,<sp/>std::string(e.what()),<sp/>std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>()};</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CudfTableView<sp/>batch_view<sp/>=<sp/>input-&gt;view();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;CudfTableView&gt;<sp/>partitioned;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;CudfTable&gt;<sp/>hashed_data;<sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>table<sp/>alive<sp/>in<sp/>this<sp/>scope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(batch_view.num_rows()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;cudf::size_type&gt;<sp/>hased_data_offsets;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::tie(hashed_data,<sp/>hased_data_offsets)<sp/>=<sp/>cudf::hash_partition(input-&gt;view(),<sp/>columns_to_hash,<sp/>num_partitions);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>offsets<sp/>returned<sp/>by<sp/>hash_partition<sp/>will<sp/>always<sp/>start<sp/>at<sp/>0,<sp/>which<sp/>is<sp/>a<sp/>value<sp/>we<sp/>want<sp/>to<sp/>ignore<sp/>for<sp/>cudf::split</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;cudf::size_type&gt;<sp/>split_indexes(hased_data_offsets.begin()<sp/>+<sp/>1,<sp/>hased_data_offsets.end());</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partitioned<sp/>=<sp/>cudf::split(hashed_data-&gt;view(),<sp/>split_indexes);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>copy<sp/>empty<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_partitions;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partitioned.push_back(batch_view);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;ral::frame::BlazingTableView&gt;<sp/>partitions;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>partition<sp/>:<sp/>partitioned)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partitions.push_back(<ref refid="classral_1_1frame_1_1BlazingTableView" kindref="compound">ral::frame::BlazingTableView</ref>(partition,<sp/>input-&gt;names()));</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scatter(partitions,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.get(),</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//message_id_prefix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//cache_id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rmm::bad_alloc&amp;<sp/>e){</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::RETRY,<sp/>std::string(e.what()),<sp/>std::move(inputs)};</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e){</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::FAIL,<sp/>std::string(e.what()),<sp/>std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>()};</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::SUCCESS,<sp/>std::string(),<sp/>std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>()};</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="classral_1_1batch_1_1DistributeAggregateKernel_1a9508b135d44027058ce72ace2ffba98f" refkind="member"><highlight class="normal">kstatus<sp/>DistributeAggregateKernel::run()<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCodeTimer" kindref="compound">CodeTimer</ref><sp/>timer;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr<sp/>&lt;ral::cache::CacheData&gt;<sp/>cache_data<sp/>=<sp/>this-&gt;input_cache()-&gt;pullCacheData();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>case<sp/>UNION<sp/>exists,<sp/>we<sp/>want<sp/>to<sp/>know<sp/>the<sp/>num<sp/>of<sp/>columns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>std::tie(group_column_indices,<sp/>aggregation_input_expressions,<sp/>aggregation_types,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aggregation_column_assigned_aliases)<sp/>=<sp/>ral::operators::parseGroupByExpression(this-&gt;expression,<sp/>cache_data-&gt;num_columns());</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>want<sp/>to<sp/>update<sp/>the<sp/>`columns_to_hash`<sp/>because<sp/>the<sp/>input<sp/>could<sp/>have<sp/>more<sp/>columns<sp/>after<sp/>ComputeAggregateKernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>std::tie(columns_to_hash,<sp/>std::ignore,<sp/>std::ignore,<sp/>std::ignore)<sp/>=<sp/>ral::operators::modGroupByParametersPostComputeAggregations(group_column_indices,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aggregation_types,<sp/>cache_data-&gt;names());</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(cache_data<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>){</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::unique_ptr<sp/>&lt;ral::cache::CacheData&gt;<sp/>&gt;<sp/>inputs;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs.push_back(std::move(cache_data));</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ral::execution::executor::get_instance()-&gt;add_task(</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move(inputs),</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;output_cache(),</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_data<sp/>=<sp/>this-&gt;input_cache()-&gt;pullCacheData();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logger)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;debug(</highlight><highlight class="stringliteral">&quot;{query_id}|{step}|{substep}|{info}|{duration}|kernel_id|{kernel_id}||&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;query_id&quot;</highlight><highlight class="normal">_a=context-&gt;getContextToken(),</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;step&quot;</highlight><highlight class="normal">_a=context-&gt;getQueryStep(),</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;substep&quot;</highlight><highlight class="normal">_a=context-&gt;getQuerySubstep(),</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;DistributeAggregate<sp/>Kernel<sp/>tasks<sp/>created&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;duration&quot;</highlight><highlight class="normal">_a=timer.elapsed_time(),</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kernel_id&quot;</highlight><highlight class="normal">_a=this-&gt;get_id());</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(kernel_mutex);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel_cv.wait(lock,[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;tasks.empty()<sp/>||<sp/>ral::execution::executor::get_instance()-&gt;has_exception();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ep<sp/>=<sp/>ral::execution::executor::get_instance()-&gt;last_exception()){</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::rethrow_exception(ep);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>send_total_partition_counts(</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//message_prefix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//cache_id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_count<sp/>=<sp/>get_total_partition_counts();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;output_cache()-&gt;wait_for_count(total_count);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logger){</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;debug(</highlight><highlight class="stringliteral">&quot;{query_id}|{step}|{substep}|{info}|{duration}|kernel_id|{kernel_id}||&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;query_id&quot;</highlight><highlight class="normal">_a=context-&gt;getContextToken(),</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;step&quot;</highlight><highlight class="normal">_a=context-&gt;getQueryStep(),</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;substep&quot;</highlight><highlight class="normal">_a=context-&gt;getQuerySubstep(),</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;DistributeAggregate<sp/>Kernel<sp/>Completed&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;duration&quot;</highlight><highlight class="normal">_a=timer.elapsed_time(),</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kernel_id&quot;</highlight><highlight class="normal">_a=this-&gt;get_id());</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kstatus::proceed;</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">//<sp/>END<sp/>DistributeAggregateKernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BEGIN<sp/>MergeAggregateKernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal">MergeAggregateKernel::MergeAggregateKernel(std::size_t<sp/>kernel_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>queryString,<sp/>std::shared_ptr&lt;Context&gt;<sp/>context,<sp/>std::shared_ptr&lt;ral::cache::graph&gt;<sp/>query_graph)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classral_1_1cache_1_1kernel" kindref="compound">kernel</ref>{kernel_id,<sp/>queryString,<sp/>context,<sp/>kernel_type::MergeAggregateKernel}<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;query_graph<sp/>=<sp/>query_graph;</highlight></codeline>
<codeline lineno="275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><ref refid="structral_1_1execution_1_1task__result" kindref="compound">ral::execution::task_result</ref><sp/>MergeAggregateKernel::do_process(std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>inputs,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ral::cache::CacheMachine&gt;<sp/>output,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>cudaStream_t<sp/></highlight><highlight class="comment">/*stream*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::string&gt;&amp;<sp/></highlight><highlight class="comment">/*args*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>ral::frame::BlazingTableView<sp/>&gt;<sp/>tableViewsToConcat;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>inputs.size();<sp/>i++){</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableViewsToConcat.emplace_back(inputs[i]-&gt;toBlazingTableView());</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCodeTimer" kindref="compound">CodeTimer</ref><sp/>eventTimer;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ral::utilities::checkIfConcatenatingStringsWillOverflow(tableViewsToConcat))<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logger)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;warn(</highlight><highlight class="stringliteral">&quot;{query_id}|{step}|{substep}|{info}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;query_id&quot;</highlight><highlight class="normal">_a=(context<sp/>?<sp/>std::to_string(context-&gt;getContextToken())<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;step&quot;</highlight><highlight class="normal">_a=(context<sp/>?<sp/>std::to_string(context-&gt;getQueryStep())<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;substep&quot;</highlight><highlight class="normal">_a=(context<sp/>?<sp/>std::to_string(context-&gt;getQuerySubstep())<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;In<sp/>MergeAggregateKernel::run<sp/>Concatenating<sp/>Strings<sp/>will<sp/>overflow<sp/>strings<sp/>length&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>concatenated<sp/>=<sp/>ral::utilities::concatTables(tableViewsToConcat);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>log_input_num_rows<sp/>=<sp/>concatenated<sp/>?<sp/>concatenated-&gt;num_rows()<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>log_input_num_bytes<sp/>=<sp/>concatenated<sp/>?<sp/>concatenated-&gt;sizeInBytes()<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>group_column_indices;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>aggregation_input_expressions,<sp/>aggregation_column_assigned_aliases;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;AggregateKind&gt;<sp/>aggregation_types;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::tie(group_column_indices,<sp/>aggregation_input_expressions,<sp/>aggregation_types,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aggregation_column_assigned_aliases)<sp/>=<sp/>ral::operators::parseGroupByExpression(this-&gt;expression,concatenated-&gt;num_columns());</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>mod_group_column_indices;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>mod_aggregation_input_expressions,<sp/>mod_aggregation_column_assigned_aliases,<sp/>merging_column_names;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;AggregateKind&gt;<sp/>mod_aggregation_types;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::tie(mod_group_column_indices,<sp/>mod_aggregation_input_expressions,<sp/>mod_aggregation_types,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mod_aggregation_column_assigned_aliases)<sp/>=<sp/>ral::operators::modGroupByParametersPostComputeAggregations(</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>group_column_indices,<sp/>aggregation_types,<sp/>concatenated-&gt;names());</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>columns<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(aggregation_types.size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>columns<sp/>=<sp/>ral::operators::compute_groupby_without_aggregations(</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>concatenated-&gt;toBlazingTableView(),<sp/>mod_group_column_indices);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(group_column_indices.size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>aggregations<sp/>without<sp/>groupby<sp/>are<sp/>only<sp/>merged<sp/>on<sp/>the<sp/>master<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>context-&gt;isMasterNode(ral::communication::CommunicationData::getInstance().getSelfNode())<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>columns<sp/>=<sp/>ral::operators::compute_aggregations_without_groupby(</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>concatenated-&gt;toBlazingTableView(),<sp/>mod_aggregation_input_expressions,<sp/>mod_aggregation_types,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mod_aggregation_column_assigned_aliases);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>aggregations<sp/>without<sp/>groupby<sp/>the<sp/>distribution<sp/>phase<sp/>should<sp/>deposit<sp/>an<sp/>empty<sp/>dataframe<sp/>with<sp/>the<sp/>right<sp/>schema<sp/>into<sp/>the<sp/>cache,<sp/>which<sp/>is<sp/>then<sp/>output<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>columns<sp/>=<sp/>std::move(concatenated);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>columns<sp/>=<sp/>ral::operators::compute_aggregations_with_groupby(</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>concatenated-&gt;toBlazingTableView(),<sp/>mod_aggregation_input_expressions,<sp/>mod_aggregation_types,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mod_aggregation_column_assigned_aliases,<sp/>mod_group_column_indices);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventTimer.stop();</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>log_output_num_rows<sp/>=<sp/>columns-&gt;num_rows();</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>log_output_num_bytes<sp/>=<sp/>columns-&gt;sizeInBytes();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;addToCache(std::move(columns));</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>columns<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rmm::bad_alloc&amp;<sp/>e){</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::RETRY,<sp/>std::string(e.what()),<sp/>std::move(inputs)};</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e){</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::FAIL,<sp/>std::string(e.what()),<sp/>std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>()};</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::SUCCESS,<sp/>std::string(),<sp/>std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>()};</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="classral_1_1batch_1_1MergeAggregateKernel_1aaab8112819acc0c2f17fc0e518cfe266" refkind="member"><highlight class="normal">kstatus<sp/>MergeAggregateKernel::run()<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCodeTimer" kindref="compound">CodeTimer</ref><sp/>timer;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>Kernel<sp/>needs<sp/>all<sp/>of<sp/>the<sp/>input<sp/>before<sp/>it<sp/>can<sp/>do<sp/>any<sp/>output.<sp/>So<sp/>lets<sp/>wait<sp/>until<sp/>all<sp/>the<sp/>input<sp/>is<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;input_cache()-&gt;wait_until_finished();</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>batch_count=0;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::unique_ptr<sp/>&lt;ral::cache::CacheData&gt;<sp/>&gt;<sp/>inputs;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(this-&gt;input_cache()-&gt;wait_for_next()){</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr<sp/>&lt;ral::cache::CacheData&gt;<sp/>cache_data<sp/>=<sp/>this-&gt;input_cache()-&gt;pullCacheData();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cache_data<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs.push_back(std::move(cache_data));</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>batch_count++;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ral::execution::executor::get_instance()-&gt;add_task(</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move(inputs),</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;output_cache(),</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logger){</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;debug(</highlight><highlight class="stringliteral">&quot;{query_id}|{step}|{substep}|{info}|{duration}|kernel_id|{kernel_id}||&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;query_id&quot;</highlight><highlight class="normal">_a=context-&gt;getContextToken(),</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;step&quot;</highlight><highlight class="normal">_a=context-&gt;getQueryStep(),</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;substep&quot;</highlight><highlight class="normal">_a=context-&gt;getQuerySubstep(),</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;Merge<sp/>Aggregate<sp/>Kernel<sp/>tasks<sp/>created&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;duration&quot;</highlight><highlight class="normal">_a=timer.elapsed_time(),</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kernel_id&quot;</highlight><highlight class="normal">_a=this-&gt;get_id());</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(kernel_mutex);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kernel_cv.wait(lock,[</highlight><highlight class="keyword">this</highlight><highlight class="normal">]{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;tasks.empty()<sp/>||<sp/>ral::execution::executor::get_instance()-&gt;has_exception();</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ep<sp/>=<sp/>ral::execution::executor::get_instance()-&gt;last_exception()){</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::rethrow_exception(ep);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logger){</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;error(</highlight><highlight class="stringliteral">&quot;{query_id}|{step}|{substep}|{info}|{duration}||||&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;query_id&quot;</highlight><highlight class="normal">_a=context-&gt;getContextToken(),</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;step&quot;</highlight><highlight class="normal">_a=context-&gt;getQueryStep(),</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;substep&quot;</highlight><highlight class="normal">_a=context-&gt;getQuerySubstep(),</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;In<sp/>MergeAggregate<sp/>kernel<sp/>for<sp/>{}.<sp/>What:<sp/>{}&quot;</highlight><highlight class="normal">_format(expression,<sp/>e.what()),</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;duration&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logger){</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;debug(</highlight><highlight class="stringliteral">&quot;{query_id}|{step}|{substep}|{info}|{duration}|kernel_id|{kernel_id}||&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;query_id&quot;</highlight><highlight class="normal">_a=context-&gt;getContextToken(),</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;step&quot;</highlight><highlight class="normal">_a=context-&gt;getQueryStep(),</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;substep&quot;</highlight><highlight class="normal">_a=context-&gt;getQuerySubstep(),</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;MergeAggregate<sp/>Kernel<sp/>Completed&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;duration&quot;</highlight><highlight class="normal">_a=timer.elapsed_time(),</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kernel_id&quot;</highlight><highlight class="normal">_a=this-&gt;get_id());</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kstatus::proceed;</highlight></codeline>
<codeline lineno="414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="comment">//<sp/>END<sp/>MergeAggregateKernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>batch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ral</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/BatchAggregationProcessing.cpp"/>
  </compounddef>
</doxygen>
