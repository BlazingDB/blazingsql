<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classral_1_1cache_1_1distributing__kernel" kind="class" language="C++" prot="public">
    <compoundname>ral::cache::distributing_kernel</compoundname>
    <basecompoundref refid="classral_1_1cache_1_1kernel" prot="public" virt="non-virtual">ral::cache::kernel</basecompoundref>
    <derivedcompoundref refid="classral_1_1batch_1_1DistributeAggregateKernel" prot="public" virt="non-virtual">ral::batch::DistributeAggregateKernel</derivedcompoundref>
    <derivedcompoundref refid="classral_1_1batch_1_1JoinPartitionKernel" prot="public" virt="non-virtual">ral::batch::JoinPartitionKernel</derivedcompoundref>
    <derivedcompoundref refid="classral_1_1batch_1_1LimitKernel" prot="public" virt="non-virtual">ral::batch::LimitKernel</derivedcompoundref>
    <derivedcompoundref refid="classral_1_1batch_1_1PartitionKernel" prot="public" virt="non-virtual">ral::batch::PartitionKernel</derivedcompoundref>
    <derivedcompoundref refid="classral_1_1batch_1_1SortAndSampleKernel" prot="public" virt="non-virtual">ral::batch::SortAndSampleKernel</derivedcompoundref>
    <includes refid="distributing__kernel_8h" local="no">distributing_kernel.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classral_1_1cache_1_1distributing__kernel_1afd215335a3ae82c784d0f95160545f63" prot="private" static="no" mutable="no">
        <type>const <ref refid="classblazingdb_1_1transport_1_1Node" kindref="compound">blazingdb::transport::Node</ref> &amp;</type>
        <definition>const blazingdb::transport::Node&amp; ral::cache::distributing_kernel::node</definition>
        <argsstring></argsstring>
        <name>node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stores the reference of the current node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/distributing_kernel.h" line="154" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/distributing_kernel.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classral_1_1cache_1_1distributing__kernel_1a7c3eb0410298e1d9ea15c3f4bdcaec47" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::map&lt; std::string, std::atomic&lt; size_t &gt; &gt; &gt;</type>
        <definition>std::vector&lt;std::map&lt;std::string, std::atomic&lt;size_t&gt; &gt; &gt; ral::cache::distributing_kernel::node_count</definition>
        <argsstring></argsstring>
        <name>node_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector of maps that stores the message count associated to a node. Each vector corresponds to a message tracker. It&apos;s thread-safe. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/distributing_kernel.h" line="155" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/distributing_kernel.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classral_1_1cache_1_1distributing__kernel_1aafe48d1270df1cdc30db68f60d0b95c4" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; std::string &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;std::string&gt; &gt; ral::cache::distributing_kernel::messages_to_wait_for</definition>
        <argsstring></argsstring>
        <name>messages_to_wait_for</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Vector of vectors of the messages registered to wait for. Each vector corresponds to a message tracker. It&apos;s thread-safe. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/distributing_kernel.h" line="156" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/distributing_kernel.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classral_1_1cache_1_1distributing__kernel_1a1790074f9a780576fc5724598a438185" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex ral::cache::distributing_kernel::messages_to_wait_for_mutex</definition>
        <argsstring></argsstring>
        <name>messages_to_wait_for_mutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/distributing_kernel.h" line="157" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/distributing_kernel.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classral_1_1cache_1_1distributing__kernel_1a7dd5d1d4ee0081e8570a893209d3c4bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ral::cache::distributing_kernel::distributing_kernel</definition>
        <argsstring>(std::size_t kernel_id, std::string expr, std::shared_ptr&lt; Context &gt; context, kernel_type kernel_type_id)</argsstring>
        <name>distributing_kernel</name>
        <param>
          <type>std::size_t</type>
          <declname>kernel_id</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classblazingdb_1_1manager_1_1Context" kindref="compound">Context</ref> &gt;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>kernel_type</type>
          <declname>kernel_type_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor for the <ref refid="classral_1_1cache_1_1distributing__kernel" kindref="compound">distributing_kernel</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kernel_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Current kernel identifier. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>expr</parametername>
</parameternamelist>
<parameterdescription>
<para>Original logical expression that the kernel will execute. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Shared context associated to the running query. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kernel_type_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier representing the kernel type. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/distributing_kernel.h" line="28" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/distributing_kernel.cpp" bodystart="7" bodyend="13"/>
        <references refid="classral_1_1cache_1_1kernel_1a2fd708656cb056a41ec635b8bdc4acfe" compoundref="kernel_8h" startline="249">ral::cache::kernel::kernel_id</references>
        <references refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" compoundref="kernel_8h" startline="254">ral::cache::kernel::context</references>
      </memberdef>
      <memberdef kind="function" id="classral_1_1cache_1_1distributing__kernel_1aacddbb29a0760b7d19cf52d3e5a4ff84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string ral::cache::distributing_kernel::kernel_name</definition>
        <argsstring>()</argsstring>
        <name>kernel_name</name>
        <reimplements refid="classral_1_1cache_1_1kernel_1aafcb0f431c87f166a778a6cce0d36d51">kernel_name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/distributing_kernel.h" line="33" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/distributing_kernel.h" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classral_1_1cache_1_1distributing__kernel_1a6466f289452c10450861276054b751da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ral::cache::distributing_kernel::set_number_of_message_trackers</definition>
        <argsstring>(std::size_t num_message_trackers)</argsstring>
        <name>set_number_of_message_trackers</name>
        <param>
          <type>std::size_t</type>
          <declname>num_message_trackers</declname>
        </param>
        <briefdescription>
<para>Resizes the vector of the message trackers. Keeping more than one message tracker is useful for example for joins where we must keep track of separately for left and right partitions. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num_message_trackers</parametername>
</parameternamelist>
<parameterdescription>
<para>The new number of the message trackers. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/distributing_kernel.h" line="42" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/distributing_kernel.cpp" bodystart="15" bodyend="26"/>
        <references refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" compoundref="kernel_8h" startline="254">ral::cache::kernel::context</references>
        <referencedby refid="classral_1_1batch_1_1PartitionSingleNodeKernel_1a5af293b33505bec1e9fb66f9bb9d29af" compoundref="BatchOrderByProcessing_8cpp" startline="43" endline="93">ral::batch::PartitionSingleNodeKernel::run</referencedby>
        <referencedby refid="classral_1_1batch_1_1SortAndSampleKernel_1a6e97bc1286a0e8d8273556d56372fa56" compoundref="BatchOrderByProcessing_8cpp" startline="271" endline="331">ral::batch::SortAndSampleKernel::run</referencedby>
        <referencedby refid="classral_1_1batch_1_1MergeStreamKernel_1a7d89339b2f4f3adecda2fe64b47948cd" compoundref="BatchOrderByProcessing_8cpp" startline="495" endline="564">ral::batch::MergeStreamKernel::run</referencedby>
      </memberdef>
      <memberdef kind="function" id="classral_1_1cache_1_1distributing__kernel_1aa2c88f7cefd4bb5eee4058c7059c277e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ral::cache::distributing_kernel::send_message</definition>
        <argsstring>(std::unique_ptr&lt; ral::frame::BlazingTable &gt; table, bool specific_cache, std::string cache_id, std::vector&lt; std::string &gt; target_ids, std::string message_id_prefix=&quot;&quot;, bool always_add=false, bool wait_for=false, std::size_t message_tracker_idx=0, ral::cache::MetadataDictionary extra_metadata={})</argsstring>
        <name>send_message</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classral_1_1frame_1_1BlazingTable" kindref="compound">ral::frame::BlazingTable</ref> &gt;</type>
          <declname>table</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>specific_cache</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>cache_id</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt;</type>
          <declname>target_ids</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>message_id_prefix</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>always_add</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>wait_for</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>message_tracker_idx</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classral_1_1cache_1_1MetadataDictionary" kindref="compound">ral::cache::MetadataDictionary</ref></type>
          <declname>extra_metadata</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Sends a table with their corresponding metadata. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>The table to be sent. If table is a nullptr, an empty table is sent anyways. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>specific_cache</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates if a message should be routed to a specific cache or to the global input cache. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cache_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates what cache a message should be routed to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of workers that will be receiving this message. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message_id_prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>The prefix of the identifier of this message. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>always_add</parametername>
</parameternamelist>
<parameterdescription>
<para>Forces to always add the table to the output cache. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wait_for</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates if this message must be registered to wait for back. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message_tracker_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The message tracker index. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>extra_metadata</parametername>
</parameternamelist>
<parameterdescription>
<para>The cache identifier. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/distributing_kernel.h" line="57" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/distributing_kernel.cpp" bodystart="30" bodyend="102"/>
        <references refid="classral_1_1cache_1_1MetadataDictionary_1a99828bf2a71b8e06d568420e5c2b460d" compoundref="CacheData_8h" startline="72" endline="74">ral::cache::MetadataDictionary::add_value</references>
        <references refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" compoundref="kernel_8h" startline="254">ral::cache::kernel::context</references>
        <references refid="classral_1_1cache_1_1kernel_1a2fd708656cb056a41ec635b8bdc4acfe" compoundref="kernel_8h" startline="249">ral::cache::kernel::kernel_id</references>
        <references refid="classral_1_1cache_1_1MetadataDictionary_1abdc2863d96dc839565f2078471f4c9f7" compoundref="CacheData_8h" startline="111" endline="113">ral::cache::MetadataDictionary::get_values</references>
        <references refid="classral_1_1cache_1_1kernel_1a94c3bd66b93a0e67165d0a54741c19dc" compoundref="kernel_8cpp" startline="31" endline="34">ral::cache::kernel::output_cache</references>
        <references refid="classral_1_1cache_1_1kernel_1a5fbb02292aff165a28ef25e75f0d89bd" compoundref="kernel_8h" startline="253">ral::cache::kernel::query_graph</references>
        <referencedby refid="classral_1_1batch_1_1PartitionSingleNodeKernel_1a5af293b33505bec1e9fb66f9bb9d29af" compoundref="BatchOrderByProcessing_8cpp" startline="43" endline="93">ral::batch::PartitionSingleNodeKernel::run</referencedby>
        <referencedby refid="classral_1_1batch_1_1LimitKernel_1a154ab2ef98ef7be11d3ba6c8dc6db06d" compoundref="BatchOrderByProcessing_8cpp" startline="613" endline="724">ral::batch::LimitKernel::run</referencedby>
        <referencedby refid="classral_1_1cache_1_1distributing__kernel_1a532f4eb42963c4e76199f9250c483a09" compoundref="distributing__kernel_8cpp" startline="113" endline="137">send_total_partition_counts</referencedby>
        <referencedby refid="classral_1_1cache_1_1distributing__kernel_1a943284f948c1f1486b04e6b02cdc3e19" compoundref="distributing__kernel_8cpp" startline="139" endline="167">broadcast</referencedby>
        <referencedby refid="classral_1_1cache_1_1distributing__kernel_1ae2f86983ba3baca3a1f37ad7a6fc9326" compoundref="distributing__kernel_8cpp" startline="170" endline="199">scatter</referencedby>
        <referencedby refid="classral_1_1cache_1_1distributing__kernel_1ac84717592ca882bcae7efd6a20ea2863" compoundref="distributing__kernel_8cpp" startline="201" endline="236">scatterParts</referencedby>
      </memberdef>
      <memberdef kind="function" id="classral_1_1cache_1_1distributing__kernel_1ae2f86983ba3baca3a1f37ad7a6fc9326" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ral::cache::distributing_kernel::scatter</definition>
        <argsstring>(std::vector&lt; ral::frame::BlazingTableView &gt; partitions, ral::cache::CacheMachine *output, std::string message_id_prefix, std::string cache_id, std::size_t message_tracker_idx=0)</argsstring>
        <name>scatter</name>
        <param>
          <type>std::vector&lt; <ref refid="classral_1_1frame_1_1BlazingTableView" kindref="compound">ral::frame::BlazingTableView</ref> &gt;</type>
          <declname>partitions</declname>
        </param>
        <param>
          <type><ref refid="classral_1_1cache_1_1CacheMachine" kindref="compound">ral::cache::CacheMachine</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>message_id_prefix</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>cache_id</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>message_tracker_idx</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Sends each partition to its corresponding nodes. It is assumed that the size of the vector is the same as the number of nodes. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>partitions</parametername>
</parameternamelist>
<parameterdescription>
<para>The table partitions to be sent. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The output cache. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message_id_prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>The prefix of the identifier of this message. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cache_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates what cache a message should be routed to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message_tracker_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The message tracker index. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/distributing_kernel.h" line="77" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/distributing_kernel.cpp" bodystart="170" bodyend="199"/>
        <references refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" compoundref="kernel_8h" startline="254">ral::cache::kernel::context</references>
        <references refid="classral_1_1cache_1_1distributing__kernel_1aa2c88f7cefd4bb5eee4058c7059c277e" compoundref="distributing__kernel_8cpp" startline="30" endline="102">send_message</references>
      </memberdef>
      <memberdef kind="function" id="classral_1_1cache_1_1distributing__kernel_1ac84717592ca882bcae7efd6a20ea2863" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ral::cache::distributing_kernel::scatterParts</definition>
        <argsstring>(std::vector&lt; ral::distribution::NodeColumnView &gt; partitions, std::string message_id_prefix, std::vector&lt; int32_t &gt; part_ids)</argsstring>
        <name>scatterParts</name>
        <param>
          <type>std::vector&lt; ral::distribution::NodeColumnView &gt;</type>
          <declname>partitions</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>message_id_prefix</declname>
        </param>
        <param>
          <type>std::vector&lt; int32_t &gt;</type>
          <declname>part_ids</declname>
        </param>
        <briefdescription>
<para>Sends each partition to its corresponding nodes and corresponding part_id More than one partition can belong to the same node. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>partitions</parametername>
</parameternamelist>
<parameterdescription>
<para>The table partitions to be sent represented as node column views. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message_id_prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>The prefix of the identifier of this message. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>part_ids</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector the same size as partitions, telling which part_id each partition corresponds to. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/distributing_kernel.h" line="91" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/distributing_kernel.cpp" bodystart="201" bodyend="236"/>
        <references refid="classral_1_1cache_1_1distributing__kernel_1aa2c88f7cefd4bb5eee4058c7059c277e" compoundref="distributing__kernel_8cpp" startline="30" endline="102">send_message</references>
        <references refid="classral_1_1cache_1_1kernel_1af6b7b538f6a692393f314a4f1037d4a6" compoundref="kernel_8cpp" startline="41" endline="48">ral::cache::kernel::add_to_output_cache</references>
        <referencedby refid="classral_1_1batch_1_1SortAndSampleKernel_1a6e97bc1286a0e8d8273556d56372fa56" compoundref="BatchOrderByProcessing_8cpp" startline="271" endline="331">ral::batch::SortAndSampleKernel::run</referencedby>
      </memberdef>
      <memberdef kind="function" id="classral_1_1cache_1_1distributing__kernel_1a943284f948c1f1486b04e6b02cdc3e19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ral::cache::distributing_kernel::broadcast</definition>
        <argsstring>(std::unique_ptr&lt; ral::frame::BlazingTable &gt; table, ral::cache::CacheMachine *output, std::string message_id_prefix, std::string cache_id, std::size_t message_tracker_idx=0, bool always_add=false)</argsstring>
        <name>broadcast</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classral_1_1frame_1_1BlazingTable" kindref="compound">ral::frame::BlazingTable</ref> &gt;</type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="classral_1_1cache_1_1CacheMachine" kindref="compound">ral::cache::CacheMachine</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>message_id_prefix</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>cache_id</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>message_tracker_idx</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>always_add</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Sends same table to all other nodes. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>The table to be broadcast </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The output cache. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message_id_prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>The prefix of the identifier of this message. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cache_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates what cache a message should be routed to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message_tracker_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The message tracker index. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>always_add</parametername>
</parameternamelist>
<parameterdescription>
<para>Forces to always send the message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/distributing_kernel.h" line="105" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/distributing_kernel.cpp" bodystart="139" bodyend="167"/>
        <references refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" compoundref="kernel_8h" startline="254">ral::cache::kernel::context</references>
        <references refid="classral_1_1cache_1_1distributing__kernel_1aa2c88f7cefd4bb5eee4058c7059c277e" compoundref="distributing__kernel_8cpp" startline="30" endline="102">send_message</references>
        <referencedby refid="classral_1_1batch_1_1PartitionSingleNodeKernel_1a5af293b33505bec1e9fb66f9bb9d29af" compoundref="BatchOrderByProcessing_8cpp" startline="43" endline="93">ral::batch::PartitionSingleNodeKernel::run</referencedby>
      </memberdef>
      <memberdef kind="function" id="classral_1_1cache_1_1distributing__kernel_1a532f4eb42963c4e76199f9250c483a09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ral::cache::distributing_kernel::send_total_partition_counts</definition>
        <argsstring>(std::string message_id_prefix, std::string cache_id, std::size_t message_tracker_idx=0)</argsstring>
        <name>send_total_partition_counts</name>
        <param>
          <type>std::string</type>
          <declname>message_id_prefix</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>cache_id</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>message_tracker_idx</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Sends the partition counter to all other nodes. These sent counters represent the number of messages that each node should wait on their end. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message_id_prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>The prefix of the identifier of this message. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cache_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Indicates what cache a message should be routed to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message_tracker_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The message tracker index. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/distributing_kernel.h" line="122" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/distributing_kernel.cpp" bodystart="113" bodyend="137"/>
        <references refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" compoundref="kernel_8h" startline="254">ral::cache::kernel::context</references>
        <references refid="classral_1_1cache_1_1MetadataDictionary_1a99828bf2a71b8e06d568420e5c2b460d" compoundref="CacheData_8h" startline="72" endline="74">ral::cache::MetadataDictionary::add_value</references>
        <references refid="classral_1_1cache_1_1distributing__kernel_1aa2c88f7cefd4bb5eee4058c7059c277e" compoundref="distributing__kernel_8cpp" startline="30" endline="102">send_message</references>
        <referencedby refid="classral_1_1batch_1_1PartitionKernel_1a5313617a63ab0fb23a0e4211399f439f" compoundref="BatchOrderByProcessing_8cpp" startline="373" endline="458">ral::batch::PartitionKernel::run</referencedby>
      </memberdef>
      <memberdef kind="function" id="classral_1_1cache_1_1distributing__kernel_1ae5f1a597fc3716c344b54b6d0d6af311" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ral::cache::distributing_kernel::get_total_partition_counts</definition>
        <argsstring>(std::size_t message_tracker_idx=0)</argsstring>
        <name>get_total_partition_counts</name>
        <param>
          <type>std::size_t</type>
          <declname>message_tracker_idx</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Get the total partition counters associated to a message tracker. The total counter returned by this function usually is the input for function <ref refid="classral_1_1cache_1_1WaitingQueue_1abd7d9824f1b89ead2c937e1c6d64ba4f" kindref="member">WaitingQueue::wait_for_count()</ref> that allows waiting for the arrival of a certain number of messages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message_tracker_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The message tracker index. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/distributing_kernel.h" line="135" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/distributing_kernel.cpp" bodystart="104" bodyend="111"/>
        <references refid="classral_1_1cache_1_1kernel_1a5fbb02292aff165a28ef25e75f0d89bd" compoundref="kernel_8h" startline="253">ral::cache::kernel::query_graph</references>
        <referencedby refid="classral_1_1batch_1_1PartitionKernel_1a5313617a63ab0fb23a0e4211399f439f" compoundref="BatchOrderByProcessing_8cpp" startline="373" endline="458">ral::batch::PartitionKernel::run</referencedby>
      </memberdef>
      <memberdef kind="function" id="classral_1_1cache_1_1distributing__kernel_1a304a30bf1847aab1dd6a9779bbc80929" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ral::cache::distributing_kernel::increment_node_count</definition>
        <argsstring>(std::string node_id, std::size_t message_tracker_idx=0)</argsstring>
        <name>increment_node_count</name>
        <param>
          <type>std::string</type>
          <declname>node_id</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>message_tracker_idx</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Increments by one the corresponding node counter associated to the node identifier and the message tracker identifier. Every time data is added to a cache, the node counter must be incremented by one. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The node identifier. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message_tracker_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The message tracker index. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/distributing_kernel.h" line="146" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/distributing_kernel.cpp" bodystart="238" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="classral_1_1cache_1_1distributing__kernel_1a19afe37abf9e6a2f29f2a83d45ecf093" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ral::cache::distributing_kernel::~distributing_kernel</definition>
        <argsstring>()=default</argsstring>
        <name>~distributing_kernel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/distributing_kernel.h" line="151" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classral_1_1cache_1_1distributing__kernel" kindref="compound">distributing_kernel</ref> interface allows kernels calling distributing primitives. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="188">
        <label>ral::batch::JoinPartitionKernel</label>
        <link refid="classral_1_1batch_1_1JoinPartitionKernel"/>
        <childnode refid="185" relation="public-inheritance">
        </childnode>
      </node>
      <node id="191">
        <label>ral::batch::SortAndSampleKernel</label>
        <link refid="classral_1_1batch_1_1SortAndSampleKernel"/>
        <childnode refid="185" relation="public-inheritance">
        </childnode>
      </node>
      <node id="185">
        <label>ral::cache::distributing_kernel</label>
        <link refid="classral_1_1cache_1_1distributing__kernel"/>
        <childnode refid="186" relation="public-inheritance">
        </childnode>
      </node>
      <node id="186">
        <label>ral::cache::kernel</label>
        <link refid="classral_1_1cache_1_1kernel"/>
      </node>
      <node id="189">
        <label>ral::batch::LimitKernel</label>
        <link refid="classral_1_1batch_1_1LimitKernel"/>
        <childnode refid="185" relation="public-inheritance">
        </childnode>
      </node>
      <node id="190">
        <label>ral::batch::PartitionKernel</label>
        <link refid="classral_1_1batch_1_1PartitionKernel"/>
        <childnode refid="185" relation="public-inheritance">
        </childnode>
      </node>
      <node id="187">
        <label>ral::batch::DistributeAggregateKernel</label>
        <link refid="classral_1_1batch_1_1DistributeAggregateKernel"/>
        <childnode refid="185" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="194">
        <label>ral::cache::port</label>
        <link refid="classral_1_1cache_1_1port"/>
        <childnode refid="193" relation="usage">
          <edgelabel>kernel_</edgelabel>
        </childnode>
      </node>
      <node id="192">
        <label>ral::cache::distributing_kernel</label>
        <link refid="classral_1_1cache_1_1distributing__kernel"/>
        <childnode refid="193" relation="public-inheritance">
        </childnode>
      </node>
      <node id="193">
        <label>ral::cache::kernel</label>
        <link refid="classral_1_1cache_1_1kernel"/>
        <childnode refid="194" relation="usage">
          <edgelabel>input_</edgelabel>
          <edgelabel>output_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/distributing_kernel.h" line="19" column="1" bodyfile="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/distributing_kernel.h" bodystart="19" bodyend="158"/>
    <listofallmembers>
      <member refid="classral_1_1cache_1_1kernel_1a9b0a80f937f10357ae62638b6f0461d4" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>add_task</name></member>
      <member refid="classral_1_1cache_1_1kernel_1af6b7b538f6a692393f314a4f1037d4a6" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>add_to_output_cache</name></member>
      <member refid="classral_1_1cache_1_1kernel_1ad8cd102392bbece14178c0ebf9f0c6bc" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>add_to_output_cache</name></member>
      <member refid="classral_1_1cache_1_1kernel_1a94e93c7bb81d9a3a7729fa84a7cf07c1" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>add_to_output_cache</name></member>
      <member refid="classral_1_1cache_1_1distributing__kernel_1a943284f948c1f1486b04e6b02cdc3e19" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>broadcast</name></member>
      <member refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>context</name></member>
      <member refid="classral_1_1cache_1_1distributing__kernel_1a7dd5d1d4ee0081e8570a893209d3c4bf" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>distributing_kernel</name></member>
      <member refid="classral_1_1cache_1_1kernel_1aa8d19c5f112f8965ea2f9999fb5fd625" prot="public" virt="virtual"><scope>ral::cache::distributing_kernel</scope><name>do_process</name></member>
      <member refid="classral_1_1cache_1_1kernel_1a33a881d5e40d033e53a73f3c7ede5d03" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>estimate_operating_bytes</name></member>
      <member refid="classral_1_1cache_1_1kernel_1a37da9a64d455f2b833e1e7576c9a17d2" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>estimate_output_bytes</name></member>
      <member refid="classral_1_1cache_1_1kernel_1a8ac24c565e0d29b390d40e7ef3366486" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>execution_done</name></member>
      <member refid="classral_1_1cache_1_1kernel_1a0619a9c1e4952dc353dcfa079910a84a" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>expression</name></member>
      <member refid="classral_1_1cache_1_1kernel_1a3c5beb224576167cd7f9488e68d8ff62" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>finished_tasks</name></member>
      <member refid="classral_1_1cache_1_1kernel_1a6d078d50dd69a9444fcd5d73f378e2d1" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>get_context</name></member>
      <member refid="classral_1_1cache_1_1kernel_1abf40aaa022e3bf38c261977d0c2170cb" prot="public" virt="virtual"><scope>ral::cache::distributing_kernel</scope><name>get_estimated_output_num_rows</name></member>
      <member refid="classral_1_1cache_1_1kernel_1a33ce6e9907abce1acedb01e236c6812e" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>get_id</name></member>
      <member refid="classral_1_1cache_1_1kernel_1aa9e353759b65c2c53571cf80b0213d31" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>get_message_id</name></member>
      <member refid="classral_1_1cache_1_1distributing__kernel_1ae5f1a597fc3716c344b54b6d0d6af311" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>get_total_partition_counts</name></member>
      <member refid="classral_1_1cache_1_1kernel_1a146246668880ca685f22d208e638578b" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>get_type_id</name></member>
      <member refid="classral_1_1cache_1_1kernel_1a913add84b5ad4c0bb09f7a609fe8e311" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>has_limit_</name></member>
      <member refid="classral_1_1cache_1_1kernel_1a21dc72f0714ddc2b4b2187592d05ba77" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>has_parent</name></member>
      <member refid="classral_1_1cache_1_1distributing__kernel_1a304a30bf1847aab1dd6a9779bbc80929" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>increment_node_count</name></member>
      <member refid="classral_1_1cache_1_1kernel_1a014bae9051f8ae95341be2f967b135c5" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>input_</name></member>
      <member refid="classral_1_1cache_1_1kernel_1aa8af91bb80e9153e307e07c3010c217a" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>input_all_finished</name></member>
      <member refid="classral_1_1cache_1_1kernel_1aac90d80ed296715da2a7736691847270" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>input_cache</name></member>
      <member refid="classral_1_1cache_1_1kernel_1a75d3db3d361445cd14da3186b8b15036" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>input_cache_finished</name></member>
      <member refid="classral_1_1cache_1_1kernel_1a25cd1d59552733027ba6396cd9e41004" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>input_cache_num_rows_added</name></member>
      <member refid="classral_1_1cache_1_1kernel_1a533e4ae37fc18a6c8638f30ee8459d8f" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>kernel</name></member>
      <member refid="classral_1_1cache_1_1kernel_1af711082b1f602bacc21d679d318648f7" prot="protected" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>kernel_cv</name></member>
      <member refid="classral_1_1cache_1_1kernel_1a2fd708656cb056a41ec635b8bdc4acfe" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>kernel_id</name></member>
      <member refid="classral_1_1cache_1_1kernel_1a8e336a4bc07932d5fc243409324cdcc1" prot="protected" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>kernel_mutex</name></member>
      <member refid="classral_1_1cache_1_1distributing__kernel_1aacddbb29a0760b7d19cf52d3e5a4ff84" prot="public" virt="virtual"><scope>ral::cache::distributing_kernel</scope><name>kernel_name</name></member>
      <member refid="classral_1_1cache_1_1kernel_1a923841bcb8d995048c58d51a6c39caf7" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>kernel_type_id</name></member>
      <member refid="classral_1_1cache_1_1kernel_1a415a4613c3eac81c1f65340e0866d26e" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>limit_rows_</name></member>
      <member refid="classral_1_1cache_1_1kernel_1ae891570bebe342865bc0f30ac369efe8" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>logger</name></member>
      <member refid="classral_1_1cache_1_1distributing__kernel_1aafe48d1270df1cdc30db68f60d0b95c4" prot="private" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>messages_to_wait_for</name></member>
      <member refid="classral_1_1cache_1_1distributing__kernel_1a1790074f9a780576fc5724598a438185" prot="private" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>messages_to_wait_for_mutex</name></member>
      <member refid="classral_1_1cache_1_1distributing__kernel_1afd215335a3ae82c784d0f95160545f63" prot="private" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>node</name></member>
      <member refid="classral_1_1cache_1_1distributing__kernel_1a7c3eb0410298e1d9ea15c3f4bdcaec47" prot="private" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>node_count</name></member>
      <member refid="classral_1_1cache_1_1kernel_1a0d4a11f11203e46edff09aafc3935688" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>notify_complete</name></member>
      <member refid="classral_1_1cache_1_1kernel_1aacb25cb9e49377bca219769f0eb82aef" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>notify_fail</name></member>
      <member refid="classral_1_1cache_1_1kernel_1abb0b2c6bdc9e3379cc675e57270b207b" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>operator[]</name></member>
      <member refid="classral_1_1cache_1_1kernel_1a6eac1b9f1e6efb3bb9942ba7bbf66a94" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>output_</name></member>
      <member refid="classral_1_1cache_1_1kernel_1a94c3bd66b93a0e67165d0a54741c19dc" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>output_cache</name></member>
      <member refid="classral_1_1cache_1_1kernel_1ad1b8b87c5008b3bce16fe45da84eccdd" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>parent_id_</name></member>
      <member refid="classral_1_1cache_1_1kernel_1a45abece009eed9fc7555f55ecc55f5dd" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>process</name></member>
      <member refid="classral_1_1cache_1_1kernel_1a5fbb02292aff165a28ef25e75f0d89bd" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>query_graph</name></member>
      <member refid="classral_1_1cache_1_1kernel_1a735b081cccae9574924e74ea6d293ef7" prot="public" virt="pure-virtual"><scope>ral::cache::distributing_kernel</scope><name>run</name></member>
      <member refid="classral_1_1cache_1_1distributing__kernel_1ae2f86983ba3baca3a1f37ad7a6fc9326" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>scatter</name></member>
      <member refid="classral_1_1cache_1_1distributing__kernel_1ac84717592ca882bcae7efd6a20ea2863" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>scatterParts</name></member>
      <member refid="classral_1_1cache_1_1distributing__kernel_1aa2c88f7cefd4bb5eee4058c7059c277e" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>send_message</name></member>
      <member refid="classral_1_1cache_1_1distributing__kernel_1a532f4eb42963c4e76199f9250c483a09" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>send_total_partition_counts</name></member>
      <member refid="classral_1_1cache_1_1distributing__kernel_1a6466f289452c10450861276054b751da" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>set_number_of_message_trackers</name></member>
      <member refid="classral_1_1cache_1_1kernel_1a150ae499b8aef4669714e791f2bea9e9" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>set_parent</name></member>
      <member refid="classral_1_1cache_1_1kernel_1ae4a8519fe026454fe5385122c1e02615" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>set_type_id</name></member>
      <member refid="classral_1_1cache_1_1kernel_1a24ef14f94bf23f483736043ca6f95b7e" prot="protected" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>tasks</name></member>
      <member refid="classral_1_1cache_1_1kernel_1a57a0078f5ab3991b32e9ea92989eab42" prot="protected" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>total_input_bytes_processed</name></member>
      <member refid="classral_1_1cache_1_1kernel_1a87d2048b2c50e1124eaaed09b3c18758" prot="public" virt="non-virtual"><scope>ral::cache::distributing_kernel</scope><name>total_input_rows_added</name></member>
      <member refid="classral_1_1cache_1_1distributing__kernel_1a19afe37abf9e6a2f29f2a83d45ecf093" prot="public" virt="virtual"><scope>ral::cache::distributing_kernel</scope><name>~distributing_kernel</name></member>
      <member refid="classral_1_1cache_1_1kernel_1a08658078acd31ec27af290f6712fa017" prot="public" virt="virtual"><scope>ral::cache::distributing_kernel</scope><name>~kernel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
