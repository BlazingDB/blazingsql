<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="kernel_8cpp" kind="file" language="C++">
    <compoundname>kernel.cpp</compoundname>
    <includes refid="kernel_8h" local="yes">kernel.h</includes>
    <includes refid="CodeTimer_8h" local="yes">CodeTimer.h</includes>
    <includes refid="CommunicationData_8h" local="yes">communication/CommunicationData.h</includes>
    <incdepgraph>
      <node id="4816">
        <label>atomic</label>
      </node>
      <node id="4855">
        <label>config/GPUManager.cuh</label>
      </node>
      <node id="4850">
        <label>rmm/mr/device/managed_memory_resource.hpp</label>
      </node>
      <node id="4888">
        <label>functional</label>
      </node>
      <node id="4891">
        <label>queue</label>
      </node>
      <node id="4815">
        <label>execution_graph/logic_controllers/CacheMachine.h</label>
        <link refid="CacheMachine_8h_source"/>
        <childnode refid="4816" relation="include">
        </childnode>
        <childnode refid="4817" relation="include">
        </childnode>
        <childnode refid="4814" relation="include">
        </childnode>
        <childnode refid="4818" relation="include">
        </childnode>
        <childnode refid="4819" relation="include">
        </childnode>
        <childnode refid="4811" relation="include">
        </childnode>
        <childnode refid="4813" relation="include">
        </childnode>
        <childnode refid="4820" relation="include">
        </childnode>
        <childnode refid="4821" relation="include">
        </childnode>
        <childnode refid="4822" relation="include">
        </childnode>
        <childnode refid="4823" relation="include">
        </childnode>
        <childnode refid="4827" relation="include">
        </childnode>
        <childnode refid="4829" relation="include">
        </childnode>
        <childnode refid="4840" relation="include">
        </childnode>
        <childnode refid="4842" relation="include">
        </childnode>
        <childnode refid="4858" relation="include">
        </childnode>
        <childnode refid="4826" relation="include">
        </childnode>
        <childnode refid="4859" relation="include">
        </childnode>
        <childnode refid="4869" relation="include">
        </childnode>
        <childnode refid="4872" relation="include">
        </childnode>
        <childnode refid="4881" relation="include">
        </childnode>
        <childnode refid="4882" relation="include">
        </childnode>
      </node>
      <node id="4808">
        <label>/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/kernel.cpp</label>
        <link refid="kernel_8cpp"/>
        <childnode refid="4809" relation="include">
        </childnode>
        <childnode refid="4827" relation="include">
        </childnode>
        <childnode refid="4858" relation="include">
        </childnode>
      </node>
      <node id="4829">
        <label>execution_graph/logic_controllers/LogicPrimitives.h</label>
        <link refid="LogicPrimitives_8h_source"/>
        <childnode refid="4830" relation="include">
        </childnode>
        <childnode refid="4831" relation="include">
        </childnode>
        <childnode refid="4814" relation="include">
        </childnode>
        <childnode refid="4811" relation="include">
        </childnode>
        <childnode refid="4813" relation="include">
        </childnode>
        <childnode refid="4832" relation="include">
        </childnode>
        <childnode refid="4834" relation="include">
        </childnode>
      </node>
      <node id="4867">
        <label>cudf/scalar/scalar_device_view.cuh</label>
      </node>
      <node id="4872">
        <label>communication/messages/GPUComponentMessage.h</label>
        <link refid="GPUComponentMessage_8h_source"/>
        <childnode refid="4821" relation="include">
        </childnode>
        <childnode refid="4860" relation="include">
        </childnode>
        <childnode refid="4861" relation="include">
        </childnode>
        <childnode refid="4862" relation="include">
        </childnode>
        <childnode refid="4835" relation="include">
        </childnode>
        <childnode refid="4841" relation="include">
        </childnode>
        <childnode refid="4873" relation="include">
        </childnode>
        <childnode refid="4820" relation="include">
        </childnode>
        <childnode refid="4814" relation="include">
        </childnode>
        <childnode refid="4819" relation="include">
        </childnode>
        <childnode refid="4874" relation="include">
        </childnode>
        <childnode refid="4875" relation="include">
        </childnode>
        <childnode refid="4876" relation="include">
        </childnode>
        <childnode refid="4877" relation="include">
        </childnode>
        <childnode refid="4833" relation="include">
        </childnode>
        <childnode refid="4878" relation="include">
        </childnode>
        <childnode refid="4879" relation="include">
        </childnode>
        <childnode refid="4822" relation="include">
        </childnode>
        <childnode refid="4880" relation="include">
        </childnode>
        <childnode refid="4829" relation="include">
        </childnode>
        <childnode refid="4834" relation="include">
        </childnode>
      </node>
      <node id="4856">
        <label>sys/sysinfo.h</label>
      </node>
      <node id="4865">
        <label>cudf/scalar/scalar_factories.hpp</label>
      </node>
      <node id="4810">
        <label>kernel_type.h</label>
        <link refid="kernel__type_8h_source"/>
        <childnode refid="4811" relation="include">
        </childnode>
      </node>
      <node id="4836">
        <label>cstdint</label>
      </node>
      <node id="4848">
        <label>rmm/mr/device/owning_wrapper.hpp</label>
      </node>
      <node id="4853">
        <label>rmm/mr/device/logging_resource_adaptor.hpp</label>
      </node>
      <node id="4832">
        <label>execution_graph/logic_controllers/BlazingColumn.h</label>
        <link refid="BlazingColumn_8h_source"/>
        <childnode refid="4833" relation="include">
        </childnode>
        <childnode refid="4830" relation="include">
        </childnode>
        <childnode refid="4831" relation="include">
        </childnode>
        <childnode refid="4814" relation="include">
        </childnode>
        <childnode refid="4811" relation="include">
        </childnode>
        <childnode refid="4813" relation="include">
        </childnode>
      </node>
      <node id="4841">
        <label>transport/Node.h</label>
        <link refid="Node_8h_source"/>
        <childnode refid="4814" relation="include">
        </childnode>
        <childnode refid="4811" relation="include">
        </childnode>
      </node>
      <node id="4876">
        <label>cudf/copying.hpp</label>
      </node>
      <node id="4823">
        <label>error.hpp</label>
        <link refid="error_8hpp_source"/>
        <childnode refid="4824" relation="include">
        </childnode>
        <childnode refid="4813" relation="include">
        </childnode>
        <childnode refid="4825" relation="include">
        </childnode>
        <childnode refid="4826" relation="include">
        </childnode>
      </node>
      <node id="4843">
        <label>cassert</label>
      </node>
      <node id="4849">
        <label>rmm/mr/device/cuda_memory_resource.hpp</label>
      </node>
      <node id="4852">
        <label>rmm/mr/device/arena_memory_resource.hpp</label>
      </node>
      <node id="4874">
        <label>numeric</label>
      </node>
      <node id="4846">
        <label>rmm/cuda_stream_view.hpp</label>
      </node>
      <node id="4811">
        <label>string</label>
      </node>
      <node id="4820">
        <label>map</label>
      </node>
      <node id="4878">
        <label>cudf/null_mask.hpp</label>
      </node>
      <node id="4884">
        <label>kpair.h</label>
        <link refid="kpair_8h_source"/>
        <childnode refid="4812" relation="include">
        </childnode>
        <childnode refid="4809" relation="include">
        </childnode>
      </node>
      <node id="4861">
        <label>spdlog/sinks/basic_file_sink.h</label>
      </node>
      <node id="4834">
        <label>BlazingHostTable.h</label>
        <link refid="BlazingHostTable_8h_source"/>
        <childnode refid="4813" relation="include">
        </childnode>
        <childnode refid="4811" relation="include">
        </childnode>
        <childnode refid="4814" relation="include">
        </childnode>
        <childnode refid="4822" relation="include">
        </childnode>
        <childnode refid="4835" relation="include">
        </childnode>
        <childnode refid="4837" relation="include">
        </childnode>
        <childnode refid="4829" relation="include">
        </childnode>
      </node>
      <node id="4826">
        <label>exception</label>
      </node>
      <node id="4882">
        <label>WaitingQueue.h</label>
        <link refid="WaitingQueue_8h_source"/>
        <childnode refid="4816" relation="include">
        </childnode>
        <childnode refid="4817" relation="include">
        </childnode>
        <childnode refid="4814" relation="include">
        </childnode>
        <childnode refid="4818" relation="include">
        </childnode>
        <childnode refid="4819" relation="include">
        </childnode>
        <childnode refid="4811" relation="include">
        </childnode>
        <childnode refid="4813" relation="include">
        </childnode>
        <childnode refid="4820" relation="include">
        </childnode>
        <childnode refid="4821" relation="include">
        </childnode>
        <childnode refid="4826" relation="include">
        </childnode>
      </node>
      <node id="4840">
        <label>execution_graph/Context.h</label>
        <link refid="Context_8h_source"/>
        <childnode refid="4813" relation="include">
        </childnode>
        <childnode refid="4820" relation="include">
        </childnode>
        <childnode refid="4819" relation="include">
        </childnode>
        <childnode refid="4841" relation="include">
        </childnode>
      </node>
      <node id="4881">
        <label>CacheData.h</label>
        <link refid="CacheData_8h_source"/>
        <childnode refid="4816" relation="include">
        </childnode>
        <childnode refid="4817" relation="include">
        </childnode>
        <childnode refid="4814" relation="include">
        </childnode>
        <childnode refid="4818" relation="include">
        </childnode>
        <childnode refid="4819" relation="include">
        </childnode>
        <childnode refid="4811" relation="include">
        </childnode>
        <childnode refid="4813" relation="include">
        </childnode>
        <childnode refid="4820" relation="include">
        </childnode>
        <childnode refid="4821" relation="include">
        </childnode>
        <childnode refid="4822" relation="include">
        </childnode>
        <childnode refid="4823" relation="include">
        </childnode>
        <childnode refid="4827" relation="include">
        </childnode>
        <childnode refid="4829" relation="include">
        </childnode>
        <childnode refid="4840" relation="include">
        </childnode>
        <childnode refid="4842" relation="include">
        </childnode>
        <childnode refid="4858" relation="include">
        </childnode>
        <childnode refid="4826" relation="include">
        </childnode>
        <childnode refid="4859" relation="include">
        </childnode>
        <childnode refid="4869" relation="include">
        </childnode>
        <childnode refid="4872" relation="include">
        </childnode>
      </node>
      <node id="4859">
        <label>io/data_provider/DataProvider.h</label>
        <link refid="DataProvider_8h_source"/>
        <childnode refid="4821" relation="include">
        </childnode>
        <childnode refid="4860" relation="include">
        </childnode>
        <childnode refid="4861" relation="include">
        </childnode>
        <childnode refid="4862" relation="include">
        </childnode>
        <childnode refid="4863" relation="include">
        </childnode>
        <childnode refid="4864" relation="include">
        </childnode>
        <childnode refid="4865" relation="include">
        </childnode>
        <childnode refid="4822" relation="include">
        </childnode>
        <childnode refid="4866" relation="include">
        </childnode>
        <childnode refid="4867" relation="include">
        </childnode>
        <childnode refid="4820" relation="include">
        </childnode>
        <childnode refid="4814" relation="include">
        </childnode>
        <childnode refid="4813" relation="include">
        </childnode>
        <childnode refid="4868" relation="include">
        </childnode>
        <childnode refid="4829" relation="include">
        </childnode>
      </node>
      <node id="4880">
        <label>cudf/strings/strings_column_view.hpp</label>
      </node>
      <node id="4821">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="4831">
        <label>cudf/table/table_view.hpp</label>
      </node>
      <node id="4887">
        <label>utilities/ctpl_stl.h</label>
        <link refid="ctpl__stl_8h_source"/>
        <childnode refid="4888" relation="include">
        </childnode>
        <childnode refid="4889" relation="include">
        </childnode>
        <childnode refid="4816" relation="include">
        </childnode>
        <childnode refid="4813" relation="include">
        </childnode>
        <childnode refid="4814" relation="include">
        </childnode>
        <childnode refid="4826" relation="include">
        </childnode>
        <childnode refid="4890" relation="include">
        </childnode>
        <childnode refid="4819" relation="include">
        </childnode>
        <childnode refid="4891" relation="include">
        </childnode>
      </node>
      <node id="4870">
        <label>../Schema.h</label>
        <link refid="Schema_8h_source"/>
        <childnode refid="4811" relation="include">
        </childnode>
        <childnode refid="4813" relation="include">
        </childnode>
        <childnode refid="4822" relation="include">
        </childnode>
        <childnode refid="4829" relation="include">
        </childnode>
      </node>
      <node id="4863">
        <label>arrow/io/interfaces.h</label>
      </node>
      <node id="4818">
        <label>condition_variable</label>
      </node>
      <node id="4886">
        <label>ExceptionHandling/BlazingThread.h</label>
      </node>
      <node id="4873">
        <label>communication/messages/MessageUtil.cuh</label>
      </node>
      <node id="4857">
        <label>sys/statvfs.h</label>
      </node>
      <node id="4866">
        <label>cudf/utilities/type_dispatcher.hpp</label>
      </node>
      <node id="4875">
        <label>tuple</label>
      </node>
      <node id="4890">
        <label>future</label>
      </node>
      <node id="4860">
        <label>spdlog/async.h</label>
      </node>
      <node id="4809">
        <label>kernel.h</label>
        <link refid="kernel_8h_source"/>
        <childnode refid="4810" relation="include">
        </childnode>
        <childnode refid="4812" relation="include">
        </childnode>
        <childnode refid="4883" relation="include">
        </childnode>
      </node>
      <node id="4838">
        <label>stack</label>
      </node>
      <node id="4813">
        <label>vector</label>
      </node>
      <node id="4835">
        <label>transport/ColumnTransport.h</label>
        <link refid="ColumnTransport_8h_source"/>
        <childnode refid="4836" relation="include">
        </childnode>
      </node>
      <node id="4879">
        <label>cudf/column/column_factories.hpp</label>
      </node>
      <node id="4877">
        <label>cudf/column/column.hpp</label>
      </node>
      <node id="4839">
        <label>ucp/api/ucp.h</label>
      </node>
      <node id="4862">
        <label>spdlog/sinks/stdout_color_sinks.h</label>
      </node>
      <node id="4837">
        <label>bmr/BufferProvider.h</label>
        <link refid="BufferProvider_8h_source"/>
        <childnode refid="4813" relation="include">
        </childnode>
        <childnode refid="4811" relation="include">
        </childnode>
        <childnode refid="4838" relation="include">
        </childnode>
        <childnode refid="4819" relation="include">
        </childnode>
        <childnode refid="4814" relation="include">
        </childnode>
        <childnode refid="4839" relation="include">
        </childnode>
      </node>
      <node id="4869">
        <label>io/data_parser/DataParser.h</label>
        <link refid="DataParser_8h_source"/>
        <childnode refid="4870" relation="include">
        </childnode>
        <childnode refid="4871" relation="include">
        </childnode>
        <childnode refid="4859" relation="include">
        </childnode>
        <childnode refid="4829" relation="include">
        </childnode>
        <childnode refid="4863" relation="include">
        </childnode>
        <childnode refid="4814" relation="include">
        </childnode>
        <childnode refid="4813" relation="include">
        </childnode>
      </node>
      <node id="4822">
        <label>cudf/types.hpp</label>
      </node>
      <node id="4885">
        <label>bmr/MemoryMonitor.h</label>
        <link refid="MemoryMonitor_8h_source"/>
        <childnode refid="4818" relation="include">
        </childnode>
        <childnode refid="4819" relation="include">
        </childnode>
        <childnode refid="4828" relation="include">
        </childnode>
        <childnode refid="4886" relation="include">
        </childnode>
        <childnode refid="4820" relation="include">
        </childnode>
      </node>
      <node id="4854">
        <label>rmm/mr/device/per_device_resource.hpp</label>
      </node>
      <node id="4871">
        <label>../DataType.h</label>
        <link refid="DataType_8h_source"/>
      </node>
      <node id="4858">
        <label>communication/CommunicationData.h</label>
        <link refid="CommunicationData_8h_source"/>
        <childnode refid="4839" relation="include">
        </childnode>
        <childnode refid="4841" relation="include">
        </childnode>
        <childnode refid="4814" relation="include">
        </childnode>
        <childnode refid="4811" relation="include">
        </childnode>
        <childnode refid="4820" relation="include">
        </childnode>
      </node>
      <node id="4883">
        <label>graph.h</label>
        <link refid="graph_8h_source"/>
        <childnode refid="4809" relation="include">
        </childnode>
        <childnode refid="4884" relation="include">
        </childnode>
        <childnode refid="4815" relation="include">
        </childnode>
        <childnode refid="4885" relation="include">
        </childnode>
        <childnode refid="4887" relation="include">
        </childnode>
      </node>
      <node id="4812">
        <label>port.h</label>
        <link refid="port_8h_source"/>
        <childnode refid="4813" relation="include">
        </childnode>
        <childnode refid="4814" relation="include">
        </childnode>
        <childnode refid="4811" relation="include">
        </childnode>
        <childnode refid="4815" relation="include">
        </childnode>
      </node>
      <node id="4824">
        <label>iostream</label>
      </node>
      <node id="4833">
        <label>cudf/column/column_view.hpp</label>
      </node>
      <node id="4817">
        <label>deque</label>
      </node>
      <node id="4819">
        <label>mutex</label>
      </node>
      <node id="4845">
        <label>cuda_runtime_api.h</label>
      </node>
      <node id="4828">
        <label>chrono</label>
      </node>
      <node id="4868">
        <label>blazingdb/io/FileSystem/Uri.h</label>
      </node>
      <node id="4827">
        <label>CodeTimer.h</label>
        <link refid="CodeTimer_8h_source"/>
        <childnode refid="4828" relation="include">
        </childnode>
      </node>
      <node id="4847">
        <label>rmm/mr/device/device_memory_resource.hpp</label>
      </node>
      <node id="4889">
        <label>thread</label>
      </node>
      <node id="4842">
        <label>bmr/BlazingMemoryResource.h</label>
        <link refid="BlazingMemoryResource_8h_source"/>
        <childnode refid="4843" relation="include">
        </childnode>
        <childnode refid="4816" relation="include">
        </childnode>
        <childnode refid="4844" relation="include">
        </childnode>
        <childnode refid="4845" relation="include">
        </childnode>
        <childnode refid="4846" relation="include">
        </childnode>
        <childnode refid="4847" relation="include">
        </childnode>
        <childnode refid="4848" relation="include">
        </childnode>
        <childnode refid="4849" relation="include">
        </childnode>
        <childnode refid="4850" relation="include">
        </childnode>
        <childnode refid="4851" relation="include">
        </childnode>
        <childnode refid="4852" relation="include">
        </childnode>
        <childnode refid="4853" relation="include">
        </childnode>
        <childnode refid="4854" relation="include">
        </childnode>
        <childnode refid="4855" relation="include">
        </childnode>
        <childnode refid="4856" relation="include">
        </childnode>
        <childnode refid="4857" relation="include">
        </childnode>
      </node>
      <node id="4851">
        <label>rmm/mr/device/pool_memory_resource.hpp</label>
      </node>
      <node id="4844">
        <label>set</label>
      </node>
      <node id="4830">
        <label>cudf/table/table.hpp</label>
      </node>
      <node id="4825">
        <label>cudf/utilities/error.hpp</label>
      </node>
      <node id="4864">
        <label>cudf/scalar/scalar.hpp</label>
      </node>
      <node id="4814">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceral">ral</innernamespace>
    <innernamespace refid="namespaceral_1_1cache">ral::cache</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;kernel.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CodeTimer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;communication/CommunicationData.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceral" kindref="compound">ral</ref><sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">cache<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="classral_1_1cache_1_1kernel_1a533e4ae37fc18a6c8638f30ee8459d8f" refkind="member"><highlight class="normal"><ref refid="classral_1_1cache_1_1kernel_1a533e4ae37fc18a6c8638f30ee8459d8f" kindref="member">kernel::kernel</ref>(std::size_t<sp/>kernel_id,<sp/>std::string<sp/>expr,<sp/>std::shared_ptr&lt;Context&gt;<sp/>context,<sp/>kernel_type<sp/>kernel_type_id)</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>total_input_bytes_processed{0},</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classral_1_1cache_1_1kernel_1a0619a9c1e4952dc353dcfa079910a84a" kindref="member">expression</ref>{expr},</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classral_1_1cache_1_1kernel_1a2fd708656cb056a41ec635b8bdc4acfe" kindref="member">kernel_id</ref>(<ref refid="classral_1_1cache_1_1kernel_1a2fd708656cb056a41ec635b8bdc4acfe" kindref="member">kernel_id</ref>),</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classral_1_1cache_1_1kernel_1ad1b8b87c5008b3bce16fe45da84eccdd" kindref="member">parent_id_</ref>(-1),</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classral_1_1cache_1_1kernel_1a923841bcb8d995048c58d51a6c39caf7" kindref="member">kernel_type_id</ref>{<ref refid="classral_1_1cache_1_1kernel_1a923841bcb8d995048c58d51a6c39caf7" kindref="member">kernel_type_id</ref>},</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>{<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>},</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classral_1_1cache_1_1kernel_1a913add84b5ad4c0bb09f7a609fe8e311" kindref="member">has_limit_</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classral_1_1cache_1_1kernel_1a415a4613c3eac81c1f65340e0866d26e" kindref="member">limit_rows_</ref>(-1),</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger(spdlog::get(</highlight><highlight class="stringliteral">&quot;batch_logger&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;spdlog::logger&gt;<sp/>kernels_logger<sp/>=<sp/>spdlog::get(</highlight><highlight class="stringliteral">&quot;kernels_logger&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(kernels_logger)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kernels_logger-&gt;info(</highlight><highlight class="stringliteral">&quot;{ral_id}|{query_id}|{kernel_id}|{is_kernel}|{kernel_type}|{description}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ral_id&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getNodeIndex(ral::communication::CommunicationData::getInstance().getSelfNode()),</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;query_id&quot;</highlight><highlight class="normal">_a=(this-&gt;<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref><sp/>?<sp/>std::to_string(this-&gt;<ref refid="classral_1_1cache_1_1kernel_1af0347d14d678cfa7205c1387746a2e1b" kindref="member">context</ref>-&gt;getContextToken())<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kernel_id&quot;</highlight><highlight class="normal">_a=this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a33ce6e9907abce1acedb01e236c6812e" kindref="member">get_id</ref>(),</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;is_kernel&quot;</highlight><highlight class="normal">_a=1,<sp/></highlight><highlight class="comment">//true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kernel_type&quot;</highlight><highlight class="normal">_a=get_kernel_type_name(this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a146246668880ca685f22d208e638578b" kindref="member">get_type_id</ref>()),</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;description&quot;</highlight><highlight class="normal">_a=<ref refid="classral_1_1cache_1_1kernel_1a0619a9c1e4952dc353dcfa079910a84a" kindref="member">expression</ref>);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classral_1_1cache_1_1kernel_1a94c3bd66b93a0e67165d0a54741c19dc" refkind="member"><highlight class="normal">std::shared_ptr&lt;ral::cache::CacheMachine&gt;<sp/><ref refid="classral_1_1cache_1_1kernel_1a94c3bd66b93a0e67165d0a54741c19dc" kindref="member">kernel::output_cache</ref>(std::string<sp/>cache_id)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>cache_id<sp/>=<sp/>cache_id.empty()<sp/>?<sp/>std::to_string(this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a33ce6e9907abce1acedb01e236c6812e" kindref="member">get_id</ref>())<sp/>:<sp/>cache_id;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a6eac1b9f1e6efb3bb9942ba7bbf66a94" kindref="member">output_</ref>.get_cache(cache_id);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classral_1_1cache_1_1kernel_1aac90d80ed296715da2a7736691847270" refkind="member"><highlight class="normal">std::shared_ptr&lt;ral::cache::CacheMachine&gt;<sp/><ref refid="classral_1_1cache_1_1kernel_1aac90d80ed296715da2a7736691847270" kindref="member">kernel::input_cache</ref>()<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classral_1_1cache_1_1kernel_1a2fd708656cb056a41ec635b8bdc4acfe" kindref="member">kernel_id</ref><sp/>=<sp/>std::to_string(this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a33ce6e9907abce1acedb01e236c6812e" kindref="member">get_id</ref>());</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a014bae9051f8ae95341be2f967b135c5" kindref="member">input_</ref>.get_cache(<ref refid="classral_1_1cache_1_1kernel_1a2fd708656cb056a41ec635b8bdc4acfe" kindref="member">kernel_id</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classral_1_1cache_1_1kernel_1af6b7b538f6a692393f314a4f1037d4a6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classral_1_1cache_1_1kernel_1af6b7b538f6a692393f314a4f1037d4a6" kindref="member">kernel::add_to_output_cache</ref>(std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>table,<sp/>std::string<sp/>cache_id,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>always_add)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>message_id<sp/>=<sp/><ref refid="classral_1_1cache_1_1kernel_1aa9e353759b65c2c53571cf80b0213d31" kindref="member">get_message_id</ref>();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>message_id<sp/>=<sp/>!cache_id.empty()<sp/>?<sp/>cache_id<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>message_id<sp/>:<sp/>message_id;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>cache_id<sp/>=<sp/>cache_id.empty()<sp/>?<sp/>std::to_string(this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a33ce6e9907abce1acedb01e236c6812e" kindref="member">get_id</ref>())<sp/>:<sp/>cache_id;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>added<sp/>=<sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a6eac1b9f1e6efb3bb9942ba7bbf66a94" kindref="member">output_</ref>.get_cache(cache_id)-&gt;addToCache(std::move(table),<sp/>message_id,<sp/>always_add);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>added;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classral_1_1cache_1_1kernel_1ad8cd102392bbece14178c0ebf9f0c6bc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classral_1_1cache_1_1kernel_1af6b7b538f6a692393f314a4f1037d4a6" kindref="member">kernel::add_to_output_cache</ref>(std::unique_ptr&lt;ral::cache::CacheData&gt;<sp/>cache_data,<sp/>std::string<sp/>cache_id,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>always_add)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>message_id<sp/>=<sp/><ref refid="classral_1_1cache_1_1kernel_1aa9e353759b65c2c53571cf80b0213d31" kindref="member">get_message_id</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>message_id<sp/>=<sp/>!cache_id.empty()<sp/>?<sp/>cache_id<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>message_id<sp/>:<sp/>message_id;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>cache_id<sp/>=<sp/>cache_id.empty()<sp/>?<sp/>std::to_string(this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a33ce6e9907abce1acedb01e236c6812e" kindref="member">get_id</ref>())<sp/>:<sp/>cache_id;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>added<sp/>=<sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a6eac1b9f1e6efb3bb9942ba7bbf66a94" kindref="member">output_</ref>.get_cache(cache_id)-&gt;addCacheData(std::move(cache_data),<sp/>message_id,<sp/>always_add);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>added;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="classral_1_1cache_1_1kernel_1a94e93c7bb81d9a3a7729fa84a7cf07c1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classral_1_1cache_1_1kernel_1af6b7b538f6a692393f314a4f1037d4a6" kindref="member">kernel::add_to_output_cache</ref>(std::unique_ptr&lt;ral::frame::BlazingHostTable&gt;<sp/>host_table,<sp/>std::string<sp/>cache_id)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>message_id<sp/>=<sp/><ref refid="classral_1_1cache_1_1kernel_1aa9e353759b65c2c53571cf80b0213d31" kindref="member">get_message_id</ref>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>message_id<sp/>=<sp/>!cache_id.empty()<sp/>?<sp/>cache_id<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+<sp/>message_id<sp/>:<sp/>message_id;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>cache_id<sp/>=<sp/>cache_id.empty()<sp/>?<sp/>std::to_string(this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a33ce6e9907abce1acedb01e236c6812e" kindref="member">get_id</ref>())<sp/>:<sp/>cache_id;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>added<sp/>=<sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a6eac1b9f1e6efb3bb9942ba7bbf66a94" kindref="member">output_</ref>.get_cache(cache_id)-&gt;addHostFrameToCache(std::move(host_table),<sp/>message_id);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>added;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>function<sp/>gets<sp/>the<sp/>estimated<sp/>num_rows<sp/>for<sp/>the<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>default<sp/>is<sp/>that<sp/>its<sp/>the<sp/>same<sp/>as<sp/>the<sp/>input<sp/>(i.e.<sp/>project,<sp/>sort,<sp/>...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classral_1_1cache_1_1kernel_1abf40aaa022e3bf38c261977d0c2170cb" refkind="member"><highlight class="normal">std::pair&lt;bool,<sp/>uint64_t&gt;<sp/><ref refid="classral_1_1cache_1_1kernel_1abf40aaa022e3bf38c261977d0c2170cb" kindref="member">kernel::get_estimated_output_num_rows</ref>(){</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a5fbb02292aff165a28ef25e75f0d89bd" kindref="member">query_graph</ref>-&gt;get_estimated_input_rows_to_kernel(this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a2fd708656cb056a41ec635b8bdc4acfe" kindref="member">kernel_id</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="classral_1_1cache_1_1kernel_1a45abece009eed9fc7555f55ecc55f5dd" refkind="member"><highlight class="normal"><ref refid="structral_1_1execution_1_1task__result" kindref="compound">ral::execution::task_result</ref><sp/><ref refid="classral_1_1cache_1_1kernel_1a45abece009eed9fc7555f55ecc55f5dd" kindref="member">kernel::process</ref>(std::vector&lt;std::unique_ptr&lt;ral::frame::BlazingTable&gt;&gt;<sp/><sp/>inputs,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ral::cache::CacheMachine&gt;<sp/>output,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::string&gt;&amp;<sp/>args){</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>figure<sp/>out<sp/>if<sp/>this<sp/>can<sp/>be<sp/>re<sp/>enabled;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(this-&gt;has_limit_<sp/>&amp;&amp;<sp/>output-&gt;get_num_rows_added()<sp/>&gt;=<sp/>this-&gt;limit_rows_)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(inputs.size()==0){</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{ral::execution::task_status::SUCCESS,<sp/>std::string(),<sp/>std::vector&lt;<sp/>std::unique_ptr&lt;ral::frame::BlazingTable&gt;<sp/>&gt;<sp/>()};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>input<sp/>:<sp/>inputs){</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes<sp/>+=<sp/>input-&gt;sizeInBytes();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="classral_1_1cache_1_1kernel_1aa8d19c5f112f8965ea2f9999fb5fd625" kindref="member">do_process</ref>(std::move(inputs),<sp/>output,<sp/>stream,<sp/>args);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result.status<sp/>==<sp/>ral::execution::SUCCESS){</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_input_bytes_processed<sp/>+=<sp/>bytes;<sp/></highlight><highlight class="comment">//<sp/>increment<sp/>this<sp/>AFTER<sp/>its<sp/>been<sp/>processed<sp/>successfully</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>logger<sp/>=<sp/>spdlog::get(</highlight><highlight class="stringliteral">&quot;batch_logger&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(logger)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;error(</highlight><highlight class="stringliteral">&quot;|||{info}|||||&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">_a=</highlight><highlight class="stringliteral">&quot;ERROR<sp/>in<sp/>kernel::process<sp/>trying<sp/>to<sp/>do<sp/>do_process.<sp/>Kernel<sp/>name<sp/>is:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>this-&gt;kernel_name()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Kernel<sp/>id<sp/>is:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a2fd708656cb056a41ec635b8bdc4acfe" kindref="member">kernel_id</ref>));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(result);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="classral_1_1cache_1_1kernel_1a9b0a80f937f10357ae62638b6f0461d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classral_1_1cache_1_1kernel_1a9b0a80f937f10357ae62638b6f0461d4" kindref="member">kernel::add_task</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>task_id){</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(kernel_mutex);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;tasks.insert(task_id);</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="classral_1_1cache_1_1kernel_1a0d4a11f11203e46edff09aafc3935688" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classral_1_1cache_1_1kernel_1a0d4a11f11203e46edff09aafc3935688" kindref="member">kernel::notify_complete</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>task_id){</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(kernel_mutex);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;tasks.erase(task_id);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel_cv.notify_one();</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classral_1_1cache_1_1kernel_1aacb25cb9e49377bca219769f0eb82aef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classral_1_1cache_1_1kernel_1aacb25cb9e49377bca219769f0eb82aef" kindref="member">kernel::notify_fail</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>task_id){</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(kernel_mutex);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;tasks.erase(task_id);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel_cv.notify_one();</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>only<sp/>the<sp/>default<sp/>estimate<sp/>of<sp/>the<sp/>bytes<sp/>to<sp/>be<sp/>output<sp/>by<sp/>a<sp/>kernel<sp/>based<sp/>on<sp/>the<sp/>input.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>kernel<sp/>should<sp/>implement<sp/>its<sp/>own<sp/>version<sp/>of<sp/>this,<sp/>if<sp/>its<sp/>possible<sp/>to<sp/>obtain<sp/>a<sp/>better<sp/>estimate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="classral_1_1cache_1_1kernel_1a37da9a64d455f2b833e1e7576c9a17d2" refkind="member"><highlight class="normal">std::size_t<sp/><ref refid="classral_1_1cache_1_1kernel_1a37da9a64d455f2b833e1e7576c9a17d2" kindref="member">kernel::estimate_output_bytes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::unique_ptr&lt;ral::cache::CacheData<sp/>&gt;<sp/>&gt;<sp/>&amp;<sp/>inputs){</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>input_bytes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>input<sp/>:<sp/>inputs)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_bytes<sp/>+=<sp/>input-&gt;sizeInBytes();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>have<sp/>already<sp/>processed,<sp/>then<sp/>we<sp/>can<sp/>estimate<sp/>based<sp/>on<sp/>previous<sp/>inputs<sp/>and<sp/>outputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(total_input_bytes_processed.load()<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(std::size_t)((double)input_bytes<sp/>*<sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)this-&gt;<ref refid="classral_1_1cache_1_1kernel_1a6eac1b9f1e6efb3bb9942ba7bbf66a94" kindref="member">output_</ref>.total_bytes_added()/(double)total_input_bytes_processed.load()));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>have<sp/>not<sp/>already<sp/>any<sp/>batches,<sp/>then<sp/>lets<sp/>estimate<sp/>that<sp/>the<sp/>output<sp/>is<sp/>the<sp/>same<sp/>as<sp/>the<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>input_bytes;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>only<sp/>the<sp/>default<sp/>estimate<sp/>of<sp/>the<sp/>bytes<sp/>needed<sp/>by<sp/>the<sp/>kernel<sp/>to<sp/>perform<sp/>the<sp/>operation<sp/>based<sp/>on<sp/>the<sp/>input.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>kernel<sp/>should<sp/>implement<sp/>its<sp/>own<sp/>version<sp/>of<sp/>this,<sp/>if<sp/>its<sp/>possible<sp/>to<sp/>obtain<sp/>a<sp/>better<sp/>estimate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="classral_1_1cache_1_1kernel_1a33a881d5e40d033e53a73f3c7ede5d03" refkind="member"><highlight class="normal">std::size_t<sp/><ref refid="classral_1_1cache_1_1kernel_1a33a881d5e40d033e53a73f3c7ede5d03" kindref="member">kernel::estimate_operating_bytes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::unique_ptr&lt;ral::cache::CacheData<sp/>&gt;<sp/>&gt;<sp/>&amp;<sp/>inputs){</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>bytes_esimate<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>input<sp/>:<sp/>inputs)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes_esimate<sp/>+=<sp/>input-&gt;sizeInBytes();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bytes_esimate;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>ral</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/tom/Documents/programming/romulo_blazingsql/blazingsql/engine/src/execution_graph/logic_controllers/taskflow/kernel.cpp"/>
  </compounddef>
</doxygen>
